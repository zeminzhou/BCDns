<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="390.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="373" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="373" > </text>
<g id="frames">
<g >
<title>math/big.(*Int).QuoRem (1 samples, 0.02%)</title><rect x="626.2" y="165" width="0.2" height="15.0" fill="rgb(249,106,26)" rx="2" ry="2" />
<text  x="629.21" y="175.5" ></text>
</g>
<g >
<title>runtime.stackalloc (1 samples, 0.02%)</title><rect x="1177.8" y="197" width="0.2" height="15.0" fill="rgb(225,87,12)" rx="2" ry="2" />
<text  x="1180.83" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.02%)</title><rect x="1176.8" y="261" width="0.2" height="15.0" fill="rgb(247,147,26)" rx="2" ry="2" />
<text  x="1179.85" y="271.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (3 samples, 0.05%)</title><rect x="631.1" y="293" width="0.6" height="15.0" fill="rgb(245,219,24)" rx="2" ry="2" />
<text  x="634.11" y="303.5" ></text>
</g>
<g >
<title>syscall.Write (5 samples, 0.08%)</title><rect x="1179.6" y="229" width="1.0" height="15.0" fill="rgb(205,185,51)" rx="2" ry="2" />
<text  x="1182.60" y="239.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.03%)</title><rect x="620.5" y="165" width="0.4" height="15.0" fill="rgb(252,212,7)" rx="2" ry="2" />
<text  x="623.51" y="175.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.02%)</title><rect x="1177.8" y="245" width="0.2" height="15.0" fill="rgb(239,197,48)" rx="2" ry="2" />
<text  x="1180.83" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (2 samples, 0.03%)</title><rect x="620.5" y="149" width="0.4" height="15.0" fill="rgb(211,6,41)" rx="2" ry="2" />
<text  x="623.51" y="159.5" ></text>
</g>
<g >
<title>math/big.(*Int).Mod (2 samples, 0.03%)</title><rect x="626.0" y="181" width="0.4" height="15.0" fill="rgb(223,200,35)" rx="2" ry="2" />
<text  x="629.01" y="191.5" ></text>
</g>
<g >
<title>strconv.ParseUint (1 samples, 0.02%)</title><rect x="759.5" y="213" width="0.2" height="15.0" fill="rgb(240,50,27)" rx="2" ry="2" />
<text  x="762.50" y="223.5" ></text>
</g>
<g >
<title>math/big.nat.div (3 samples, 0.05%)</title><rect x="621.1" y="149" width="0.6" height="15.0" fill="rgb(227,157,14)" rx="2" ry="2" />
<text  x="624.10" y="159.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).writeJournal (1 samples, 0.02%)</title><rect x="620.3" y="229" width="0.2" height="15.0" fill="rgb(253,174,19)" rx="2" ry="2" />
<text  x="623.32" y="239.5" ></text>
</g>
<g >
<title>runtime.netpoll (4 samples, 0.07%)</title><rect x="1185.9" y="261" width="0.8" height="15.0" fill="rgb(210,218,49)" rx="2" ry="2" />
<text  x="1188.88" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="1176.8" y="277" width="0.2" height="15.0" fill="rgb(247,6,38)" rx="2" ry="2" />
<text  x="1179.85" y="287.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (3 samples, 0.05%)</title><rect x="621.1" y="133" width="0.6" height="15.0" fill="rgb(212,57,17)" rx="2" ry="2" />
<text  x="624.10" y="143.5" ></text>
</g>
<g >
<title>crypto/rsa.decryptAndCheck (31 samples, 0.52%)</title><rect x="620.9" y="213" width="6.1" height="15.0" fill="rgb(223,187,33)" rx="2" ry="2" />
<text  x="623.91" y="223.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (3 samples, 0.05%)</title><rect x="758.7" y="229" width="0.6" height="15.0" fill="rgb(254,129,36)" rx="2" ry="2" />
<text  x="761.71" y="239.5" ></text>
</g>
<g >
<title>math/big.nat.clear (1 samples, 0.02%)</title><rect x="625.8" y="117" width="0.2" height="15.0" fill="rgb(219,80,1)" rx="2" ry="2" />
<text  x="628.81" y="127.5" ></text>
</g>
<g >
<title>math/big.nat.mulAddWW (2 samples, 0.03%)</title><rect x="755.4" y="101" width="0.4" height="15.0" fill="rgb(247,156,33)" rx="2" ry="2" />
<text  x="758.38" y="111.5" ></text>
</g>
<g >
<title>bytes.NewBuffer (1 samples, 0.02%)</title><rect x="1178.2" y="277" width="0.2" height="15.0" fill="rgb(244,128,5)" rx="2" ry="2" />
<text  x="1181.22" y="287.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).ProcessBlockMessage (1 samples, 0.02%)</title><rect x="627.6" y="309" width="0.2" height="15.0" fill="rgb(214,225,27)" rx="2" ry="2" />
<text  x="630.58" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DB).Get (1 samples, 0.02%)</title><rect x="629.3" y="245" width="0.2" height="15.0" fill="rgb(239,133,22)" rx="2" ry="2" />
<text  x="632.35" y="255.5" ></text>
</g>
<g >
<title>fmt.Printf (1 samples, 0.02%)</title><rect x="759.9" y="309" width="0.2" height="15.0" fill="rgb(232,123,41)" rx="2" ry="2" />
<text  x="762.89" y="319.5" ></text>
</g>
<g >
<title>reflect.ValueOf (1 samples, 0.02%)</title><rect x="629.5" y="229" width="0.2" height="15.0" fill="rgb(221,86,31)" rx="2" ry="2" />
<text  x="632.54" y="239.5" ></text>
</g>
<g >
<title>os.(*File).write (1 samples, 0.02%)</title><rect x="760.1" y="261" width="0.2" height="15.0" fill="rgb(225,225,39)" rx="2" ry="2" />
<text  x="763.09" y="271.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.02%)</title><rect x="1183.1" y="101" width="0.2" height="15.0" fill="rgb(220,217,50)" rx="2" ry="2" />
<text  x="1186.13" y="111.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.02%)</title><rect x="1188.8" y="245" width="0.2" height="15.0" fill="rgb(228,56,18)" rx="2" ry="2" />
<text  x="1191.82" y="255.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.02%)</title><rect x="620.7" y="69" width="0.2" height="15.0" fill="rgb(224,16,45)" rx="2" ry="2" />
<text  x="623.71" y="79.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="1185.1" y="197" width="0.2" height="15.0" fill="rgb(248,173,21)" rx="2" ry="2" />
<text  x="1188.09" y="207.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.(*Mutex).Lock (1 samples, 0.02%)</title><rect x="627.4" y="261" width="0.2" height="15.0" fill="rgb(214,185,41)" rx="2" ry="2" />
<text  x="630.38" y="271.5" ></text>
</g>
<g >
<title>fmt.Fprintf (1 samples, 0.02%)</title><rect x="759.9" y="293" width="0.2" height="15.0" fill="rgb(231,167,20)" rx="2" ry="2" />
<text  x="762.89" y="303.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).Get (1 samples, 0.02%)</title><rect x="629.3" y="229" width="0.2" height="15.0" fill="rgb(248,111,2)" rx="2" ry="2" />
<text  x="632.35" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.02%)</title><rect x="1184.5" y="229" width="0.2" height="15.0" fill="rgb(239,184,21)" rx="2" ry="2" />
<text  x="1187.50" y="239.5" ></text>
</g>
<g >
<title>reflect.(*rtype).exportedMethods (1 samples, 0.02%)</title><rect x="756.6" y="165" width="0.2" height="15.0" fill="rgb(238,111,49)" rx="2" ry="2" />
<text  x="759.55" y="175.5" ></text>
</g>
<g >
<title>encoding/json.stateBeginValue (1 samples, 0.02%)</title><rect x="630.7" y="277" width="0.2" height="15.0" fill="rgb(247,206,9)" rx="2" ry="2" />
<text  x="633.72" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.02%)</title><rect x="1181.8" y="197" width="0.2" height="15.0" fill="rgb(212,5,52)" rx="2" ry="2" />
<text  x="1184.76" y="207.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.02%)</title><rect x="1183.1" y="117" width="0.2" height="15.0" fill="rgb(228,162,30)" rx="2" ry="2" />
<text  x="1186.13" y="127.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.02%)</title><rect x="1178.4" y="277" width="0.2" height="15.0" fill="rgb(231,94,1)" rx="2" ry="2" />
<text  x="1181.42" y="287.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="1184.5" y="213" width="0.2" height="15.0" fill="rgb(231,17,18)" rx="2" ry="2" />
<text  x="1187.50" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="1178.0" y="245" width="0.2" height="15.0" fill="rgb(246,168,35)" rx="2" ry="2" />
<text  x="1181.03" y="255.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (2 samples, 0.03%)</title><rect x="626.6" y="149" width="0.4" height="15.0" fill="rgb(220,97,35)" rx="2" ry="2" />
<text  x="629.60" y="159.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (2 samples, 0.03%)</title><rect x="755.4" y="85" width="0.4" height="15.0" fill="rgb(234,104,7)" rx="2" ry="2" />
<text  x="758.38" y="95.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (1 samples, 0.02%)</title><rect x="627.6" y="213" width="0.2" height="15.0" fill="rgb(252,76,49)" rx="2" ry="2" />
<text  x="630.58" y="223.5" ></text>
</g>
<g >
<title>runtime.resetspinning (1 samples, 0.02%)</title><rect x="1188.8" y="277" width="0.2" height="15.0" fill="rgb(221,28,17)" rx="2" ry="2" />
<text  x="1191.82" y="287.5" ></text>
</g>
<g >
<title>math/big.lehmerSimulate (2 samples, 0.03%)</title><rect x="753.8" y="149" width="0.4" height="15.0" fill="rgb(233,126,6)" rx="2" ry="2" />
<text  x="756.81" y="159.5" ></text>
</g>
<g >
<title>github.com/golang/snappy.encodeBlock (1 samples, 0.02%)</title><rect x="758.3" y="245" width="0.2" height="15.0" fill="rgb(208,131,23)" rx="2" ry="2" />
<text  x="761.32" y="255.5" ></text>
</g>
<g >
<title>math/big.nat.mul (3 samples, 0.05%)</title><rect x="755.2" y="117" width="0.6" height="15.0" fill="rgb(205,144,48)" rx="2" ry="2" />
<text  x="758.18" y="127.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (1 samples, 0.02%)</title><rect x="626.4" y="133" width="0.2" height="15.0" fill="rgb(234,103,44)" rx="2" ry="2" />
<text  x="629.40" y="143.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.UnpackMessage (2 samples, 0.03%)</title><rect x="1178.6" y="309" width="0.4" height="15.0" fill="rgb(227,83,16)" rx="2" ry="2" />
<text  x="1181.61" y="319.5" ></text>
</g>
<g >
<title>runtime.memequal (1 samples, 0.02%)</title><rect x="759.7" y="229" width="0.2" height="15.0" fill="rgb(225,197,26)" rx="2" ry="2" />
<text  x="762.70" y="239.5" ></text>
</g>
<g >
<title>crypto/rsa.decryptAndCheck (1 samples, 0.02%)</title><rect x="627.6" y="229" width="0.2" height="15.0" fill="rgb(253,171,21)" rx="2" ry="2" />
<text  x="630.58" y="239.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (1 samples, 0.02%)</title><rect x="756.8" y="181" width="0.1" height="15.0" fill="rgb(241,85,10)" rx="2" ry="2" />
<text  x="759.75" y="191.5" ></text>
</g>
<g >
<title>encoding/json.cachedTypeFields (1 samples, 0.02%)</title><rect x="1178.8" y="229" width="0.2" height="15.0" fill="rgb(237,107,22)" rx="2" ry="2" />
<text  x="1181.81" y="239.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).VerifySignature (3 samples, 0.05%)</title><rect x="758.7" y="293" width="0.6" height="15.0" fill="rgb(218,173,0)" rx="2" ry="2" />
<text  x="761.71" y="303.5" ></text>
</g>
<g >
<title>runtime.sellock (676 samples, 11.25%)</title><rect x="334.3" y="293" width="132.7" height="15.0" fill="rgb(254,152,53)" rx="2" ry="2" />
<text  x="337.30" y="303.5" >runtime.sellock</text>
</g>
<g >
<title>math/big.nat.divLarge (1 samples, 0.02%)</title><rect x="755.8" y="149" width="0.2" height="15.0" fill="rgb(241,169,10)" rx="2" ry="2" />
<text  x="758.77" y="159.5" ></text>
</g>
<g >
<title>reflect.(*rtype).exportedMethods (1 samples, 0.02%)</title><rect x="620.7" y="37" width="0.2" height="15.0" fill="rgb(213,46,7)" rx="2" ry="2" />
<text  x="623.71" y="47.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.02%)</title><rect x="629.5" y="245" width="0.2" height="15.0" fill="rgb(228,43,49)" rx="2" ry="2" />
<text  x="632.54" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).scavengeLocked (1 samples, 0.02%)</title><rect x="1182.7" y="277" width="0.2" height="15.0" fill="rgb(252,76,39)" rx="2" ry="2" />
<text  x="1185.74" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.03%)</title><rect x="1178.6" y="245" width="0.4" height="15.0" fill="rgb(230,37,23)" rx="2" ry="2" />
<text  x="1181.61" y="255.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.02%)</title><rect x="1188.8" y="261" width="0.2" height="15.0" fill="rgb(249,107,30)" rx="2" ry="2" />
<text  x="1191.82" y="271.5" ></text>
</g>
<g >
<title>runtime.adjustframe (1 samples, 0.02%)</title><rect x="1177.6" y="165" width="0.2" height="15.0" fill="rgb(219,227,37)" rx="2" ry="2" />
<text  x="1180.63" y="175.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (1 samples, 0.02%)</title><rect x="1183.1" y="245" width="0.2" height="15.0" fill="rgb(241,167,10)" rx="2" ry="2" />
<text  x="1186.13" y="255.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (1 samples, 0.02%)</title><rect x="759.1" y="181" width="0.2" height="15.0" fill="rgb(238,139,46)" rx="2" ry="2" />
<text  x="762.11" y="191.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).Delete (1 samples, 0.02%)</title><rect x="620.3" y="277" width="0.2" height="15.0" fill="rgb(212,135,27)" rx="2" ry="2" />
<text  x="623.32" y="287.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock.func1 (1 samples, 0.02%)</title><rect x="34.1" y="261" width="0.2" height="15.0" fill="rgb(238,180,42)" rx="2" ry="2" />
<text  x="37.15" y="271.5" ></text>
</g>
<g >
<title>syscall.write (2 samples, 0.03%)</title><rect x="1177.0" y="213" width="0.4" height="15.0" fill="rgb(208,151,27)" rx="2" ry="2" />
<text  x="1180.04" y="223.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.(*lockOrder).PreLock (1 samples, 0.02%)</title><rect x="627.4" y="213" width="0.2" height="15.0" fill="rgb(210,183,0)" rx="2" ry="2" />
<text  x="630.38" y="223.5" ></text>
</g>
<g >
<title>runtime.runqgrab (1 samples, 0.02%)</title><rect x="1184.7" y="245" width="0.2" height="15.0" fill="rgb(217,145,36)" rx="2" ry="2" />
<text  x="1187.70" y="255.5" ></text>
</g>
<g >
<title>crypto/sha256.New (1 samples, 0.02%)</title><rect x="745.8" y="245" width="0.2" height="15.0" fill="rgb(252,225,11)" rx="2" ry="2" />
<text  x="748.76" y="255.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.02%)</title><rect x="620.9" y="69" width="0.2" height="15.0" fill="rgb(250,207,53)" rx="2" ry="2" />
<text  x="623.91" y="79.5" ></text>
</g>
<g >
<title>runtime.makechan (1 samples, 0.02%)</title><rect x="1176.8" y="293" width="0.2" height="15.0" fill="rgb(211,167,8)" rx="2" ry="2" />
<text  x="1179.85" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (2 samples, 0.03%)</title><rect x="759.3" y="229" width="0.4" height="15.0" fill="rgb(239,145,8)" rx="2" ry="2" />
<text  x="762.30" y="239.5" ></text>
</g>
<g >
<title>runtime.futexsleep (6 samples, 0.10%)</title><rect x="1187.4" y="229" width="1.2" height="15.0" fill="rgb(232,228,18)" rx="2" ry="2" />
<text  x="1190.45" y="239.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (2 samples, 0.03%)</title><rect x="629.5" y="261" width="0.4" height="15.0" fill="rgb(245,77,10)" rx="2" ry="2" />
<text  x="632.54" y="271.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).ValidateMod (11 samples, 0.18%)</title><rect x="627.8" y="293" width="2.1" height="15.0" fill="rgb(208,24,1)" rx="2" ry="2" />
<text  x="630.78" y="303.5" ></text>
</g>
<g >
<title>runtime.adjustpointers (1 samples, 0.02%)</title><rect x="1177.6" y="149" width="0.2" height="15.0" fill="rgb(226,52,39)" rx="2" ry="2" />
<text  x="1180.63" y="159.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (3 samples, 0.05%)</title><rect x="629.9" y="261" width="0.6" height="15.0" fill="rgb(228,103,2)" rx="2" ry="2" />
<text  x="632.94" y="271.5" ></text>
</g>
<g >
<title>runtime/pprof.readProfile (1 samples, 0.02%)</title><rect x="1189.8" y="309" width="0.2" height="15.0" fill="rgb(214,214,31)" rx="2" ry="2" />
<text  x="1192.80" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (1 samples, 0.02%)</title><rect x="1182.9" y="213" width="0.2" height="15.0" fill="rgb(239,28,21)" rx="2" ry="2" />
<text  x="1185.93" y="223.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (1 samples, 0.02%)</title><rect x="753.0" y="133" width="0.2" height="15.0" fill="rgb(227,124,47)" rx="2" ry="2" />
<text  x="756.02" y="143.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.02%)</title><rect x="1184.5" y="245" width="0.2" height="15.0" fill="rgb(206,18,6)" rx="2" ry="2" />
<text  x="1187.50" y="255.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.02%)</title><rect x="1188.6" y="261" width="0.2" height="15.0" fill="rgb(218,187,6)" rx="2" ry="2" />
<text  x="1191.63" y="271.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (1 samples, 0.02%)</title><rect x="753.0" y="165" width="0.2" height="15.0" fill="rgb(229,159,41)" rx="2" ry="2" />
<text  x="756.02" y="175.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.02%)</title><rect x="1178.6" y="213" width="0.2" height="15.0" fill="rgb(219,55,43)" rx="2" ry="2" />
<text  x="1181.61" y="223.5" ></text>
</g>
<g >
<title>runtime.sweepone (1 samples, 0.02%)</title><rect x="1182.9" y="309" width="0.2" height="15.0" fill="rgb(219,200,1)" rx="2" ry="2" />
<text  x="1185.93" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.DNode.Send (3 samples, 0.05%)</title><rect x="757.7" y="277" width="0.6" height="15.0" fill="rgb(227,206,18)" rx="2" ry="2" />
<text  x="760.73" y="287.5" ></text>
</g>
<g >
<title>math/big.shrVU (1 samples, 0.02%)</title><rect x="746.5" y="133" width="0.2" height="15.0" fill="rgb(238,38,20)" rx="2" ry="2" />
<text  x="749.54" y="143.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (22 samples, 0.37%)</title><rect x="748.5" y="133" width="4.3" height="15.0" fill="rgb(212,116,13)" rx="2" ry="2" />
<text  x="751.51" y="143.5" ></text>
</g>
<g >
<title>reflect.(*rtype).String (1 samples, 0.02%)</title><rect x="759.3" y="181" width="0.2" height="15.0" fill="rgb(237,138,41)" rx="2" ry="2" />
<text  x="762.30" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="1178.2" y="213" width="0.2" height="15.0" fill="rgb(223,208,9)" rx="2" ry="2" />
<text  x="1181.22" y="223.5" ></text>
</g>
<g >
<title>runtime.assertE2I2 (1 samples, 0.02%)</title><rect x="759.9" y="181" width="0.2" height="15.0" fill="rgb(237,229,37)" rx="2" ry="2" />
<text  x="762.89" y="191.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.02%)</title><rect x="34.3" y="293" width="0.2" height="15.0" fill="rgb(247,69,22)" rx="2" ry="2" />
<text  x="37.34" y="303.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (6 samples, 0.10%)</title><rect x="756.6" y="261" width="1.1" height="15.0" fill="rgb(207,18,42)" rx="2" ry="2" />
<text  x="759.55" y="271.5" ></text>
</g>
<g >
<title>syscall.Syscall (5 samples, 0.08%)</title><rect x="1180.6" y="229" width="1.0" height="15.0" fill="rgb(207,168,47)" rx="2" ry="2" />
<text  x="1183.58" y="239.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.NewBlockConfirmMessage (1 samples, 0.02%)</title><rect x="627.6" y="293" width="0.2" height="15.0" fill="rgb(225,213,20)" rx="2" ry="2" />
<text  x="630.58" y="303.5" ></text>
</g>
<g >
<title>runtime.mstart1 (3 samples, 0.05%)</title><rect x="1189.0" y="309" width="0.6" height="15.0" fill="rgb(227,178,47)" rx="2" ry="2" />
<text  x="1192.02" y="319.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (5 samples, 0.08%)</title><rect x="1179.6" y="245" width="1.0" height="15.0" fill="rgb(240,104,35)" rx="2" ry="2" />
<text  x="1182.60" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.03%)</title><rect x="629.9" y="245" width="0.4" height="15.0" fill="rgb(217,192,48)" rx="2" ry="2" />
<text  x="632.94" y="255.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).writeLocked (1 samples, 0.02%)</title><rect x="620.3" y="245" width="0.2" height="15.0" fill="rgb(234,2,17)" rx="2" ry="2" />
<text  x="623.32" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.02%)</title><rect x="34.1" y="165" width="0.2" height="15.0" fill="rgb(237,68,46)" rx="2" ry="2" />
<text  x="37.15" y="175.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.02%)</title><rect x="1178.2" y="229" width="0.2" height="15.0" fill="rgb(214,38,41)" rx="2" ry="2" />
<text  x="1181.22" y="239.5" ></text>
</g>
<g >
<title>reflect.copyVal (1 samples, 0.02%)</title><rect x="34.3" y="165" width="0.2" height="15.0" fill="rgb(208,29,6)" rx="2" ry="2" />
<text  x="37.34" y="175.5" ></text>
</g>
<g >
<title>crypto/rsa.decrypt (28 samples, 0.47%)</title><rect x="620.9" y="197" width="5.5" height="15.0" fill="rgb(224,151,0)" rx="2" ry="2" />
<text  x="623.91" y="207.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (1 samples, 0.02%)</title><rect x="626.2" y="117" width="0.2" height="15.0" fill="rgb(205,139,50)" rx="2" ry="2" />
<text  x="629.21" y="127.5" ></text>
</g>
<g >
<title>math/big.nat.div (2 samples, 0.03%)</title><rect x="753.2" y="165" width="0.4" height="15.0" fill="rgb(214,218,37)" rx="2" ry="2" />
<text  x="756.22" y="175.5" ></text>
</g>
<g >
<title>syscall.Read (5 samples, 0.08%)</title><rect x="1180.6" y="261" width="1.0" height="15.0" fill="rgb(237,116,18)" rx="2" ry="2" />
<text  x="1183.58" y="271.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.02%)</title><rect x="1178.4" y="245" width="0.2" height="15.0" fill="rgb(212,172,3)" rx="2" ry="2" />
<text  x="1181.42" y="255.5" ></text>
</g>
<g >
<title>encoding/json.newEncodeState (1 samples, 0.02%)</title><rect x="629.7" y="245" width="0.2" height="15.0" fill="rgb(213,149,30)" rx="2" ry="2" />
<text  x="632.74" y="255.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (3 samples, 0.05%)</title><rect x="1182.0" y="213" width="0.5" height="15.0" fill="rgb(243,117,1)" rx="2" ry="2" />
<text  x="1184.95" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (3 samples, 0.05%)</title><rect x="759.3" y="293" width="0.6" height="15.0" fill="rgb(249,199,46)" rx="2" ry="2" />
<text  x="762.30" y="303.5" ></text>
</g>
<g >
<title>runtime.mstart (3 samples, 0.05%)</title><rect x="1189.0" y="325" width="0.6" height="15.0" fill="rgb(205,81,46)" rx="2" ry="2" />
<text  x="1192.02" y="335.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.02%)</title><rect x="1184.9" y="245" width="0.2" height="15.0" fill="rgb(208,213,19)" rx="2" ry="2" />
<text  x="1187.90" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.02%)</title><rect x="1178.2" y="181" width="0.2" height="15.0" fill="rgb(236,209,30)" rx="2" ry="2" />
<text  x="1181.22" y="191.5" ></text>
</g>
<g >
<title>math/big.basicMul (3 samples, 0.05%)</title><rect x="756.0" y="149" width="0.6" height="15.0" fill="rgb(232,149,17)" rx="2" ry="2" />
<text  x="758.97" y="159.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (1 samples, 0.02%)</title><rect x="34.1" y="213" width="0.2" height="15.0" fill="rgb(242,208,33)" rx="2" ry="2" />
<text  x="37.15" y="223.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.02%)</title><rect x="752.8" y="133" width="0.2" height="15.0" fill="rgb(205,226,21)" rx="2" ry="2" />
<text  x="755.82" y="143.5" ></text>
</g>
<g >
<title>math/big.nat.div (2 samples, 0.03%)</title><rect x="746.3" y="165" width="0.4" height="15.0" fill="rgb(251,10,14)" rx="2" ry="2" />
<text  x="749.35" y="175.5" ></text>
</g>
<g >
<title>math/big.nat.div (3 samples, 0.05%)</title><rect x="627.8" y="197" width="0.6" height="15.0" fill="rgb(208,157,10)" rx="2" ry="2" />
<text  x="630.78" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).SendTo (3 samples, 0.05%)</title><rect x="627.0" y="277" width="0.6" height="15.0" fill="rgb(206,222,26)" rx="2" ry="2" />
<text  x="629.99" y="287.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.02%)</title><rect x="1188.8" y="213" width="0.2" height="15.0" fill="rgb(230,206,13)" rx="2" ry="2" />
<text  x="1191.82" y="223.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.02%)</title><rect x="1178.8" y="213" width="0.2" height="15.0" fill="rgb(236,15,8)" rx="2" ry="2" />
<text  x="1181.81" y="223.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="1185.1" y="229" width="0.2" height="15.0" fill="rgb(229,97,27)" rx="2" ry="2" />
<text  x="1188.09" y="239.5" ></text>
</g>
<g >
<title>runtime.getStackMap (1 samples, 0.02%)</title><rect x="1183.1" y="149" width="0.2" height="15.0" fill="rgb(237,43,6)" rx="2" ry="2" />
<text  x="1186.13" y="159.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (1 samples, 0.02%)</title><rect x="629.9" y="229" width="0.2" height="15.0" fill="rgb(253,33,3)" rx="2" ry="2" />
<text  x="632.94" y="239.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (2 samples, 0.03%)</title><rect x="630.5" y="293" width="0.4" height="15.0" fill="rgb(242,77,0)" rx="2" ry="2" />
<text  x="633.53" y="303.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DB).Get (1 samples, 0.02%)</title><rect x="745.6" y="245" width="0.2" height="15.0" fill="rgb(242,83,1)" rx="2" ry="2" />
<text  x="748.56" y="255.5" ></text>
</g>
<g >
<title>math/big.(*Int).Add (4 samples, 0.07%)</title><rect x="754.2" y="133" width="0.8" height="15.0" fill="rgb(225,152,45)" rx="2" ry="2" />
<text  x="757.20" y="143.5" ></text>
</g>
<g >
<title>runtime.Callers (1 samples, 0.02%)</title><rect x="627.4" y="181" width="0.2" height="15.0" fill="rgb(230,24,14)" rx="2" ry="2" />
<text  x="630.38" y="191.5" ></text>
</g>
<g >
<title>net.(*conn).Read (4 samples, 0.07%)</title><rect x="630.9" y="309" width="0.8" height="15.0" fill="rgb(231,214,25)" rx="2" ry="2" />
<text  x="633.92" y="319.5" ></text>
</g>
<g >
<title>reflect.(*rtype).NumMethod (1 samples, 0.02%)</title><rect x="620.7" y="53" width="0.2" height="15.0" fill="rgb(253,227,9)" rx="2" ry="2" />
<text  x="623.71" y="63.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.02%)</title><rect x="1178.2" y="149" width="0.2" height="15.0" fill="rgb(220,162,47)" rx="2" ry="2" />
<text  x="1181.22" y="159.5" ></text>
</g>
<g >
<title>runtime.runqsteal (4 samples, 0.07%)</title><rect x="1186.7" y="261" width="0.7" height="15.0" fill="rgb(243,141,45)" rx="2" ry="2" />
<text  x="1189.66" y="271.5" ></text>
</g>
<g >
<title>math/big.lehmerUpdate (8 samples, 0.13%)</title><rect x="754.2" y="149" width="1.6" height="15.0" fill="rgb(212,141,29)" rx="2" ry="2" />
<text  x="757.20" y="159.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (3 samples, 0.05%)</title><rect x="756.9" y="197" width="0.6" height="15.0" fill="rgb(242,149,4)" rx="2" ry="2" />
<text  x="759.95" y="207.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (3 samples, 0.05%)</title><rect x="756.0" y="165" width="0.6" height="15.0" fill="rgb(221,162,0)" rx="2" ry="2" />
<text  x="758.97" y="175.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.02%)</title><rect x="1178.2" y="261" width="0.2" height="15.0" fill="rgb(253,206,38)" rx="2" ry="2" />
<text  x="1181.22" y="271.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (1 samples, 0.02%)</title><rect x="627.6" y="197" width="0.2" height="15.0" fill="rgb(233,159,43)" rx="2" ry="2" />
<text  x="630.58" y="207.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="34.3" y="117" width="0.2" height="15.0" fill="rgb(238,62,44)" rx="2" ry="2" />
<text  x="37.34" y="127.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Proposer).timer (7 samples, 0.12%)</title><rect x="1176.8" y="325" width="1.4" height="15.0" fill="rgb(232,137,0)" rx="2" ry="2" />
<text  x="1179.85" y="335.5" ></text>
</g>
<g >
<title>runtime.park_m (19 samples, 0.32%)</title><rect x="1185.3" y="309" width="3.7" height="15.0" fill="rgb(228,12,7)" rx="2" ry="2" />
<text  x="1188.29" y="319.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (3 samples, 0.05%)</title><rect x="758.7" y="245" width="0.6" height="15.0" fill="rgb(210,105,8)" rx="2" ry="2" />
<text  x="761.71" y="255.5" ></text>
</g>
<g >
<title>BCDns_0.1/utils.BytesToInt (2 samples, 0.03%)</title><rect x="1178.2" y="293" width="0.4" height="15.0" fill="rgb(253,51,41)" rx="2" ry="2" />
<text  x="1181.22" y="303.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.02%)</title><rect x="627.4" y="165" width="0.2" height="15.0" fill="rgb(242,45,51)" rx="2" ry="2" />
<text  x="630.38" y="175.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.02%)</title><rect x="628.2" y="165" width="0.2" height="15.0" fill="rgb(252,63,51)" rx="2" ry="2" />
<text  x="631.17" y="175.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.02%)</title><rect x="1178.8" y="197" width="0.2" height="15.0" fill="rgb(209,202,39)" rx="2" ry="2" />
<text  x="1181.81" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).Sign (1 samples, 0.02%)</title><rect x="627.6" y="261" width="0.2" height="15.0" fill="rgb(242,52,29)" rx="2" ry="2" />
<text  x="630.58" y="271.5" ></text>
</g>
<g >
<title>net.(*conn).Read (5 samples, 0.08%)</title><rect x="1180.6" y="309" width="1.0" height="15.0" fill="rgb(213,154,52)" rx="2" ry="2" />
<text  x="1183.58" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (3 samples, 0.05%)</title><rect x="758.7" y="197" width="0.6" height="15.0" fill="rgb(234,69,53)" rx="2" ry="2" />
<text  x="761.71" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).VerifySignature (8 samples, 0.13%)</title><rect x="627.8" y="277" width="1.5" height="15.0" fill="rgb(249,155,11)" rx="2" ry="2" />
<text  x="630.78" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (1 samples, 0.02%)</title><rect x="34.1" y="149" width="0.2" height="15.0" fill="rgb(238,137,40)" rx="2" ry="2" />
<text  x="37.15" y="159.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb/journal.(*Writer).writePending (1 samples, 0.02%)</title><rect x="620.3" y="197" width="0.2" height="15.0" fill="rgb(236,163,15)" rx="2" ry="2" />
<text  x="623.32" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Proposer).handleOrder (67 samples, 1.11%)</title><rect x="745.6" y="309" width="13.1" height="15.0" fill="rgb(240,32,21)" rx="2" ry="2" />
<text  x="748.56" y="319.5" ></text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode (1 samples, 0.02%)</title><rect x="758.5" y="245" width="0.2" height="15.0" fill="rgb(232,3,18)" rx="2" ry="2" />
<text  x="761.52" y="255.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (2 samples, 0.03%)</title><rect x="627.0" y="229" width="0.4" height="15.0" fill="rgb(240,91,49)" rx="2" ry="2" />
<text  x="629.99" y="239.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneNameByIndex (1 samples, 0.02%)</title><rect x="745.6" y="261" width="0.2" height="15.0" fill="rgb(211,72,14)" rx="2" ry="2" />
<text  x="748.56" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="1182.7" y="309" width="0.2" height="15.0" fill="rgb(238,41,21)" rx="2" ry="2" />
<text  x="1185.74" y="319.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (1 samples, 0.02%)</title><rect x="760.1" y="245" width="0.2" height="15.0" fill="rgb(241,147,19)" rx="2" ry="2" />
<text  x="763.09" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.02%)</title><rect x="34.1" y="197" width="0.2" height="15.0" fill="rgb(224,135,32)" rx="2" ry="2" />
<text  x="37.15" y="207.5" ></text>
</g>
<g >
<title>math/big.basicMul (2 samples, 0.03%)</title><rect x="626.6" y="133" width="0.4" height="15.0" fill="rgb(227,51,11)" rx="2" ry="2" />
<text  x="629.60" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.02%)</title><rect x="1177.6" y="245" width="0.2" height="15.0" fill="rgb(248,223,35)" rx="2" ry="2" />
<text  x="1180.63" y="255.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.callers (1 samples, 0.02%)</title><rect x="627.4" y="197" width="0.2" height="15.0" fill="rgb(228,214,4)" rx="2" ry="2" />
<text  x="630.38" y="207.5" ></text>
</g>
<g >
<title>time.After (1 samples, 0.02%)</title><rect x="1178.0" y="309" width="0.2" height="15.0" fill="rgb(227,128,22)" rx="2" ry="2" />
<text  x="1181.03" y="319.5" ></text>
</g>
<g >
<title>runtime._System (1 samples, 0.02%)</title><rect x="1182.5" y="325" width="0.2" height="15.0" fill="rgb(214,34,14)" rx="2" ry="2" />
<text  x="1185.54" y="335.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.02%)</title><rect x="1177.8" y="213" width="0.2" height="15.0" fill="rgb(219,127,20)" rx="2" ry="2" />
<text  x="1180.83" y="223.5" ></text>
</g>
<g >
<title>math/big.(*Int).Sub (1 samples, 0.02%)</title><rect x="746.2" y="181" width="0.1" height="15.0" fill="rgb(218,68,51)" rx="2" ry="2" />
<text  x="749.15" y="191.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (1 samples, 0.02%)</title><rect x="34.1" y="245" width="0.2" height="15.0" fill="rgb(215,128,40)" rx="2" ry="2" />
<text  x="37.15" y="255.5" ></text>
</g>
<g >
<title>runtime.duffzero (40 samples, 0.67%)</title><rect x="34.5" y="309" width="7.9" height="15.0" fill="rgb(219,50,40)" rx="2" ry="2" />
<text  x="37.54" y="319.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).Done (1 samples, 0.02%)</title><rect x="1176.8" y="309" width="0.2" height="15.0" fill="rgb(240,150,9)" rx="2" ry="2" />
<text  x="1179.85" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.02%)</title><rect x="34.1" y="133" width="0.2" height="15.0" fill="rgb(216,9,51)" rx="2" ry="2" />
<text  x="37.15" y="143.5" ></text>
</g>
<g >
<title>math/big.(*Int).QuoRem (2 samples, 0.03%)</title><rect x="753.2" y="181" width="0.4" height="15.0" fill="rgb(205,195,6)" rx="2" ry="2" />
<text  x="756.22" y="191.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).BroadCast (4 samples, 0.07%)</title><rect x="757.7" y="293" width="0.8" height="15.0" fill="rgb(209,41,22)" rx="2" ry="2" />
<text  x="760.73" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).rotateLeft (1 samples, 0.02%)</title><rect x="1182.9" y="181" width="0.2" height="15.0" fill="rgb(206,128,5)" rx="2" ry="2" />
<text  x="1185.93" y="191.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Proposer).ReceiveOrder (4 samples, 0.07%)</title><rect x="630.9" y="325" width="0.8" height="15.0" fill="rgb(228,16,37)" rx="2" ry="2" />
<text  x="633.92" y="335.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.GetPacketHeader (2 samples, 0.03%)</title><rect x="1178.2" y="309" width="0.4" height="15.0" fill="rgb(216,33,24)" rx="2" ry="2" />
<text  x="1181.22" y="319.5" ></text>
</g>
<g >
<title>runtime.findrunnable (18 samples, 0.30%)</title><rect x="1185.3" y="277" width="3.5" height="15.0" fill="rgb(210,198,1)" rx="2" ry="2" />
<text  x="1188.29" y="287.5" ></text>
</g>
<g >
<title>BCDns_0.1/utils.SHA256 (1 samples, 0.02%)</title><rect x="745.8" y="261" width="0.2" height="15.0" fill="rgb(212,42,31)" rx="2" ry="2" />
<text  x="748.76" y="271.5" ></text>
</g>
<g >
<title>syscall.write (3 samples, 0.05%)</title><rect x="757.7" y="197" width="0.6" height="15.0" fill="rgb(221,93,18)" rx="2" ry="2" />
<text  x="760.73" y="207.5" ></text>
</g>
<g >
<title>math/big.nat.sub (1 samples, 0.02%)</title><rect x="746.2" y="165" width="0.1" height="15.0" fill="rgb(213,143,47)" rx="2" ry="2" />
<text  x="749.15" y="175.5" ></text>
</g>
<g >
<title>math/big.(*Int).lehmerGCD (10 samples, 0.17%)</title><rect x="753.8" y="165" width="2.0" height="15.0" fill="rgb(232,4,24)" rx="2" ry="2" />
<text  x="756.81" y="175.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.03%)</title><rect x="620.5" y="133" width="0.4" height="15.0" fill="rgb(213,82,41)" rx="2" ry="2" />
<text  x="623.51" y="143.5" ></text>
</g>
<g >
<title>crypto/rsa.SignPKCS1v15 (1 samples, 0.02%)</title><rect x="627.6" y="245" width="0.2" height="15.0" fill="rgb(223,6,23)" rx="2" ry="2" />
<text  x="630.58" y="255.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (3 samples, 0.05%)</title><rect x="759.3" y="309" width="0.6" height="15.0" fill="rgb(254,217,3)" rx="2" ry="2" />
<text  x="762.30" y="319.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.02%)</title><rect x="627.4" y="133" width="0.2" height="15.0" fill="rgb(224,93,47)" rx="2" ry="2" />
<text  x="630.38" y="143.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.02%)</title><rect x="34.3" y="213" width="0.2" height="15.0" fill="rgb(222,205,2)" rx="2" ry="2" />
<text  x="37.34" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.02%)</title><rect x="34.1" y="101" width="0.2" height="15.0" fill="rgb(239,127,53)" rx="2" ry="2" />
<text  x="37.15" y="111.5" ></text>
</g>
<g >
<title>sync.(*poolChain).popHead (1 samples, 0.02%)</title><rect x="746.3" y="101" width="0.2" height="15.0" fill="rgb(242,145,27)" rx="2" ry="2" />
<text  x="749.35" y="111.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalReplyMessage).VerifySignature (3 samples, 0.05%)</title><rect x="758.7" y="309" width="0.6" height="15.0" fill="rgb(239,174,1)" rx="2" ry="2" />
<text  x="761.71" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock (2 samples, 0.03%)</title><rect x="620.5" y="293" width="0.4" height="15.0" fill="rgb(221,193,12)" rx="2" ry="2" />
<text  x="623.51" y="303.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (3 samples, 0.05%)</title><rect x="757.7" y="229" width="0.6" height="15.0" fill="rgb(215,168,39)" rx="2" ry="2" />
<text  x="760.73" y="239.5" ></text>
</g>
<g >
<title>crypto/rsa.VerifyPKCS1v15 (3 samples, 0.05%)</title><rect x="758.7" y="277" width="0.6" height="15.0" fill="rgb(254,223,9)" rx="2" ry="2" />
<text  x="761.71" y="287.5" ></text>
</g>
<g >
<title>fmt.Println (2 samples, 0.03%)</title><rect x="1177.0" y="309" width="0.4" height="15.0" fill="rgb(226,136,22)" rx="2" ry="2" />
<text  x="1180.04" y="319.5" ></text>
</g>
<g >
<title>fmt.(*pp).printValue (1 samples, 0.02%)</title><rect x="759.9" y="213" width="0.2" height="15.0" fill="rgb(225,50,10)" rx="2" ry="2" />
<text  x="762.89" y="223.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Hash (2 samples, 0.03%)</title><rect x="629.5" y="277" width="0.4" height="15.0" fill="rgb(245,80,53)" rx="2" ry="2" />
<text  x="632.54" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (2 samples, 0.03%)</title><rect x="620.5" y="213" width="0.4" height="15.0" fill="rgb(209,53,25)" rx="2" ry="2" />
<text  x="623.51" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (5 samples, 0.08%)</title><rect x="756.6" y="213" width="0.9" height="15.0" fill="rgb(237,127,24)" rx="2" ry="2" />
<text  x="759.55" y="223.5" ></text>
</g>
<g >
<title>all (6,011 samples, 100%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(218,100,37)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.02%)</title><rect x="629.9" y="197" width="0.2" height="15.0" fill="rgb(226,172,32)" rx="2" ry="2" />
<text  x="632.94" y="207.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (1 samples, 0.02%)</title><rect x="34.1" y="229" width="0.2" height="15.0" fill="rgb(225,48,26)" rx="2" ry="2" />
<text  x="37.15" y="239.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock.func1 (2 samples, 0.03%)</title><rect x="620.5" y="261" width="0.4" height="15.0" fill="rgb(241,193,17)" rx="2" ry="2" />
<text  x="623.51" y="271.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.02%)</title><rect x="746.3" y="117" width="0.2" height="15.0" fill="rgb(253,138,54)" rx="2" ry="2" />
<text  x="749.35" y="127.5" ></text>
</g>
<g >
<title>syscall.Syscall (3 samples, 0.05%)</title><rect x="757.7" y="181" width="0.6" height="15.0" fill="rgb(205,165,18)" rx="2" ry="2" />
<text  x="760.73" y="191.5" ></text>
</g>
<g >
<title>os.(*File).write (2 samples, 0.03%)</title><rect x="1177.0" y="261" width="0.4" height="15.0" fill="rgb(233,102,13)" rx="2" ry="2" />
<text  x="1180.04" y="271.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (5 samples, 0.08%)</title><rect x="629.9" y="309" width="1.0" height="15.0" fill="rgb(232,158,11)" rx="2" ry="2" />
<text  x="632.94" y="319.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="1188.8" y="229" width="0.2" height="15.0" fill="rgb(250,161,23)" rx="2" ry="2" />
<text  x="1191.82" y="239.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.02%)</title><rect x="1183.1" y="197" width="0.2" height="15.0" fill="rgb(220,189,50)" rx="2" ry="2" />
<text  x="1186.13" y="207.5" ></text>
</g>
<g >
<title>runtime.makeslice (4 samples, 0.07%)</title><rect x="1181.8" y="309" width="0.7" height="15.0" fill="rgb(224,61,5)" rx="2" ry="2" />
<text  x="1184.76" y="319.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).get (1 samples, 0.02%)</title><rect x="629.3" y="213" width="0.2" height="15.0" fill="rgb(244,49,32)" rx="2" ry="2" />
<text  x="632.35" y="223.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Sign (54 samples, 0.90%)</title><rect x="746.0" y="277" width="10.6" height="15.0" fill="rgb(233,170,53)" rx="2" ry="2" />
<text  x="748.95" y="287.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.02%)</title><rect x="627.4" y="117" width="0.2" height="15.0" fill="rgb(254,160,36)" rx="2" ry="2" />
<text  x="630.38" y="127.5" ></text>
</g>
<g >
<title>reflect.(*rtype).NumMethod (1 samples, 0.02%)</title><rect x="756.6" y="181" width="0.2" height="15.0" fill="rgb(210,158,5)" rx="2" ry="2" />
<text  x="759.55" y="191.5" ></text>
</g>
<g >
<title>syscall.Read (2 samples, 0.03%)</title><rect x="631.3" y="261" width="0.4" height="15.0" fill="rgb(241,22,19)" rx="2" ry="2" />
<text  x="634.31" y="271.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.02%)</title><rect x="758.5" y="229" width="0.2" height="15.0" fill="rgb(254,161,6)" rx="2" ry="2" />
<text  x="761.52" y="239.5" ></text>
</g>
<g >
<title>math/big.(*Int).Mul (4 samples, 0.07%)</title><rect x="755.0" y="133" width="0.8" height="15.0" fill="rgb(246,122,43)" rx="2" ry="2" />
<text  x="757.98" y="143.5" ></text>
</g>
<g >
<title>runtime.mallocgc.func1 (4 samples, 0.07%)</title><rect x="1181.8" y="261" width="0.7" height="15.0" fill="rgb(238,55,12)" rx="2" ry="2" />
<text  x="1184.76" y="271.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.UnMarshalProposalMessage (6 samples, 0.10%)</title><rect x="756.6" y="277" width="1.1" height="15.0" fill="rgb(227,222,27)" rx="2" ry="2" />
<text  x="759.55" y="287.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.02%)</title><rect x="34.3" y="261" width="0.2" height="15.0" fill="rgb(214,102,1)" rx="2" ry="2" />
<text  x="37.34" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (5 samples, 0.08%)</title><rect x="756.6" y="229" width="0.9" height="15.0" fill="rgb(231,147,35)" rx="2" ry="2" />
<text  x="759.55" y="239.5" ></text>
</g>
<g >
<title>runtime.(*hchan).sortkey (78 samples, 1.30%)</title><rect x="281.7" y="293" width="15.3" height="15.0" fill="rgb(228,42,40)" rx="2" ry="2" />
<text  x="284.69" y="303.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).get (1 samples, 0.02%)</title><rect x="745.6" y="213" width="0.2" height="15.0" fill="rgb(221,138,44)" rx="2" ry="2" />
<text  x="748.56" y="223.5" ></text>
</g>
<g >
<title>math/big.nat.montgomery (32 samples, 0.53%)</title><rect x="746.7" y="149" width="6.3" height="15.0" fill="rgb(212,205,50)" rx="2" ry="2" />
<text  x="749.74" y="159.5" ></text>
</g>
<g >
<title>syscall.Write (2 samples, 0.03%)</title><rect x="1177.0" y="229" width="0.4" height="15.0" fill="rgb(218,142,30)" rx="2" ry="2" />
<text  x="1180.04" y="239.5" ></text>
</g>
<g >
<title>fmt.Fprintln (8 samples, 0.13%)</title><rect x="1179.0" y="293" width="1.6" height="15.0" fill="rgb(252,128,3)" rx="2" ry="2" />
<text  x="1182.01" y="303.5" ></text>
</g>
<g >
<title>runtime.timerproc (1 samples, 0.02%)</title><rect x="1189.6" y="325" width="0.2" height="15.0" fill="rgb(216,77,6)" rx="2" ry="2" />
<text  x="1192.61" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).scanWhile (1 samples, 0.02%)</title><rect x="629.9" y="181" width="0.2" height="15.0" fill="rgb(225,117,35)" rx="2" ry="2" />
<text  x="632.94" y="191.5" ></text>
</g>
<g >
<title>fmt.(*pp).printValue (1 samples, 0.02%)</title><rect x="759.9" y="229" width="0.2" height="15.0" fill="rgb(211,111,10)" rx="2" ry="2" />
<text  x="762.89" y="239.5" ></text>
</g>
<g >
<title>math/big.nat.div (1 samples, 0.02%)</title><rect x="626.4" y="149" width="0.2" height="15.0" fill="rgb(211,198,4)" rx="2" ry="2" />
<text  x="629.40" y="159.5" ></text>
</g>
<g >
<title>math/big.basicMul (1 samples, 0.02%)</title><rect x="753.0" y="149" width="0.2" height="15.0" fill="rgb(230,41,9)" rx="2" ry="2" />
<text  x="756.02" y="159.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).putRec (1 samples, 0.02%)</title><rect x="620.3" y="261" width="0.2" height="15.0" fill="rgb(251,37,38)" rx="2" ry="2" />
<text  x="623.32" y="271.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (2 samples, 0.03%)</title><rect x="626.6" y="117" width="0.4" height="15.0" fill="rgb(251,208,12)" rx="2" ry="2" />
<text  x="629.60" y="127.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.02%)</title><rect x="629.9" y="213" width="0.2" height="15.0" fill="rgb(244,198,33)" rx="2" ry="2" />
<text  x="632.94" y="223.5" ></text>
</g>
<g >
<title>fmt.(*pp).printValue (1 samples, 0.02%)</title><rect x="759.9" y="245" width="0.2" height="15.0" fill="rgb(219,154,18)" rx="2" ry="2" />
<text  x="762.89" y="255.5" ></text>
</g>
<g >
<title>math/big.subVW (1 samples, 0.02%)</title><rect x="746.2" y="149" width="0.1" height="15.0" fill="rgb(206,102,22)" rx="2" ry="2" />
<text  x="749.15" y="159.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.NewProposal (62 samples, 1.03%)</title><rect x="745.6" y="293" width="12.1" height="15.0" fill="rgb(252,138,30)" rx="2" ry="2" />
<text  x="748.56" y="303.5" ></text>
</g>
<g >
<title>runtime.deferproc (1 samples, 0.02%)</title><rect x="745.6" y="197" width="0.2" height="15.0" fill="rgb(245,190,28)" rx="2" ry="2" />
<text  x="748.56" y="207.5" ></text>
</g>
<g >
<title>runtime.futex (6 samples, 0.10%)</title><rect x="1187.4" y="213" width="1.2" height="15.0" fill="rgb(242,91,40)" rx="2" ry="2" />
<text  x="1190.45" y="223.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (2 samples, 0.03%)</title><rect x="1177.6" y="293" width="0.4" height="15.0" fill="rgb(254,196,50)" rx="2" ry="2" />
<text  x="1180.63" y="303.5" ></text>
</g>
<g >
<title>runtime.schedule (3 samples, 0.05%)</title><rect x="1184.7" y="293" width="0.6" height="15.0" fill="rgb(211,103,53)" rx="2" ry="2" />
<text  x="1187.70" y="303.5" ></text>
</g>
<g >
<title>encoding/base64.(*Encoding).Decode (1 samples, 0.02%)</title><rect x="620.5" y="69" width="0.2" height="15.0" fill="rgb(243,66,53)" rx="2" ry="2" />
<text  x="623.51" y="79.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.02%)</title><rect x="1179.4" y="261" width="0.2" height="15.0" fill="rgb(243,155,26)" rx="2" ry="2" />
<text  x="1182.40" y="271.5" ></text>
</g>
<g >
<title>runtime.largeAlloc (4 samples, 0.07%)</title><rect x="1181.8" y="245" width="0.7" height="15.0" fill="rgb(231,89,36)" rx="2" ry="2" />
<text  x="1184.76" y="255.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (3 samples, 0.05%)</title><rect x="758.7" y="261" width="0.6" height="15.0" fill="rgb(230,173,23)" rx="2" ry="2" />
<text  x="761.71" y="271.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (7 samples, 0.12%)</title><rect x="627.8" y="229" width="1.4" height="15.0" fill="rgb(225,21,9)" rx="2" ry="2" />
<text  x="630.78" y="239.5" ></text>
</g>
<g >
<title>runtime.makechan (1 samples, 0.02%)</title><rect x="1178.0" y="277" width="0.2" height="15.0" fill="rgb(239,225,22)" rx="2" ry="2" />
<text  x="1181.03" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.02%)</title><rect x="1181.8" y="213" width="0.2" height="15.0" fill="rgb(214,175,44)" rx="2" ry="2" />
<text  x="1184.76" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).insert (1 samples, 0.02%)</title><rect x="1182.9" y="197" width="0.2" height="15.0" fill="rgb(205,115,19)" rx="2" ry="2" />
<text  x="1185.93" y="207.5" ></text>
</g>
<g >
<title>syscall.write (5 samples, 0.08%)</title><rect x="1179.6" y="213" width="1.0" height="15.0" fill="rgb(236,195,28)" rx="2" ry="2" />
<text  x="1182.60" y="223.5" ></text>
</g>
<g >
<title>os.(*File).Write (5 samples, 0.08%)</title><rect x="1179.6" y="277" width="1.0" height="15.0" fill="rgb(241,109,6)" rx="2" ry="2" />
<text  x="1182.60" y="287.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (3 samples, 0.05%)</title><rect x="626.4" y="197" width="0.6" height="15.0" fill="rgb(215,134,52)" rx="2" ry="2" />
<text  x="629.40" y="207.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (1 samples, 0.02%)</title><rect x="757.5" y="229" width="0.2" height="15.0" fill="rgb(248,164,12)" rx="2" ry="2" />
<text  x="760.54" y="239.5" ></text>
</g>
<g >
<title>runtime.bgscavenge.func2 (1 samples, 0.02%)</title><rect x="1182.7" y="293" width="0.2" height="15.0" fill="rgb(237,118,23)" rx="2" ry="2" />
<text  x="1185.74" y="303.5" ></text>
</g>
<g >
<title>crypto.Hash.New (1 samples, 0.02%)</title><rect x="746.0" y="229" width="0.2" height="15.0" fill="rgb(235,214,24)" rx="2" ry="2" />
<text  x="748.95" y="239.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.02%)</title><rect x="34.3" y="277" width="0.2" height="15.0" fill="rgb(254,225,7)" rx="2" ry="2" />
<text  x="37.34" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.03%)</title><rect x="1177.6" y="261" width="0.4" height="15.0" fill="rgb(220,159,6)" rx="2" ry="2" />
<text  x="1180.63" y="271.5" ></text>
</g>
<g >
<title>runtime.lock (450 samples, 7.49%)</title><rect x="378.7" y="277" width="88.3" height="15.0" fill="rgb(207,225,36)" rx="2" ry="2" />
<text  x="381.66" y="287.5" >runtime.lock</text>
</g>
<g >
<title>runtime.selectgo (2,838 samples, 47.21%)</title><rect x="42.4" y="309" width="557.1" height="15.0" fill="rgb(235,183,16)" rx="2" ry="2" />
<text  x="45.39" y="319.5" >runtime.selectgo</text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.02%)</title><rect x="759.3" y="213" width="0.2" height="15.0" fill="rgb(220,142,22)" rx="2" ry="2" />
<text  x="762.30" y="223.5" ></text>
</g>
<g >
<title>runtime.goexit0 (3 samples, 0.05%)</title><rect x="1184.7" y="309" width="0.6" height="15.0" fill="rgb(240,54,1)" rx="2" ry="2" />
<text  x="1187.70" y="319.5" ></text>
</g>
<g >
<title>syscall.write (1 samples, 0.02%)</title><rect x="620.3" y="101" width="0.2" height="15.0" fill="rgb(245,108,1)" rx="2" ry="2" />
<text  x="623.32" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.02%)</title><rect x="1184.9" y="229" width="0.2" height="15.0" fill="rgb(239,57,5)" rx="2" ry="2" />
<text  x="1187.90" y="239.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).Get (1 samples, 0.02%)</title><rect x="745.6" y="229" width="0.2" height="15.0" fill="rgb(214,202,40)" rx="2" ry="2" />
<text  x="748.56" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.02%)</title><rect x="1177.6" y="229" width="0.2" height="15.0" fill="rgb(246,224,20)" rx="2" ry="2" />
<text  x="1180.63" y="239.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.02%)</title><rect x="1179.4" y="245" width="0.2" height="15.0" fill="rgb(254,73,0)" rx="2" ry="2" />
<text  x="1182.40" y="255.5" ></text>
</g>
<g >
<title>runtime.bgsweep (1 samples, 0.02%)</title><rect x="1182.9" y="325" width="0.2" height="15.0" fill="rgb(216,2,42)" rx="2" ry="2" />
<text  x="1185.93" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mspan).scavenge (1 samples, 0.02%)</title><rect x="1182.7" y="261" width="0.2" height="15.0" fill="rgb(232,14,54)" rx="2" ry="2" />
<text  x="1185.74" y="271.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.02%)</title><rect x="631.1" y="261" width="0.2" height="15.0" fill="rgb(246,38,35)" rx="2" ry="2" />
<text  x="634.11" y="271.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.02%)</title><rect x="1177.6" y="197" width="0.2" height="15.0" fill="rgb(206,215,7)" rx="2" ry="2" />
<text  x="1180.63" y="207.5" ></text>
</g>
<g >
<title>fmt.Println (8 samples, 0.13%)</title><rect x="1179.0" y="309" width="1.6" height="15.0" fill="rgb(206,64,10)" rx="2" ry="2" />
<text  x="1182.01" y="319.5" ></text>
</g>
<g >
<title>runtime.scang (1 samples, 0.02%)</title><rect x="1183.1" y="229" width="0.2" height="15.0" fill="rgb(205,201,26)" rx="2" ry="2" />
<text  x="1186.13" y="239.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (1 samples, 0.02%)</title><rect x="757.5" y="245" width="0.2" height="15.0" fill="rgb(222,225,2)" rx="2" ry="2" />
<text  x="760.54" y="255.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (4 samples, 0.07%)</title><rect x="755.8" y="213" width="0.8" height="15.0" fill="rgb(236,83,47)" rx="2" ry="2" />
<text  x="758.77" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="34.3" y="133" width="0.2" height="15.0" fill="rgb(229,17,23)" rx="2" ry="2" />
<text  x="37.34" y="143.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (35 samples, 0.58%)</title><rect x="746.3" y="181" width="6.9" height="15.0" fill="rgb(231,126,25)" rx="2" ry="2" />
<text  x="749.35" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).freeSpan (1 samples, 0.02%)</title><rect x="1182.9" y="277" width="0.2" height="15.0" fill="rgb(229,2,16)" rx="2" ry="2" />
<text  x="1185.93" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.02%)</title><rect x="1176.8" y="245" width="0.2" height="15.0" fill="rgb(213,40,8)" rx="2" ry="2" />
<text  x="1179.85" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.03%)</title><rect x="620.5" y="117" width="0.4" height="15.0" fill="rgb(225,23,44)" rx="2" ry="2" />
<text  x="623.51" y="127.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.02%)</title><rect x="620.3" y="85" width="0.2" height="15.0" fill="rgb(254,123,26)" rx="2" ry="2" />
<text  x="623.32" y="95.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (1 samples, 0.02%)</title><rect x="34.3" y="197" width="0.2" height="15.0" fill="rgb(236,135,11)" rx="2" ry="2" />
<text  x="37.34" y="207.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (1 samples, 0.02%)</title><rect x="620.9" y="149" width="0.2" height="15.0" fill="rgb(209,109,38)" rx="2" ry="2" />
<text  x="623.91" y="159.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.02%)</title><rect x="756.6" y="197" width="0.2" height="15.0" fill="rgb(228,166,46)" rx="2" ry="2" />
<text  x="759.55" y="207.5" ></text>
</g>
<g >
<title>syscall.Write (1 samples, 0.02%)</title><rect x="760.1" y="229" width="0.2" height="15.0" fill="rgb(253,17,34)" rx="2" ry="2" />
<text  x="763.09" y="239.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.PackMessage (1 samples, 0.02%)</title><rect x="758.3" y="277" width="0.2" height="15.0" fill="rgb(218,88,28)" rx="2" ry="2" />
<text  x="761.32" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (3 samples, 0.05%)</title><rect x="629.9" y="293" width="0.6" height="15.0" fill="rgb(236,82,44)" rx="2" ry="2" />
<text  x="632.94" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="1178.4" y="261" width="0.2" height="15.0" fill="rgb(242,40,51)" rx="2" ry="2" />
<text  x="1181.42" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.03%)</title><rect x="1178.6" y="261" width="0.4" height="15.0" fill="rgb(233,69,0)" rx="2" ry="2" />
<text  x="1181.61" y="271.5" ></text>
</g>
<g >
<title>os.(*File).Write (1 samples, 0.02%)</title><rect x="760.1" y="277" width="0.2" height="15.0" fill="rgb(239,3,20)" rx="2" ry="2" />
<text  x="763.09" y="287.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).handleConn (22 samples, 0.37%)</title><rect x="1178.2" y="325" width="4.3" height="15.0" fill="rgb(218,22,18)" rx="2" ry="2" />
<text  x="1181.22" y="335.5" ></text>
</g>
<g >
<title>runtime.schedule (19 samples, 0.32%)</title><rect x="1185.3" y="293" width="3.7" height="15.0" fill="rgb(216,218,30)" rx="2" ry="2" />
<text  x="1188.29" y="303.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*iStorageWriter).Write (1 samples, 0.02%)</title><rect x="620.3" y="181" width="0.2" height="15.0" fill="rgb(242,50,44)" rx="2" ry="2" />
<text  x="623.32" y="191.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (3 samples, 0.05%)</title><rect x="757.7" y="245" width="0.6" height="15.0" fill="rgb(251,132,8)" rx="2" ry="2" />
<text  x="760.73" y="255.5" ></text>
</g>
<g >
<title>syscall.write (2 samples, 0.03%)</title><rect x="627.0" y="181" width="0.4" height="15.0" fill="rgb(242,191,23)" rx="2" ry="2" />
<text  x="629.99" y="191.5" ></text>
</g>
<g >
<title>runtime/pprof.profileWriter (1 samples, 0.02%)</title><rect x="1189.8" y="325" width="0.2" height="15.0" fill="rgb(235,62,30)" rx="2" ry="2" />
<text  x="1192.80" y="335.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (2 samples, 0.03%)</title><rect x="620.5" y="229" width="0.4" height="15.0" fill="rgb(228,120,8)" rx="2" ry="2" />
<text  x="623.51" y="239.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (7 samples, 0.12%)</title><rect x="627.8" y="245" width="1.4" height="15.0" fill="rgb(228,211,1)" rx="2" ry="2" />
<text  x="630.78" y="255.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="1185.7" y="261" width="0.2" height="15.0" fill="rgb(214,12,16)" rx="2" ry="2" />
<text  x="1188.68" y="271.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (1 samples, 0.02%)</title><rect x="620.3" y="133" width="0.2" height="15.0" fill="rgb(222,14,1)" rx="2" ry="2" />
<text  x="623.32" y="143.5" ></text>
</g>
<g >
<title>fmt.Fprintln (1 samples, 0.02%)</title><rect x="760.1" y="293" width="0.2" height="15.0" fill="rgb(232,30,52)" rx="2" ry="2" />
<text  x="763.09" y="303.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalReplyMessage).Sign (31 samples, 0.52%)</title><rect x="620.9" y="261" width="6.1" height="15.0" fill="rgb(252,167,24)" rx="2" ry="2" />
<text  x="623.91" y="271.5" ></text>
</g>
<g >
<title>math/big.greaterThan (1 samples, 0.02%)</title><rect x="628.0" y="165" width="0.2" height="15.0" fill="rgb(244,202,16)" rx="2" ry="2" />
<text  x="630.97" y="175.5" ></text>
</g>
<g >
<title>syscall.read (5 samples, 0.08%)</title><rect x="1180.6" y="245" width="1.0" height="15.0" fill="rgb(228,84,37)" rx="2" ry="2" />
<text  x="1183.58" y="255.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (4 samples, 0.07%)</title><rect x="755.8" y="197" width="0.8" height="15.0" fill="rgb(238,138,37)" rx="2" ry="2" />
<text  x="758.77" y="207.5" ></text>
</g>
<g >
<title>github.com/golang/snappy.Encode (1 samples, 0.02%)</title><rect x="758.3" y="261" width="0.2" height="15.0" fill="rgb(208,156,4)" rx="2" ry="2" />
<text  x="761.32" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.02%)</title><rect x="1178.2" y="197" width="0.2" height="15.0" fill="rgb(212,226,34)" rx="2" ry="2" />
<text  x="1181.22" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneNameByIndex (1 samples, 0.02%)</title><rect x="629.3" y="261" width="0.2" height="15.0" fill="rgb(215,200,8)" rx="2" ry="2" />
<text  x="632.35" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (4 samples, 0.07%)</title><rect x="1181.8" y="229" width="0.7" height="15.0" fill="rgb(230,113,50)" rx="2" ry="2" />
<text  x="1184.76" y="239.5" ></text>
</g>
<g >
<title>runtime.chanrecv (53 samples, 0.88%)</title><rect x="609.9" y="293" width="10.4" height="15.0" fill="rgb(221,29,21)" rx="2" ry="2" />
<text  x="612.91" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.03%)</title><rect x="620.5" y="101" width="0.4" height="15.0" fill="rgb(237,30,30)" rx="2" ry="2" />
<text  x="623.51" y="111.5" ></text>
</g>
<g >
<title>crypto/rsa.VerifyPKCS1v15 (8 samples, 0.13%)</title><rect x="627.8" y="261" width="1.5" height="15.0" fill="rgb(212,178,44)" rx="2" ry="2" />
<text  x="630.78" y="271.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb/journal.(*Writer).Flush (1 samples, 0.02%)</title><rect x="620.3" y="213" width="0.2" height="15.0" fill="rgb(252,212,43)" rx="2" ry="2" />
<text  x="623.32" y="223.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="1184.7" y="229" width="0.2" height="15.0" fill="rgb(218,135,34)" rx="2" ry="2" />
<text  x="1187.70" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (2 samples, 0.03%)</title><rect x="1177.0" y="245" width="0.4" height="15.0" fill="rgb(207,201,37)" rx="2" ry="2" />
<text  x="1180.04" y="255.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (1 samples, 0.02%)</title><rect x="34.3" y="149" width="0.2" height="15.0" fill="rgb(207,117,9)" rx="2" ry="2" />
<text  x="37.34" y="159.5" ></text>
</g>
<g >
<title>os.(*File).Write (1 samples, 0.02%)</title><rect x="620.3" y="165" width="0.2" height="15.0" fill="rgb(252,56,40)" rx="2" ry="2" />
<text  x="623.32" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.07%)</title><rect x="1181.8" y="293" width="0.7" height="15.0" fill="rgb(227,133,5)" rx="2" ry="2" />
<text  x="1184.76" y="303.5" ></text>
</g>
<g >
<title>crypto/rand.getRandomBatch (1 samples, 0.02%)</title><rect x="620.9" y="101" width="0.2" height="15.0" fill="rgb(213,178,19)" rx="2" ry="2" />
<text  x="623.91" y="111.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (1 samples, 0.02%)</title><rect x="627.6" y="181" width="0.2" height="15.0" fill="rgb(227,196,45)" rx="2" ry="2" />
<text  x="630.58" y="191.5" ></text>
</g>
<g >
<title>math/big.(*Int).GCD (11 samples, 0.18%)</title><rect x="753.6" y="181" width="2.2" height="15.0" fill="rgb(222,180,26)" rx="2" ry="2" />
<text  x="756.61" y="191.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtString (1 samples, 0.02%)</title><rect x="1179.2" y="245" width="0.2" height="15.0" fill="rgb(251,74,16)" rx="2" ry="2" />
<text  x="1182.20" y="255.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (1 samples, 0.02%)</title><rect x="1183.1" y="165" width="0.2" height="15.0" fill="rgb(238,203,52)" rx="2" ry="2" />
<text  x="1186.13" y="175.5" ></text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (1 samples, 0.02%)</title><rect x="34.3" y="245" width="0.2" height="15.0" fill="rgb(231,88,48)" rx="2" ry="2" />
<text  x="37.34" y="255.5" ></text>
</g>
<g >
<title>math/big.nat.montgomery (22 samples, 0.37%)</title><rect x="621.7" y="133" width="4.3" height="15.0" fill="rgb(224,158,3)" rx="2" ry="2" />
<text  x="624.69" y="143.5" ></text>
</g>
<g >
<title>encoding/json.encodeByteSlice (1 samples, 0.02%)</title><rect x="758.5" y="213" width="0.2" height="15.0" fill="rgb(245,226,22)" rx="2" ry="2" />
<text  x="761.52" y="223.5" ></text>
</g>
<g >
<title>math/big.shrVU (1 samples, 0.02%)</title><rect x="621.5" y="117" width="0.2" height="15.0" fill="rgb(250,32,16)" rx="2" ry="2" />
<text  x="624.50" y="127.5" ></text>
</g>
<g >
<title>runtime.scanobject (6 samples, 0.10%)</title><rect x="1183.3" y="261" width="1.2" height="15.0" fill="rgb(232,26,47)" rx="2" ry="2" />
<text  x="1186.33" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.03%)</title><rect x="759.3" y="245" width="0.4" height="15.0" fill="rgb(213,194,16)" rx="2" ry="2" />
<text  x="762.30" y="255.5" ></text>
</g>
<g >
<title>reflect.Value.Field (1 samples, 0.02%)</title><rect x="756.8" y="197" width="0.1" height="15.0" fill="rgb(208,217,28)" rx="2" ry="2" />
<text  x="759.75" y="207.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (5 samples, 0.08%)</title><rect x="1180.6" y="277" width="1.0" height="15.0" fill="rgb(230,97,15)" rx="2" ry="2" />
<text  x="1183.58" y="287.5" ></text>
</g>
<g >
<title>math/big.(*Int).ModInverse (11 samples, 0.18%)</title><rect x="753.6" y="197" width="2.2" height="15.0" fill="rgb(220,56,3)" rx="2" ry="2" />
<text  x="756.61" y="207.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.02%)</title><rect x="759.7" y="245" width="0.2" height="15.0" fill="rgb(247,128,29)" rx="2" ry="2" />
<text  x="762.70" y="255.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (8 samples, 0.13%)</title><rect x="1183.1" y="293" width="1.6" height="15.0" fill="rgb(227,211,28)" rx="2" ry="2" />
<text  x="1186.13" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.02%)</title><rect x="1182.9" y="261" width="0.2" height="15.0" fill="rgb(230,219,40)" rx="2" ry="2" />
<text  x="1185.93" y="271.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (1 samples, 0.02%)</title><rect x="1182.7" y="325" width="0.2" height="15.0" fill="rgb(240,78,38)" rx="2" ry="2" />
<text  x="1185.74" y="335.5" ></text>
</g>
<g >
<title>io.ReadFull (1 samples, 0.02%)</title><rect x="620.9" y="165" width="0.2" height="15.0" fill="rgb(222,142,5)" rx="2" ry="2" />
<text  x="623.91" y="175.5" ></text>
</g>
<g >
<title>runtime.convT2E (1 samples, 0.02%)</title><rect x="760.3" y="309" width="0.2" height="15.0" fill="rgb(209,105,31)" rx="2" ry="2" />
<text  x="763.28" y="319.5" ></text>
</g>
<g >
<title>runtime.chanrecv (1,321 samples, 21.98%)</title><rect x="917.5" y="293" width="259.3" height="15.0" fill="rgb(210,153,7)" rx="2" ry="2" />
<text  x="920.53" y="303.5" >runtime.chanrecv</text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).Sign (54 samples, 0.90%)</title><rect x="746.0" y="261" width="10.6" height="15.0" fill="rgb(247,70,41)" rx="2" ry="2" />
<text  x="748.95" y="271.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.02%)</title><rect x="1177.6" y="181" width="0.2" height="15.0" fill="rgb(209,208,13)" rx="2" ry="2" />
<text  x="1180.63" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="1182.9" y="245" width="0.2" height="15.0" fill="rgb(208,89,16)" rx="2" ry="2" />
<text  x="1185.93" y="255.5" ></text>
</g>
<g >
<title>runtime.selectnbrecv (2,121 samples, 35.29%)</title><rect x="760.5" y="309" width="416.3" height="15.0" fill="rgb(215,10,13)" rx="2" ry="2" />
<text  x="763.48" y="319.5" >runtime.selectnbrecv</text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.02%)</title><rect x="760.3" y="277" width="0.2" height="15.0" fill="rgb(214,70,28)" rx="2" ry="2" />
<text  x="763.28" y="287.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.lock (1 samples, 0.02%)</title><rect x="627.4" y="245" width="0.2" height="15.0" fill="rgb(232,61,36)" rx="2" ry="2" />
<text  x="630.38" y="255.5" ></text>
</g>
<g >
<title>math/big.getNat (1 samples, 0.02%)</title><rect x="746.3" y="133" width="0.2" height="15.0" fill="rgb(210,16,28)" rx="2" ry="2" />
<text  x="749.35" y="143.5" ></text>
</g>
<g >
<title>os.(*File).write (1 samples, 0.02%)</title><rect x="620.3" y="149" width="0.2" height="15.0" fill="rgb(227,83,48)" rx="2" ry="2" />
<text  x="623.32" y="159.5" ></text>
</g>
<g >
<title>runtime.freedefer (1 samples, 0.02%)</title><rect x="631.1" y="245" width="0.2" height="15.0" fill="rgb(205,68,10)" rx="2" ry="2" />
<text  x="634.11" y="255.5" ></text>
</g>
<g >
<title>fmt.(*pp).handleMethods (1 samples, 0.02%)</title><rect x="759.9" y="197" width="0.2" height="15.0" fill="rgb(216,40,17)" rx="2" ry="2" />
<text  x="762.89" y="207.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.02%)</title><rect x="1181.6" y="309" width="0.2" height="15.0" fill="rgb(207,168,20)" rx="2" ry="2" />
<text  x="1184.56" y="319.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (8 samples, 0.13%)</title><rect x="1183.1" y="325" width="1.6" height="15.0" fill="rgb(206,220,15)" rx="2" ry="2" />
<text  x="1186.13" y="335.5" ></text>
</g>
<g >
<title>runtime.notesleep (6 samples, 0.10%)</title><rect x="1187.4" y="245" width="1.2" height="15.0" fill="rgb(250,79,28)" rx="2" ry="2" />
<text  x="1190.45" y="255.5" ></text>
</g>
<g >
<title>crypto/rand.Int (1 samples, 0.02%)</title><rect x="620.9" y="181" width="0.2" height="15.0" fill="rgb(248,77,2)" rx="2" ry="2" />
<text  x="623.91" y="191.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.NewProposalReplyMessage (31 samples, 0.52%)</title><rect x="620.9" y="277" width="6.1" height="15.0" fill="rgb(209,46,8)" rx="2" ry="2" />
<text  x="623.91" y="287.5" ></text>
</g>
<g >
<title>crypto/rsa.SignPKCS1v15 (31 samples, 0.52%)</title><rect x="620.9" y="229" width="6.1" height="15.0" fill="rgb(251,205,38)" rx="2" ry="2" />
<text  x="623.91" y="239.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (7 samples, 0.12%)</title><rect x="627.8" y="213" width="1.4" height="15.0" fill="rgb(208,225,32)" rx="2" ry="2" />
<text  x="630.78" y="223.5" ></text>
</g>
<g >
<title>syscall.Write (1 samples, 0.02%)</title><rect x="620.3" y="117" width="0.2" height="15.0" fill="rgb(206,88,31)" rx="2" ry="2" />
<text  x="623.32" y="127.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintf (1 samples, 0.02%)</title><rect x="759.9" y="277" width="0.2" height="15.0" fill="rgb(223,48,51)" rx="2" ry="2" />
<text  x="762.89" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.02%)</title><rect x="34.1" y="117" width="0.2" height="15.0" fill="rgb(239,62,19)" rx="2" ry="2" />
<text  x="37.15" y="127.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.03%)</title><rect x="620.5" y="197" width="0.4" height="15.0" fill="rgb(224,123,26)" rx="2" ry="2" />
<text  x="623.51" y="207.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (3 samples, 0.05%)</title><rect x="627.8" y="181" width="0.6" height="15.0" fill="rgb(220,77,28)" rx="2" ry="2" />
<text  x="630.78" y="191.5" ></text>
</g>
<g >
<title>fmt.Fprintln (2 samples, 0.03%)</title><rect x="1177.0" y="293" width="0.4" height="15.0" fill="rgb(250,143,5)" rx="2" ry="2" />
<text  x="1180.04" y="303.5" ></text>
</g>
<g >
<title>reflect.Value.IsNil (1 samples, 0.02%)</title><rect x="758.5" y="197" width="0.2" height="15.0" fill="rgb(249,78,45)" rx="2" ry="2" />
<text  x="761.52" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (2 samples, 0.03%)</title><rect x="620.5" y="245" width="0.4" height="15.0" fill="rgb(230,113,31)" rx="2" ry="2" />
<text  x="623.51" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.02%)</title><rect x="34.1" y="85" width="0.2" height="15.0" fill="rgb(247,73,2)" rx="2" ry="2" />
<text  x="37.15" y="95.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.02%)</title><rect x="1183.1" y="133" width="0.2" height="15.0" fill="rgb(252,209,17)" rx="2" ry="2" />
<text  x="1186.13" y="143.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.02%)</title><rect x="760.3" y="293" width="0.2" height="15.0" fill="rgb(226,12,1)" rx="2" ry="2" />
<text  x="763.28" y="303.5" ></text>
</g>
<g >
<title>syscall.Syscall (2 samples, 0.03%)</title><rect x="627.0" y="165" width="0.4" height="15.0" fill="rgb(225,184,14)" rx="2" ry="2" />
<text  x="629.99" y="175.5" ></text>
</g>
<g >
<title>math/big.nat.div (1 samples, 0.02%)</title><rect x="755.8" y="165" width="0.2" height="15.0" fill="rgb(249,196,53)" rx="2" ry="2" />
<text  x="758.77" y="175.5" ></text>
</g>
<g >
<title>reflect.Value.MapIndex (1 samples, 0.02%)</title><rect x="34.3" y="181" width="0.2" height="15.0" fill="rgb(249,48,2)" rx="2" ry="2" />
<text  x="37.34" y="191.5" ></text>
</g>
<g >
<title>runtime.unlock (500 samples, 8.32%)</title><rect x="501.4" y="277" width="98.1" height="15.0" fill="rgb(219,24,20)" rx="2" ry="2" />
<text  x="504.36" y="287.5" >runtime.unl..</text>
</g>
<g >
<title>fmt.Println (1 samples, 0.02%)</title><rect x="760.1" y="309" width="0.2" height="15.0" fill="rgb(250,222,46)" rx="2" ry="2" />
<text  x="763.09" y="319.5" ></text>
</g>
<g >
<title>syscall.Syscall (5 samples, 0.08%)</title><rect x="1179.6" y="197" width="1.0" height="15.0" fill="rgb(223,173,10)" rx="2" ry="2" />
<text  x="1182.60" y="207.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (2 samples, 0.03%)</title><rect x="620.5" y="85" width="0.4" height="15.0" fill="rgb(242,50,14)" rx="2" ry="2" />
<text  x="623.51" y="95.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.02%)</title><rect x="1185.5" y="261" width="0.2" height="15.0" fill="rgb(219,53,36)" rx="2" ry="2" />
<text  x="1188.48" y="271.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Leader).Run (3,109 samples, 51.72%)</title><rect x="10.0" y="325" width="610.3" height="15.0" fill="rgb(208,45,18)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >BCDns_0.1/consensusMy/service.(*Leader).Run</text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.02%)</title><rect x="759.9" y="165" width="0.2" height="15.0" fill="rgb(243,125,11)" rx="2" ry="2" />
<text  x="762.89" y="175.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.02%)</title><rect x="1178.6" y="229" width="0.2" height="15.0" fill="rgb(238,70,1)" rx="2" ry="2" />
<text  x="1181.61" y="239.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (25 samples, 0.42%)</title><rect x="621.1" y="181" width="4.9" height="15.0" fill="rgb(243,131,13)" rx="2" ry="2" />
<text  x="624.10" y="191.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (3 samples, 0.05%)</title><rect x="759.3" y="261" width="0.6" height="15.0" fill="rgb(219,127,19)" rx="2" ry="2" />
<text  x="762.30" y="271.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.02%)</title><rect x="755.8" y="133" width="0.2" height="15.0" fill="rgb(207,8,40)" rx="2" ry="2" />
<text  x="758.77" y="143.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (1 samples, 0.02%)</title><rect x="1179.2" y="261" width="0.2" height="15.0" fill="rgb(218,98,29)" rx="2" ry="2" />
<text  x="1182.20" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (5 samples, 0.08%)</title><rect x="756.6" y="245" width="0.9" height="15.0" fill="rgb(244,45,5)" rx="2" ry="2" />
<text  x="759.55" y="255.5" ></text>
</g>
<g >
<title>memeqbody (2 samples, 0.03%)</title><rect x="757.1" y="181" width="0.4" height="15.0" fill="rgb(219,21,10)" rx="2" ry="2" />
<text  x="760.14" y="191.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.02%)</title><rect x="1177.6" y="213" width="0.2" height="15.0" fill="rgb(249,143,34)" rx="2" ry="2" />
<text  x="1180.63" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.02%)</title><rect x="1185.5" y="245" width="0.2" height="15.0" fill="rgb(236,220,54)" rx="2" ry="2" />
<text  x="1188.48" y="255.5" ></text>
</g>
<g >
<title>time.NewTimer (1 samples, 0.02%)</title><rect x="1178.0" y="293" width="0.2" height="15.0" fill="rgb(212,207,39)" rx="2" ry="2" />
<text  x="1181.03" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (1 samples, 0.02%)</title><rect x="1182.9" y="229" width="0.2" height="15.0" fill="rgb(225,171,26)" rx="2" ry="2" />
<text  x="1185.93" y="239.5" ></text>
</g>
<g >
<title>runtime.fastrand (100 samples, 1.66%)</title><rect x="314.7" y="277" width="19.6" height="15.0" fill="rgb(226,207,43)" rx="2" ry="2" />
<text  x="317.67" y="287.5" ></text>
</g>
<g >
<title>crypto/rand.(*devReader).Read (1 samples, 0.02%)</title><rect x="620.9" y="133" width="0.2" height="15.0" fill="rgb(219,216,12)" rx="2" ry="2" />
<text  x="623.91" y="143.5" ></text>
</g>
<g >
<title>crypto/rand.batched.func1 (1 samples, 0.02%)</title><rect x="620.9" y="117" width="0.2" height="15.0" fill="rgb(231,25,45)" rx="2" ry="2" />
<text  x="623.91" y="127.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (3 samples, 0.05%)</title><rect x="626.4" y="165" width="0.6" height="15.0" fill="rgb(234,112,32)" rx="2" ry="2" />
<text  x="629.40" y="175.5" ></text>
</g>
<g >
<title>math/big.nat.div (3 samples, 0.05%)</title><rect x="758.7" y="213" width="0.6" height="15.0" fill="rgb(253,132,19)" rx="2" ry="2" />
<text  x="761.71" y="223.5" ></text>
</g>
<g >
<title>runtime.notetsleepg (1 samples, 0.02%)</title><rect x="1189.6" y="309" width="0.2" height="15.0" fill="rgb(215,6,39)" rx="2" ry="2" />
<text  x="1192.61" y="319.5" ></text>
</g>
<g >
<title>runtime.runqgrab (4 samples, 0.07%)</title><rect x="1186.7" y="245" width="0.7" height="15.0" fill="rgb(210,227,5)" rx="2" ry="2" />
<text  x="1189.66" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.03%)</title><rect x="620.5" y="181" width="0.4" height="15.0" fill="rgb(211,24,20)" rx="2" ry="2" />
<text  x="623.51" y="191.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Reset (1 samples, 0.02%)</title><rect x="745.8" y="229" width="0.2" height="15.0" fill="rgb(246,30,1)" rx="2" ry="2" />
<text  x="748.76" y="239.5" ></text>
</g>
<g >
<title>crypto/rsa.SignPKCS1v15 (53 samples, 0.88%)</title><rect x="746.2" y="245" width="10.4" height="15.0" fill="rgb(241,212,0)" rx="2" ry="2" />
<text  x="749.15" y="255.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (4 samples, 0.07%)</title><rect x="628.4" y="197" width="0.8" height="15.0" fill="rgb(241,22,12)" rx="2" ry="2" />
<text  x="631.37" y="207.5" ></text>
</g>
<g >
<title>net.(*conn).Write (3 samples, 0.05%)</title><rect x="757.7" y="261" width="0.6" height="15.0" fill="rgb(216,189,19)" rx="2" ry="2" />
<text  x="760.73" y="271.5" ></text>
</g>
<g >
<title>encoding/json.unquoteBytes (1 samples, 0.02%)</title><rect x="1178.6" y="197" width="0.2" height="15.0" fill="rgb(248,104,32)" rx="2" ry="2" />
<text  x="1181.61" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.07%)</title><rect x="1181.8" y="277" width="0.7" height="15.0" fill="rgb(248,135,31)" rx="2" ry="2" />
<text  x="1184.76" y="287.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).View (2 samples, 0.03%)</title><rect x="620.5" y="277" width="0.4" height="15.0" fill="rgb(231,38,45)" rx="2" ry="2" />
<text  x="623.51" y="287.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (2 samples, 0.03%)</title><rect x="628.8" y="165" width="0.4" height="15.0" fill="rgb(210,55,41)" rx="2" ry="2" />
<text  x="631.76" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="627.4" y="149" width="0.2" height="15.0" fill="rgb(242,191,25)" rx="2" ry="2" />
<text  x="630.38" y="159.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).MineBlock (1 samples, 0.02%)</title><rect x="34.1" y="309" width="0.2" height="15.0" fill="rgb(239,81,42)" rx="2" ry="2" />
<text  x="37.15" y="319.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.02%)</title><rect x="1183.1" y="261" width="0.2" height="15.0" fill="rgb(239,103,29)" rx="2" ry="2" />
<text  x="1186.13" y="271.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (3 samples, 0.05%)</title><rect x="631.1" y="277" width="0.6" height="15.0" fill="rgb(227,225,25)" rx="2" ry="2" />
<text  x="634.11" y="287.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (4 samples, 0.07%)</title><rect x="755.8" y="181" width="0.8" height="15.0" fill="rgb(216,175,47)" rx="2" ry="2" />
<text  x="758.77" y="191.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).SendReply (34 samples, 0.57%)</title><rect x="620.9" y="293" width="6.7" height="15.0" fill="rgb(232,3,24)" rx="2" ry="2" />
<text  x="623.91" y="303.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.02%)</title><rect x="627.4" y="101" width="0.2" height="15.0" fill="rgb(216,229,48)" rx="2" ry="2" />
<text  x="630.38" y="111.5" ></text>
</g>
<g >
<title>internal/syscall/unix.GetRandom (1 samples, 0.02%)</title><rect x="620.9" y="85" width="0.2" height="15.0" fill="rgb(228,111,23)" rx="2" ry="2" />
<text  x="623.91" y="95.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.02%)</title><rect x="1178.0" y="261" width="0.2" height="15.0" fill="rgb(246,229,17)" rx="2" ry="2" />
<text  x="1181.03" y="271.5" ></text>
</g>
<g >
<title>crypto/rsa.decrypt (49 samples, 0.82%)</title><rect x="746.2" y="213" width="9.6" height="15.0" fill="rgb(210,23,11)" rx="2" ry="2" />
<text  x="749.15" y="223.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.02%)</title><rect x="1184.9" y="261" width="0.2" height="15.0" fill="rgb(229,131,41)" rx="2" ry="2" />
<text  x="1187.90" y="271.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).handleProposal (11 samples, 0.18%)</title><rect x="627.8" y="309" width="2.1" height="15.0" fill="rgb(231,190,38)" rx="2" ry="2" />
<text  x="630.78" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Proposer).Run (2,777 samples, 46.20%)</title><rect x="631.7" y="325" width="545.1" height="15.0" fill="rgb(246,217,50)" rx="2" ry="2" />
<text  x="634.70" y="335.5" >BCDns_0.1/consensusMy/service.(*Proposer).Run</text>
</g>
<g >
<title>math/big.(*Int).Exp (3 samples, 0.05%)</title><rect x="626.4" y="181" width="0.6" height="15.0" fill="rgb(225,158,5)" rx="2" ry="2" />
<text  x="629.40" y="191.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.02%)</title><rect x="630.1" y="229" width="0.2" height="15.0" fill="rgb(219,38,45)" rx="2" ry="2" />
<text  x="633.13" y="239.5" ></text>
</g>
<g >
<title>syscall.Syscall (2 samples, 0.03%)</title><rect x="631.3" y="229" width="0.4" height="15.0" fill="rgb(235,63,0)" rx="2" ry="2" />
<text  x="634.31" y="239.5" ></text>
</g>
<g >
<title>math/big.nat.expNNMontgomery (22 samples, 0.37%)</title><rect x="621.7" y="149" width="4.3" height="15.0" fill="rgb(226,188,25)" rx="2" ry="2" />
<text  x="624.69" y="159.5" ></text>
</g>
<g >
<title>runtime.fastrandn (130 samples, 2.16%)</title><rect x="308.8" y="293" width="25.5" height="15.0" fill="rgb(225,191,11)" rx="2" ry="2" />
<text  x="311.78" y="303.5" >r..</text>
</g>
<g >
<title>runtime.madvise (1 samples, 0.02%)</title><rect x="1182.7" y="229" width="0.2" height="15.0" fill="rgb(245,107,38)" rx="2" ry="2" />
<text  x="1185.74" y="239.5" ></text>
</g>
<g >
<title>runtime.stackcacherefill (1 samples, 0.02%)</title><rect x="1177.8" y="181" width="0.2" height="15.0" fill="rgb(224,178,23)" rx="2" ry="2" />
<text  x="1180.83" y="191.5" ></text>
</g>
<g >
<title>runtime.mcall (22 samples, 0.37%)</title><rect x="1184.7" y="325" width="4.3" height="15.0" fill="rgb(245,116,51)" rx="2" ry="2" />
<text  x="1187.70" y="335.5" ></text>
</g>
<g >
<title>math/big.nat.sub (1 samples, 0.02%)</title><rect x="754.8" y="117" width="0.2" height="15.0" fill="rgb(246,105,34)" rx="2" ry="2" />
<text  x="757.79" y="127.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.02%)</title><rect x="758.5" y="261" width="0.2" height="15.0" fill="rgb(219,17,14)" rx="2" ry="2" />
<text  x="761.52" y="271.5" ></text>
</g>
<g >
<title>syscall.Write (3 samples, 0.05%)</title><rect x="757.7" y="213" width="0.6" height="15.0" fill="rgb(205,147,32)" rx="2" ry="2" />
<text  x="760.73" y="223.5" ></text>
</g>
<g >
<title>fmt.(*pp).free (1 samples, 0.02%)</title><rect x="1179.4" y="277" width="0.2" height="15.0" fill="rgb(230,119,47)" rx="2" ry="2" />
<text  x="1182.40" y="287.5" ></text>
</g>
<g >
<title>math/big.nat.setBytes (1 samples, 0.02%)</title><rect x="629.2" y="229" width="0.1" height="15.0" fill="rgb(206,103,24)" rx="2" ry="2" />
<text  x="632.15" y="239.5" ></text>
</g>
<g >
<title>runtime.stackpoolalloc (1 samples, 0.02%)</title><rect x="1177.8" y="165" width="0.2" height="15.0" fill="rgb(247,203,22)" rx="2" ry="2" />
<text  x="1180.83" y="175.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.02%)</title><rect x="1184.5" y="261" width="0.2" height="15.0" fill="rgb(241,41,10)" rx="2" ry="2" />
<text  x="1187.50" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="1178.2" y="245" width="0.2" height="15.0" fill="rgb(215,103,1)" rx="2" ry="2" />
<text  x="1181.22" y="255.5" ></text>
</g>
<g >
<title>runtime.stopm (6 samples, 0.10%)</title><rect x="1187.4" y="261" width="1.2" height="15.0" fill="rgb(230,168,54)" rx="2" ry="2" />
<text  x="1190.45" y="271.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (25 samples, 0.42%)</title><rect x="621.1" y="165" width="4.9" height="15.0" fill="rgb(219,72,4)" rx="2" ry="2" />
<text  x="624.10" y="175.5" ></text>
</g>
<g >
<title>os.(*File).Write (2 samples, 0.03%)</title><rect x="1177.0" y="277" width="0.4" height="15.0" fill="rgb(243,48,33)" rx="2" ry="2" />
<text  x="1180.04" y="287.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (3 samples, 0.05%)</title><rect x="756.0" y="133" width="0.6" height="15.0" fill="rgb(215,135,2)" rx="2" ry="2" />
<text  x="758.97" y="143.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (60 samples, 1.00%)</title><rect x="297.0" y="293" width="11.8" height="15.0" fill="rgb(227,32,16)" rx="2" ry="2" />
<text  x="300.00" y="303.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (1 samples, 0.02%)</title><rect x="626.2" y="133" width="0.2" height="15.0" fill="rgb(247,87,2)" rx="2" ry="2" />
<text  x="629.21" y="143.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneName (1 samples, 0.02%)</title><rect x="629.3" y="277" width="0.2" height="15.0" fill="rgb(222,26,9)" rx="2" ry="2" />
<text  x="632.35" y="287.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.02%)</title><rect x="1185.1" y="261" width="0.2" height="15.0" fill="rgb(211,229,10)" rx="2" ry="2" />
<text  x="1188.09" y="271.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.02%)</title><rect x="1178.2" y="165" width="0.2" height="15.0" fill="rgb(213,101,19)" rx="2" ry="2" />
<text  x="1181.22" y="175.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (1 samples, 0.02%)</title><rect x="758.5" y="293" width="0.2" height="15.0" fill="rgb(229,184,11)" rx="2" ry="2" />
<text  x="761.52" y="303.5" ></text>
</g>
<g >
<title>math/big.(*Int).Mod (2 samples, 0.03%)</title><rect x="753.2" y="197" width="0.4" height="15.0" fill="rgb(233,105,48)" rx="2" ry="2" />
<text  x="756.22" y="207.5" ></text>
</g>
<g >
<title>strconv.underscoreOK (1 samples, 0.02%)</title><rect x="759.5" y="197" width="0.2" height="15.0" fill="rgb(206,63,25)" rx="2" ry="2" />
<text  x="762.50" y="207.5" ></text>
</g>
<g >
<title>runtime.scanstack (1 samples, 0.02%)</title><rect x="1183.1" y="213" width="0.2" height="15.0" fill="rgb(217,50,39)" rx="2" ry="2" />
<text  x="1186.13" y="223.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).ExecuteBlock (37 samples, 0.62%)</title><rect x="620.3" y="309" width="7.3" height="15.0" fill="rgb(216,198,38)" rx="2" ry="2" />
<text  x="623.32" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (2 samples, 0.03%)</title><rect x="753.2" y="149" width="0.4" height="15.0" fill="rgb(235,49,49)" rx="2" ry="2" />
<text  x="756.22" y="159.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).Run (54 samples, 0.90%)</title><rect x="620.3" y="325" width="10.6" height="15.0" fill="rgb(209,136,44)" rx="2" ry="2" />
<text  x="623.32" y="335.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (1 samples, 0.02%)</title><rect x="1183.1" y="181" width="0.2" height="15.0" fill="rgb(221,7,44)" rx="2" ry="2" />
<text  x="1186.13" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (1 samples, 0.02%)</title><rect x="1182.9" y="293" width="0.2" height="15.0" fill="rgb(242,199,8)" rx="2" ry="2" />
<text  x="1185.93" y="303.5" ></text>
</g>
<g >
<title>runtime.selectgo (3 samples, 0.05%)</title><rect x="1177.4" y="309" width="0.6" height="15.0" fill="rgb(221,98,2)" rx="2" ry="2" />
<text  x="1180.44" y="319.5" ></text>
</g>
<g >
<title>reflect.name.name (1 samples, 0.02%)</title><rect x="759.3" y="165" width="0.2" height="15.0" fill="rgb(248,107,27)" rx="2" ry="2" />
<text  x="762.30" y="175.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintln (1 samples, 0.02%)</title><rect x="1179.2" y="277" width="0.2" height="15.0" fill="rgb(222,98,24)" rx="2" ry="2" />
<text  x="1182.20" y="287.5" ></text>
</g>
<g >
<title>net.(*conn).Write (2 samples, 0.03%)</title><rect x="627.0" y="245" width="0.4" height="15.0" fill="rgb(215,17,47)" rx="2" ry="2" />
<text  x="629.99" y="255.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.DNode.Send (2 samples, 0.03%)</title><rect x="627.0" y="261" width="0.4" height="15.0" fill="rgb(219,140,14)" rx="2" ry="2" />
<text  x="629.99" y="271.5" ></text>
</g>
<g >
<title>runtime.selectnbrecv (106 samples, 1.76%)</title><rect x="599.5" y="309" width="20.8" height="15.0" fill="rgb(229,34,27)" rx="2" ry="2" />
<text  x="602.51" y="319.5" ></text>
</g>
<g >
<title>runtime.resetspinning (1 samples, 0.02%)</title><rect x="1185.1" y="277" width="0.2" height="15.0" fill="rgb(236,53,11)" rx="2" ry="2" />
<text  x="1188.09" y="287.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="1187.3" y="229" width="0.1" height="15.0" fill="rgb(230,12,14)" rx="2" ry="2" />
<text  x="1190.25" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="1182.5" y="309" width="0.2" height="15.0" fill="rgb(237,73,14)" rx="2" ry="2" />
<text  x="1185.54" y="319.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.PreLock (1 samples, 0.02%)</title><rect x="627.4" y="229" width="0.2" height="15.0" fill="rgb(210,158,35)" rx="2" ry="2" />
<text  x="630.38" y="239.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (2 samples, 0.03%)</title><rect x="1178.6" y="277" width="0.4" height="15.0" fill="rgb(216,172,49)" rx="2" ry="2" />
<text  x="1181.61" y="287.5" ></text>
</g>
<g >
<title>crypto/rand.Int (1 samples, 0.02%)</title><rect x="746.2" y="197" width="0.1" height="15.0" fill="rgb(214,204,18)" rx="2" ry="2" />
<text  x="749.15" y="207.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (5 samples, 0.08%)</title><rect x="1180.6" y="293" width="1.0" height="15.0" fill="rgb(228,187,36)" rx="2" ry="2" />
<text  x="1183.58" y="303.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (2 samples, 0.03%)</title><rect x="746.3" y="149" width="0.4" height="15.0" fill="rgb(205,178,33)" rx="2" ry="2" />
<text  x="749.35" y="159.5" ></text>
</g>
<g >
<title>math/big.nat.div (1 samples, 0.02%)</title><rect x="626.2" y="149" width="0.2" height="15.0" fill="rgb(244,99,9)" rx="2" ry="2" />
<text  x="629.21" y="159.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.02%)</title><rect x="630.3" y="245" width="0.2" height="15.0" fill="rgb(218,206,46)" rx="2" ry="2" />
<text  x="633.33" y="255.5" ></text>
</g>
<g >
<title>runtime.sysmon (3 samples, 0.05%)</title><rect x="1189.0" y="293" width="0.6" height="15.0" fill="rgb(211,98,26)" rx="2" ry="2" />
<text  x="1192.02" y="303.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="1184.3" y="245" width="0.2" height="15.0" fill="rgb(240,152,54)" rx="2" ry="2" />
<text  x="1187.31" y="255.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (1 samples, 0.02%)</title><rect x="34.3" y="229" width="0.2" height="15.0" fill="rgb(243,101,31)" rx="2" ry="2" />
<text  x="37.34" y="239.5" ></text>
</g>
<g >
<title>crypto/rsa.decryptAndCheck (53 samples, 0.88%)</title><rect x="746.2" y="229" width="10.4" height="15.0" fill="rgb(215,3,23)" rx="2" ry="2" />
<text  x="749.15" y="239.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (2 samples, 0.03%)</title><rect x="1178.6" y="293" width="0.4" height="15.0" fill="rgb(252,113,4)" rx="2" ry="2" />
<text  x="1181.61" y="303.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="1188.8" y="197" width="0.2" height="15.0" fill="rgb(238,143,35)" rx="2" ry="2" />
<text  x="1191.82" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).Sign (31 samples, 0.52%)</title><rect x="620.9" y="245" width="6.1" height="15.0" fill="rgb(221,52,50)" rx="2" ry="2" />
<text  x="623.91" y="255.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).View (1 samples, 0.02%)</title><rect x="34.1" y="277" width="0.2" height="15.0" fill="rgb(208,89,53)" rx="2" ry="2" />
<text  x="37.15" y="287.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.02%)</title><rect x="1185.1" y="213" width="0.2" height="15.0" fill="rgb(234,176,29)" rx="2" ry="2" />
<text  x="1188.09" y="223.5" ></text>
</g>
<g >
<title>syscall.write (1 samples, 0.02%)</title><rect x="760.1" y="213" width="0.2" height="15.0" fill="rgb(224,181,29)" rx="2" ry="2" />
<text  x="763.09" y="223.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (35 samples, 0.58%)</title><rect x="746.3" y="197" width="6.9" height="15.0" fill="rgb(233,104,51)" rx="2" ry="2" />
<text  x="749.35" y="207.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.02%)</title><rect x="1189.6" y="293" width="0.2" height="15.0" fill="rgb(208,31,49)" rx="2" ry="2" />
<text  x="1192.61" y="303.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (1 samples, 0.02%)</title><rect x="759.9" y="261" width="0.2" height="15.0" fill="rgb(205,115,11)" rx="2" ry="2" />
<text  x="762.89" y="271.5" ></text>
</g>
<g >
<title>math/big.nat.expNNMontgomery (32 samples, 0.53%)</title><rect x="746.7" y="165" width="6.3" height="15.0" fill="rgb(237,73,19)" rx="2" ry="2" />
<text  x="749.74" y="175.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Hash (1 samples, 0.02%)</title><rect x="745.8" y="277" width="0.2" height="15.0" fill="rgb(207,26,7)" rx="2" ry="2" />
<text  x="748.76" y="287.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (2 samples, 0.03%)</title><rect x="627.0" y="213" width="0.4" height="15.0" fill="rgb(241,38,54)" rx="2" ry="2" />
<text  x="629.99" y="223.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Name (1 samples, 0.02%)</title><rect x="759.3" y="197" width="0.2" height="15.0" fill="rgb(219,140,23)" rx="2" ry="2" />
<text  x="762.30" y="207.5" ></text>
</g>
<g >
<title>math/big.(*Int).SetBytes (1 samples, 0.02%)</title><rect x="629.2" y="245" width="0.1" height="15.0" fill="rgb(244,29,2)" rx="2" ry="2" />
<text  x="632.15" y="255.5" ></text>
</g>
<g >
<title>os.(*File).write (5 samples, 0.08%)</title><rect x="1179.6" y="261" width="1.0" height="15.0" fill="rgb(212,105,24)" rx="2" ry="2" />
<text  x="1182.60" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (8 samples, 0.13%)</title><rect x="1183.1" y="309" width="1.6" height="15.0" fill="rgb(216,38,43)" rx="2" ry="2" />
<text  x="1186.13" y="319.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (1 samples, 0.02%)</title><rect x="34.3" y="309" width="0.2" height="15.0" fill="rgb(244,105,3)" rx="2" ry="2" />
<text  x="37.34" y="319.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.03%)</title><rect x="1177.6" y="277" width="0.4" height="15.0" fill="rgb(207,52,2)" rx="2" ry="2" />
<text  x="1180.63" y="287.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneName (1 samples, 0.02%)</title><rect x="745.6" y="277" width="0.2" height="15.0" fill="rgb(229,9,23)" rx="2" ry="2" />
<text  x="748.56" y="287.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock (1 samples, 0.02%)</title><rect x="34.1" y="293" width="0.2" height="15.0" fill="rgb(248,214,29)" rx="2" ry="2" />
<text  x="37.15" y="303.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.getDigest2 (1 samples, 0.02%)</title><rect x="746.0" y="245" width="0.2" height="15.0" fill="rgb(244,116,44)" rx="2" ry="2" />
<text  x="748.95" y="255.5" ></text>
</g>
<g >
<title>runtime.gcDrain (8 samples, 0.13%)</title><rect x="1183.1" y="277" width="1.6" height="15.0" fill="rgb(238,192,32)" rx="2" ry="2" />
<text  x="1186.13" y="287.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).AddBlock (1 samples, 0.02%)</title><rect x="620.3" y="293" width="0.2" height="15.0" fill="rgb(248,29,45)" rx="2" ry="2" />
<text  x="623.32" y="303.5" ></text>
</g>
<g >
<title>reflect.Value.SetMapIndex (1 samples, 0.02%)</title><rect x="630.1" y="213" width="0.2" height="15.0" fill="rgb(248,128,7)" rx="2" ry="2" />
<text  x="633.13" y="223.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.02%)</title><rect x="1185.1" y="245" width="0.2" height="15.0" fill="rgb(215,10,34)" rx="2" ry="2" />
<text  x="1188.09" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.02%)</title><rect x="758.5" y="277" width="0.2" height="15.0" fill="rgb(246,4,35)" rx="2" ry="2" />
<text  x="761.52" y="287.5" ></text>
</g>
<g >
<title>runtime.epollwait (4 samples, 0.07%)</title><rect x="1185.9" y="245" width="0.8" height="15.0" fill="rgb(233,52,48)" rx="2" ry="2" />
<text  x="1188.88" y="255.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.02%)</title><rect x="1177.8" y="229" width="0.2" height="15.0" fill="rgb(217,202,48)" rx="2" ry="2" />
<text  x="1180.83" y="239.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.02%)</title><rect x="760.1" y="197" width="0.2" height="15.0" fill="rgb(229,27,17)" rx="2" ry="2" />
<text  x="763.09" y="207.5" ></text>
</g>
<g >
<title>runtime.selunlock (675 samples, 11.23%)</title><rect x="467.0" y="293" width="132.5" height="15.0" fill="rgb(253,154,16)" rx="2" ry="2" />
<text  x="470.00" y="303.5" >runtime.selunlock</text>
</g>
<g >
<title>runtime.sysUnused (1 samples, 0.02%)</title><rect x="1182.7" y="245" width="0.2" height="15.0" fill="rgb(254,156,47)" rx="2" ry="2" />
<text  x="1185.74" y="255.5" ></text>
</g>
<g >
<title>runtime.runqsteal (1 samples, 0.02%)</title><rect x="1184.7" y="261" width="0.2" height="15.0" fill="rgb(242,73,50)" rx="2" ry="2" />
<text  x="1187.70" y="271.5" ></text>
</g>
<g >
<title>math/big.nat.norm (1 samples, 0.02%)</title><rect x="629.2" y="213" width="0.1" height="15.0" fill="rgb(247,12,12)" rx="2" ry="2" />
<text  x="632.15" y="223.5" ></text>
</g>
<g >
<title>syscall.Syscall (2 samples, 0.03%)</title><rect x="1177.0" y="197" width="0.4" height="15.0" fill="rgb(235,53,18)" rx="2" ry="2" />
<text  x="1180.04" y="207.5" ></text>
</g>
<g >
<title>syscall.Write (2 samples, 0.03%)</title><rect x="627.0" y="197" width="0.4" height="15.0" fill="rgb(252,144,28)" rx="2" ry="2" />
<text  x="629.99" y="207.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.02%)</title><rect x="34.1" y="181" width="0.2" height="15.0" fill="rgb(254,58,33)" rx="2" ry="2" />
<text  x="37.15" y="191.5" ></text>
</g>
<g >
<title>syscall.read (2 samples, 0.03%)</title><rect x="631.3" y="245" width="0.4" height="15.0" fill="rgb(237,41,32)" rx="2" ry="2" />
<text  x="634.31" y="255.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*BlockConfirmMessage).Sign (1 samples, 0.02%)</title><rect x="627.6" y="277" width="0.2" height="15.0" fill="rgb(213,212,10)" rx="2" ry="2" />
<text  x="630.58" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (3 samples, 0.05%)</title><rect x="759.3" y="277" width="0.6" height="15.0" fill="rgb(227,88,1)" rx="2" ry="2" />
<text  x="762.30" y="287.5" ></text>
</g>
<g >
<title>runtime.findrunnable (2 samples, 0.03%)</title><rect x="1184.7" y="277" width="0.4" height="15.0" fill="rgb(224,134,14)" rx="2" ry="2" />
<text  x="1187.70" y="287.5" ></text>
</g>
<g >
<title>math/big.basicMul (4 samples, 0.07%)</title><rect x="628.4" y="181" width="0.8" height="15.0" fill="rgb(249,147,26)" rx="2" ry="2" />
<text  x="631.37" y="191.5" ></text>
</g>
<g >
<title>runtime.usleep (3 samples, 0.05%)</title><rect x="1189.0" y="277" width="0.6" height="15.0" fill="rgb(234,76,39)" rx="2" ry="2" />
<text  x="1192.02" y="287.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (12 samples, 0.20%)</title><rect x="623.5" y="117" width="2.3" height="15.0" fill="rgb(217,46,40)" rx="2" ry="2" />
<text  x="626.46" y="127.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (3 samples, 0.05%)</title><rect x="629.9" y="277" width="0.6" height="15.0" fill="rgb(236,94,16)" rx="2" ry="2" />
<text  x="632.94" y="287.5" ></text>
</g>
</g>
</svg>

