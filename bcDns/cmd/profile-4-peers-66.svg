<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="518.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="501" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="501" > </text>
<g id="frames">
<g >
<title>fmt.(*pp).catchPanic (1 samples, 0.07%)</title><rect x="706.7" y="357" width="0.8" height="15.0" fill="rgb(221,26,52)" rx="2" ry="2" />
<text  x="709.68" y="367.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.(*Mutex).Lock (9 samples, 0.66%)</title><rect x="264.3" y="389" width="7.8" height="15.0" fill="rgb(236,145,42)" rx="2" ry="2" />
<text  x="267.29" y="399.5" ></text>
</g>
<g >
<title>encoding/json.cachedTypeFields (1 samples, 0.07%)</title><rect x="700.6" y="373" width="0.9" height="15.0" fill="rgb(224,189,34)" rx="2" ry="2" />
<text  x="703.58" y="383.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).VerifySignature (61 samples, 4.50%)</title><rect x="627.4" y="421" width="53.2" height="15.0" fill="rgb(229,209,10)" rx="2" ry="2" />
<text  x="630.43" y="431.5" >BCDns..</text>
</g>
<g >
<title>reflect.Value.Call (1 samples, 0.07%)</title><rect x="11.7" y="357" width="0.9" height="15.0" fill="rgb(238,177,46)" rx="2" ry="2" />
<text  x="14.74" y="367.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.07%)</title><rect x="314.8" y="309" width="0.9" height="15.0" fill="rgb(224,205,25)" rx="2" ry="2" />
<text  x="317.80" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.07%)</title><rect x="340.9" y="277" width="0.9" height="15.0" fill="rgb(217,213,9)" rx="2" ry="2" />
<text  x="343.92" y="287.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (213 samples, 15.72%)</title><rect x="351.4" y="325" width="185.5" height="15.0" fill="rgb(207,187,26)" rx="2" ry="2" />
<text  x="354.37" y="335.5" >math/big.(*Int).Exp</text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalReplyMessage).Hash (2 samples, 0.15%)</title><rect x="253.0" y="373" width="1.7" height="15.0" fill="rgb(250,36,51)" rx="2" ry="2" />
<text  x="255.97" y="383.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.07%)</title><rect x="326.1" y="325" width="0.9" height="15.0" fill="rgb(232,201,51)" rx="2" ry="2" />
<text  x="329.12" y="335.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.07%)</title><rect x="760.7" y="277" width="0.8" height="15.0" fill="rgb(225,119,18)" rx="2" ry="2" />
<text  x="763.67" y="287.5" ></text>
</g>
<g >
<title>runtime.scang (1 samples, 0.07%)</title><rect x="804.2" y="261" width="0.9" height="15.0" fill="rgb(252,7,21)" rx="2" ry="2" />
<text  x="807.21" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (2 samples, 0.15%)</title><rect x="571.7" y="357" width="1.7" height="15.0" fill="rgb(231,14,51)" rx="2" ry="2" />
<text  x="574.70" y="367.5" ></text>
</g>
<g >
<title>runtime.resetspinning (1 samples, 0.07%)</title><rect x="976.6" y="405" width="0.9" height="15.0" fill="rgb(248,2,32)" rx="2" ry="2" />
<text  x="979.64" y="415.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (1 samples, 0.07%)</title><rect x="804.2" y="277" width="0.9" height="15.0" fill="rgb(225,175,34)" rx="2" ry="2" />
<text  x="807.21" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (2 samples, 0.15%)</title><rect x="253.0" y="341" width="1.7" height="15.0" fill="rgb(231,71,2)" rx="2" ry="2" />
<text  x="255.97" y="351.5" ></text>
</g>
<g >
<title>fmt.Fprintln (3 samples, 0.22%)</title><rect x="752.8" y="421" width="2.6" height="15.0" fill="rgb(208,23,30)" rx="2" ry="2" />
<text  x="755.83" y="431.5" ></text>
</g>
<g >
<title>runtime.(*gcSweepBuf).pop (1 samples, 0.07%)</title><rect x="902.6" y="421" width="0.9" height="15.0" fill="rgb(221,56,47)" rx="2" ry="2" />
<text  x="905.62" y="431.5" ></text>
</g>
<g >
<title>runtime.chansend (3 samples, 0.22%)</title><rect x="334.8" y="421" width="2.6" height="15.0" fill="rgb(232,27,0)" rx="2" ry="2" />
<text  x="337.83" y="431.5" ></text>
</g>
<g >
<title>runtime.pollWork (1 samples, 0.07%)</title><rect x="930.5" y="389" width="0.9" height="15.0" fill="rgb(240,169,54)" rx="2" ry="2" />
<text  x="933.49" y="399.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (8 samples, 0.59%)</title><rect x="327.9" y="421" width="6.9" height="15.0" fill="rgb(249,152,20)" rx="2" ry="2" />
<text  x="330.86" y="431.5" ></text>
</g>
<g >
<title>runtime.schedule (109 samples, 8.04%)</title><rect x="980.1" y="421" width="94.9" height="15.0" fill="rgb(206,98,13)" rx="2" ry="2" />
<text  x="983.13" y="431.5" >runtime.sch..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.07%)</title><rect x="327.0" y="437" width="0.9" height="15.0" fill="rgb(225,19,5)" rx="2" ry="2" />
<text  x="329.99" y="447.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.07%)</title><rect x="536.0" y="277" width="0.9" height="15.0" fill="rgb(207,201,10)" rx="2" ry="2" />
<text  x="538.99" y="287.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneNameByIndex (3 samples, 0.22%)</title><rect x="337.4" y="373" width="2.7" height="15.0" fill="rgb(207,8,23)" rx="2" ry="2" />
<text  x="340.44" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.30%)</title><rect x="763.3" y="373" width="3.5" height="15.0" fill="rgb(223,21,33)" rx="2" ry="2" />
<text  x="766.28" y="383.5" ></text>
</g>
<g >
<title>encoding/json.unquoteBytes (1 samples, 0.07%)</title><rect x="307.8" y="293" width="0.9" height="15.0" fill="rgb(222,185,15)" rx="2" ry="2" />
<text  x="310.83" y="303.5" ></text>
</g>
<g >
<title>runtime.netpollblock (1 samples, 0.07%)</title><rect x="808.6" y="341" width="0.8" height="15.0" fill="rgb(207,61,22)" rx="2" ry="2" />
<text  x="811.57" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (2 samples, 0.15%)</title><rect x="277.4" y="357" width="1.7" height="15.0" fill="rgb(231,159,10)" rx="2" ry="2" />
<text  x="280.35" y="367.5" ></text>
</g>
<g >
<title>math/big.lehmerSimulate (6 samples, 0.44%)</title><rect x="539.5" y="277" width="5.2" height="15.0" fill="rgb(242,27,23)" rx="2" ry="2" />
<text  x="542.48" y="287.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.07%)</title><rect x="313.1" y="245" width="0.8" height="15.0" fill="rgb(234,84,35)" rx="2" ry="2" />
<text  x="316.06" y="255.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).View (4 samples, 0.30%)</title><rect x="23.9" y="405" width="3.5" height="15.0" fill="rgb(233,25,4)" rx="2" ry="2" />
<text  x="26.93" y="415.5" ></text>
</g>
<g >
<title>runtime.rawbyteslice (1 samples, 0.07%)</title><rect x="23.1" y="389" width="0.8" height="15.0" fill="rgb(207,195,3)" rx="2" ry="2" />
<text  x="26.06" y="399.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.07%)</title><rect x="586.5" y="405" width="0.9" height="15.0" fill="rgb(206,193,44)" rx="2" ry="2" />
<text  x="589.50" y="415.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.07%)</title><rect x="532.5" y="197" width="0.9" height="15.0" fill="rgb(233,54,42)" rx="2" ry="2" />
<text  x="535.51" y="207.5" ></text>
</g>
<g >
<title>math/big.basicMul (1 samples, 0.07%)</title><rect x="300.0" y="309" width="0.9" height="15.0" fill="rgb(232,23,50)" rx="2" ry="2" />
<text  x="302.99" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Proposer).Run (475 samples, 35.06%)</title><rect x="337.4" y="453" width="413.7" height="15.0" fill="rgb(245,78,12)" rx="2" ry="2" />
<text  x="340.44" y="463.5" >BCDns_0.1/consensusMy/service.(*Proposer).Run</text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.07%)</title><rect x="613.5" y="277" width="0.9" height="15.0" fill="rgb(229,100,24)" rx="2" ry="2" />
<text  x="616.50" y="287.5" ></text>
</g>
<g >
<title>encoding/json.typeEncoder (1 samples, 0.07%)</title><rect x="345.3" y="325" width="0.8" height="15.0" fill="rgb(220,110,45)" rx="2" ry="2" />
<text  x="348.28" y="335.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.Map (1 samples, 0.07%)</title><rect x="11.7" y="373" width="0.9" height="15.0" fill="rgb(213,134,30)" rx="2" ry="2" />
<text  x="14.74" y="383.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).SendReply (285 samples, 21.03%)</title><rect x="27.4" y="421" width="248.2" height="15.0" fill="rgb(228,141,42)" rx="2" ry="2" />
<text  x="30.42" y="431.5" >BCDns_0.1/consensusMy/service.(*N..</text>
</g>
<g >
<title>runtime.injectglist (1 samples, 0.07%)</title><rect x="989.7" y="389" width="0.9" height="15.0" fill="rgb(248,63,42)" rx="2" ry="2" />
<text  x="992.70" y="399.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.PackMessage (2 samples, 0.15%)</title><rect x="262.5" y="389" width="1.8" height="15.0" fill="rgb(249,122,37)" rx="2" ry="2" />
<text  x="265.55" y="399.5" ></text>
</g>
<g >
<title>reflect.deepValueEqual (1 samples, 0.07%)</title><rect x="279.1" y="357" width="0.9" height="15.0" fill="rgb(212,140,7)" rx="2" ry="2" />
<text  x="282.09" y="367.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.07%)</title><rect x="320.0" y="373" width="0.9" height="15.0" fill="rgb(241,130,35)" rx="2" ry="2" />
<text  x="323.02" y="383.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (4 samples, 0.30%)</title><rect x="855.6" y="277" width="3.5" height="15.0" fill="rgb(232,84,29)" rx="2" ry="2" />
<text  x="858.59" y="287.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.07%)</title><rect x="27.4" y="325" width="0.9" height="15.0" fill="rgb(251,13,54)" rx="2" ry="2" />
<text  x="30.42" y="335.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (3 samples, 0.22%)</title><rect x="977.5" y="421" width="2.6" height="15.0" fill="rgb(232,17,51)" rx="2" ry="2" />
<text  x="980.51" y="431.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (2 samples, 0.15%)</title><rect x="277.4" y="341" width="1.7" height="15.0" fill="rgb(252,27,22)" rx="2" ry="2" />
<text  x="280.35" y="351.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.07%)</title><rect x="262.5" y="325" width="0.9" height="15.0" fill="rgb(244,216,18)" rx="2" ry="2" />
<text  x="265.55" y="335.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.07%)</title><rect x="976.6" y="341" width="0.9" height="15.0" fill="rgb(241,128,22)" rx="2" ry="2" />
<text  x="979.64" y="351.5" ></text>
</g>
<g >
<title>encoding/json.encodeByteSlice (1 samples, 0.07%)</title><rect x="273.0" y="325" width="0.9" height="15.0" fill="rgb(215,66,6)" rx="2" ry="2" />
<text  x="276.00" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.15%)</title><rect x="17.0" y="293" width="1.7" height="15.0" fill="rgb(215,135,39)" rx="2" ry="2" />
<text  x="19.97" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.07%)</title><rect x="262.5" y="149" width="0.9" height="15.0" fill="rgb(238,186,22)" rx="2" ry="2" />
<text  x="265.55" y="159.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.07%)</title><rect x="25.7" y="149" width="0.8" height="15.0" fill="rgb(228,16,15)" rx="2" ry="2" />
<text  x="28.68" y="159.5" ></text>
</g>
<g >
<title>BCDns_0.1/utils.SHA256 (1 samples, 0.07%)</title><rect x="342.7" y="389" width="0.8" height="15.0" fill="rgb(248,34,50)" rx="2" ry="2" />
<text  x="345.66" y="399.5" ></text>
</g>
<g >
<title>crypto/rand.getRandomBatch (3 samples, 0.22%)</title><rect x="28.3" y="229" width="2.6" height="15.0" fill="rgb(212,52,39)" rx="2" ry="2" />
<text  x="31.29" y="239.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (1 samples, 0.07%)</title><rect x="307.8" y="373" width="0.9" height="15.0" fill="rgb(206,54,49)" rx="2" ry="2" />
<text  x="310.83" y="383.5" ></text>
</g>
<g >
<title>fmt.newPrinter (1 samples, 0.07%)</title><rect x="719.7" y="405" width="0.9" height="15.0" fill="rgb(207,149,47)" rx="2" ry="2" />
<text  x="722.74" y="415.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast.func1 (2 samples, 0.15%)</title><rect x="1182.2" y="373" width="1.7" height="15.0" fill="rgb(230,10,15)" rx="2" ry="2" />
<text  x="1185.16" y="383.5" ></text>
</g>
<g >
<title>runtime.assertE2I2 (1 samples, 0.07%)</title><rect x="320.0" y="357" width="0.9" height="15.0" fill="rgb(253,167,23)" rx="2" ry="2" />
<text  x="323.02" y="367.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (2 samples, 0.15%)</title><rect x="916.6" y="309" width="1.7" height="15.0" fill="rgb(229,141,9)" rx="2" ry="2" />
<text  x="919.55" y="319.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (1 samples, 0.07%)</title><rect x="15.2" y="213" width="0.9" height="15.0" fill="rgb(224,31,9)" rx="2" ry="2" />
<text  x="18.23" y="223.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Name (1 samples, 0.07%)</title><rect x="697.1" y="293" width="0.9" height="15.0" fill="rgb(253,25,24)" rx="2" ry="2" />
<text  x="700.10" y="303.5" ></text>
</g>
<g >
<title>runtime.gogo (3 samples, 0.22%)</title><rect x="882.6" y="437" width="2.6" height="15.0" fill="rgb(244,120,44)" rx="2" ry="2" />
<text  x="885.59" y="447.5" ></text>
</g>
<g >
<title>reflect.valueInterface (5 samples, 0.37%)</title><rect x="715.4" y="309" width="4.3" height="15.0" fill="rgb(216,25,48)" rx="2" ry="2" />
<text  x="718.39" y="319.5" ></text>
</g>
<g >
<title>runtime.wakep (4 samples, 0.30%)</title><rect x="855.6" y="325" width="3.5" height="15.0" fill="rgb(249,94,50)" rx="2" ry="2" />
<text  x="858.59" y="335.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.15%)</title><rect x="333.1" y="245" width="1.7" height="15.0" fill="rgb(254,33,37)" rx="2" ry="2" />
<text  x="336.08" y="255.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (1 samples, 0.07%)</title><rect x="339.2" y="245" width="0.9" height="15.0" fill="rgb(238,109,4)" rx="2" ry="2" />
<text  x="342.18" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="585.6" y="309" width="0.9" height="15.0" fill="rgb(243,159,22)" rx="2" ry="2" />
<text  x="588.63" y="319.5" ></text>
</g>
<g >
<title>math/big.basicMul (7 samples, 0.52%)</title><rect x="671.8" y="325" width="6.1" height="15.0" fill="rgb(231,91,27)" rx="2" ry="2" />
<text  x="674.85" y="335.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneName (3 samples, 0.22%)</title><rect x="303.5" y="405" width="2.6" height="15.0" fill="rgb(226,186,33)" rx="2" ry="2" />
<text  x="306.48" y="415.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (3 samples, 0.22%)</title><rect x="583.9" y="373" width="2.6" height="15.0" fill="rgb(248,141,43)" rx="2" ry="2" />
<text  x="586.89" y="383.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (4 samples, 0.30%)</title><rect x="23.9" y="373" width="3.5" height="15.0" fill="rgb(231,200,22)" rx="2" ry="2" />
<text  x="26.93" y="383.5" ></text>
</g>
<g >
<title>crypto/rsa.SignPKCS1v15 (2 samples, 0.15%)</title><rect x="280.0" y="373" width="1.7" height="15.0" fill="rgb(223,31,13)" rx="2" ry="2" />
<text  x="282.96" y="383.5" ></text>
</g>
<g >
<title>runtime.growslice (2 samples, 0.15%)</title><rect x="860.8" y="437" width="1.8" height="15.0" fill="rgb(212,115,7)" rx="2" ry="2" />
<text  x="863.82" y="447.5" ></text>
</g>
<g >
<title>runtime.startm (5 samples, 0.37%)</title><rect x="623.1" y="341" width="4.3" height="15.0" fill="rgb(227,135,38)" rx="2" ry="2" />
<text  x="626.08" y="351.5" ></text>
</g>
<g >
<title>syscall.Read (50 samples, 3.69%)</title><rect x="811.2" y="389" width="43.5" height="15.0" fill="rgb(231,131,26)" rx="2" ry="2" />
<text  x="814.18" y="399.5" >sysc..</text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (2 samples, 0.15%)</title><rect x="617.0" y="341" width="1.7" height="15.0" fill="rgb(215,118,33)" rx="2" ry="2" />
<text  x="619.98" y="351.5" ></text>
</g>
<g >
<title>internal/syscall/unix.GetRandom (3 samples, 0.22%)</title><rect x="28.3" y="213" width="2.6" height="15.0" fill="rgb(222,142,20)" rx="2" ry="2" />
<text  x="31.29" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (13 samples, 0.96%)</title><rect x="309.6" y="405" width="11.3" height="15.0" fill="rgb(205,205,38)" rx="2" ry="2" />
<text  x="312.57" y="415.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).acquireSnapshot (1 samples, 0.07%)</title><rect x="303.5" y="341" width="0.8" height="15.0" fill="rgb(211,218,13)" rx="2" ry="2" />
<text  x="306.48" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.15%)</title><rect x="17.0" y="245" width="1.7" height="15.0" fill="rgb(240,124,6)" rx="2" ry="2" />
<text  x="19.97" y="255.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (1 samples, 0.07%)</title><rect x="16.1" y="149" width="0.9" height="15.0" fill="rgb(254,198,35)" rx="2" ry="2" />
<text  x="19.10" y="159.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (55 samples, 4.06%)</title><rect x="630.9" y="389" width="47.9" height="15.0" fill="rgb(206,210,52)" rx="2" ry="2" />
<text  x="633.92" y="399.5" >cryp..</text>
</g>
<g >
<title>encoding/json.checkValid (1 samples, 0.07%)</title><rect x="26.5" y="341" width="0.9" height="15.0" fill="rgb(230,147,47)" rx="2" ry="2" />
<text  x="29.55" y="351.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.07%)</title><rect x="212.0" y="117" width="0.9" height="15.0" fill="rgb(237,83,52)" rx="2" ry="2" />
<text  x="215.04" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.07%)</title><rect x="684.9" y="309" width="0.9" height="15.0" fill="rgb(218,2,42)" rx="2" ry="2" />
<text  x="687.91" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="327.0" y="421" width="0.9" height="15.0" fill="rgb(206,193,31)" rx="2" ry="2" />
<text  x="329.99" y="431.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (2 samples, 0.15%)</title><rect x="39.6" y="229" width="1.8" height="15.0" fill="rgb(254,91,21)" rx="2" ry="2" />
<text  x="42.61" y="239.5" ></text>
</g>
<g >
<title>runtime.mapassign (1 samples, 0.07%)</title><rect x="698.0" y="309" width="0.8" height="15.0" fill="rgb(246,115,54)" rx="2" ry="2" />
<text  x="700.97" y="319.5" ></text>
</g>
<g >
<title>runtime.restartg (1 samples, 0.07%)</title><rect x="911.3" y="341" width="0.9" height="15.0" fill="rgb(235,10,51)" rx="2" ry="2" />
<text  x="914.33" y="351.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.07%)</title><rect x="749.4" y="437" width="0.8" height="15.0" fill="rgb(236,195,41)" rx="2" ry="2" />
<text  x="752.35" y="447.5" ></text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode (1 samples, 0.07%)</title><rect x="273.0" y="357" width="0.9" height="15.0" fill="rgb(210,119,24)" rx="2" ry="2" />
<text  x="276.00" y="367.5" ></text>
</g>
<g >
<title>syscall.Read (8 samples, 0.59%)</title><rect x="327.9" y="389" width="6.9" height="15.0" fill="rgb(225,218,49)" rx="2" ry="2" />
<text  x="330.86" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.make (2 samples, 0.15%)</title><rect x="531.6" y="293" width="1.8" height="15.0" fill="rgb(206,161,24)" rx="2" ry="2" />
<text  x="534.64" y="303.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (14 samples, 1.03%)</title><rect x="869.5" y="341" width="12.2" height="15.0" fill="rgb(247,173,24)" rx="2" ry="2" />
<text  x="872.53" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.07%)</title><rect x="307.8" y="309" width="0.9" height="15.0" fill="rgb(227,64,43)" rx="2" ry="2" />
<text  x="310.83" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (3 samples, 0.22%)</title><rect x="681.4" y="373" width="2.6" height="15.0" fill="rgb(246,133,49)" rx="2" ry="2" />
<text  x="684.42" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (10 samples, 0.74%)</title><rect x="575.2" y="357" width="8.7" height="15.0" fill="rgb(245,21,5)" rx="2" ry="2" />
<text  x="578.18" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.07%)</title><rect x="15.2" y="101" width="0.9" height="15.0" fill="rgb(234,158,38)" rx="2" ry="2" />
<text  x="18.23" y="111.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.07%)</title><rect x="236.4" y="277" width="0.9" height="15.0" fill="rgb(213,207,36)" rx="2" ry="2" />
<text  x="239.42" y="287.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.07%)</title><rect x="863.4" y="293" width="0.9" height="15.0" fill="rgb(218,199,38)" rx="2" ry="2" />
<text  x="866.43" y="303.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.(*lockOrder).PostLock (1 samples, 0.07%)</title><rect x="264.3" y="341" width="0.9" height="15.0" fill="rgb(234,41,29)" rx="2" ry="2" />
<text  x="267.29" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (1 samples, 0.07%)</title><rect x="10.0" y="261" width="0.9" height="15.0" fill="rgb(251,130,41)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.07%)</title><rect x="527.3" y="261" width="0.9" height="15.0" fill="rgb(207,92,16)" rx="2" ry="2" />
<text  x="530.28" y="271.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.07%)</title><rect x="348.8" y="245" width="0.8" height="15.0" fill="rgb(220,224,52)" rx="2" ry="2" />
<text  x="351.76" y="255.5" ></text>
</g>
<g >
<title>encoding/json.newEncodeState (1 samples, 0.07%)</title><rect x="684.9" y="389" width="0.9" height="15.0" fill="rgb(231,92,40)" rx="2" ry="2" />
<text  x="687.91" y="399.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.07%)</title><rect x="326.1" y="261" width="0.9" height="15.0" fill="rgb(215,225,8)" rx="2" ry="2" />
<text  x="329.12" y="271.5" ></text>
</g>
<g >
<title>fmt.(*fmt).pad (1 samples, 0.07%)</title><rect x="711.0" y="293" width="0.9" height="15.0" fill="rgb(219,201,44)" rx="2" ry="2" />
<text  x="714.03" y="303.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (13 samples, 0.96%)</title><rect x="575.2" y="389" width="11.3" height="15.0" fill="rgb(224,108,2)" rx="2" ry="2" />
<text  x="578.18" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.07%)</title><rect x="679.7" y="245" width="0.9" height="15.0" fill="rgb(249,134,30)" rx="2" ry="2" />
<text  x="682.68" y="255.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (22 samples, 1.62%)</title><rect x="687.5" y="437" width="19.2" height="15.0" fill="rgb(227,160,43)" rx="2" ry="2" />
<text  x="690.52" y="447.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.15%)</title><rect x="531.6" y="277" width="1.8" height="15.0" fill="rgb(219,55,27)" rx="2" ry="2" />
<text  x="534.64" y="287.5" ></text>
</g>
<g >
<title>reflect.Value.Convert (1 samples, 0.07%)</title><rect x="24.8" y="197" width="0.9" height="15.0" fill="rgb(243,152,0)" rx="2" ry="2" />
<text  x="27.80" y="207.5" ></text>
</g>
<g >
<title>os.(*File).write (1 samples, 0.07%)</title><rect x="21.3" y="277" width="0.9" height="15.0" fill="rgb(219,76,22)" rx="2" ry="2" />
<text  x="24.32" y="287.5" ></text>
</g>
<g >
<title>math/big.nat.div (3 samples, 0.22%)</title><rect x="373.1" y="277" width="2.7" height="15.0" fill="rgb(240,96,9)" rx="2" ry="2" />
<text  x="376.14" y="287.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.07%)</title><rect x="717.1" y="245" width="0.9" height="15.0" fill="rgb(246,149,24)" rx="2" ry="2" />
<text  x="720.13" y="255.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (1 samples, 0.07%)</title><rect x="745.9" y="405" width="0.8" height="15.0" fill="rgb(228,189,54)" rx="2" ry="2" />
<text  x="748.87" y="415.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.07%)</title><rect x="785.1" y="293" width="0.8" height="15.0" fill="rgb(226,109,44)" rx="2" ry="2" />
<text  x="788.06" y="303.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (6 samples, 0.44%)</title><rect x="848.6" y="261" width="5.3" height="15.0" fill="rgb(213,224,23)" rx="2" ry="2" />
<text  x="851.63" y="271.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (13 samples, 0.96%)</title><rect x="889.6" y="453" width="11.3" height="15.0" fill="rgb(236,112,53)" rx="2" ry="2" />
<text  x="892.56" y="463.5" ></text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.07%)</title><rect x="303.5" y="261" width="0.8" height="15.0" fill="rgb(208,41,54)" rx="2" ry="2" />
<text  x="306.48" y="271.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (1 samples, 0.07%)</title><rect x="686.6" y="357" width="0.9" height="15.0" fill="rgb(217,162,34)" rx="2" ry="2" />
<text  x="689.65" y="367.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.07%)</title><rect x="39.6" y="149" width="0.9" height="15.0" fill="rgb(215,95,9)" rx="2" ry="2" />
<text  x="42.61" y="159.5" ></text>
</g>
<g >
<title>fmt.newPrinter (1 samples, 0.07%)</title><rect x="731.9" y="405" width="0.9" height="15.0" fill="rgb(242,89,49)" rx="2" ry="2" />
<text  x="734.93" y="415.5" ></text>
</g>
<g >
<title>runtime.goexit0 (12 samples, 0.89%)</title><rect x="967.1" y="437" width="10.4" height="15.0" fill="rgb(214,28,51)" rx="2" ry="2" />
<text  x="970.06" y="447.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.07%)</title><rect x="718.9" y="245" width="0.8" height="15.0" fill="rgb(236,203,25)" rx="2" ry="2" />
<text  x="721.87" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.07%)</title><rect x="277.4" y="213" width="0.8" height="15.0" fill="rgb(214,118,17)" rx="2" ry="2" />
<text  x="280.35" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.07%)</title><rect x="313.1" y="293" width="0.8" height="15.0" fill="rgb(233,61,2)" rx="2" ry="2" />
<text  x="316.06" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.07%)</title><rect x="612.6" y="261" width="0.9" height="15.0" fill="rgb(215,153,49)" rx="2" ry="2" />
<text  x="615.63" y="271.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).AddBlock.func1 (4 samples, 0.30%)</title><rect x="15.2" y="389" width="3.5" height="15.0" fill="rgb(240,147,12)" rx="2" ry="2" />
<text  x="18.23" y="399.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Write (1 samples, 0.07%)</title><rect x="629.2" y="357" width="0.8" height="15.0" fill="rgb(237,61,43)" rx="2" ry="2" />
<text  x="632.17" y="367.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Read (1 samples, 0.07%)</title><rect x="768.5" y="357" width="0.9" height="15.0" fill="rgb(245,52,52)" rx="2" ry="2" />
<text  x="771.51" y="367.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneName (6 samples, 0.44%)</title><rect x="337.4" y="405" width="5.3" height="15.0" fill="rgb(250,53,36)" rx="2" ry="2" />
<text  x="340.44" y="415.5" ></text>
</g>
<g >
<title>math/bits.LeadingZeros (1 samples, 0.07%)</title><rect x="45.7" y="229" width="0.9" height="15.0" fill="rgb(236,57,21)" rx="2" ry="2" />
<text  x="48.70" y="239.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (2 samples, 0.15%)</title><rect x="792.9" y="357" width="1.7" height="15.0" fill="rgb(239,208,42)" rx="2" ry="2" />
<text  x="795.89" y="367.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.07%)</title><rect x="212.0" y="197" width="0.9" height="15.0" fill="rgb(240,152,28)" rx="2" ry="2" />
<text  x="215.04" y="207.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (54 samples, 3.99%)</title><rect x="630.9" y="373" width="47.0" height="15.0" fill="rgb(223,84,40)" rx="2" ry="2" />
<text  x="633.92" y="383.5" >math..</text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).Sign (257 samples, 18.97%)</title><rect x="347.9" y="389" width="223.8" height="15.0" fill="rgb(240,190,14)" rx="2" ry="2" />
<text  x="350.89" y="399.5" >BCDns_0.1/certificateAuthorit..</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="863.4" y="357" width="0.9" height="15.0" fill="rgb(241,171,5)" rx="2" ry="2" />
<text  x="866.43" y="367.5" ></text>
</g>
<g >
<title>reflect.makeString (1 samples, 0.07%)</title><rect x="24.8" y="165" width="0.9" height="15.0" fill="rgb(206,49,39)" rx="2" ry="2" />
<text  x="27.80" y="175.5" ></text>
</g>
<g >
<title>math/big.shlVU (1 samples, 0.07%)</title><rect x="364.4" y="261" width="0.9" height="15.0" fill="rgb(251,102,13)" rx="2" ry="2" />
<text  x="367.44" y="271.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.PostLock (1 samples, 0.07%)</title><rect x="264.3" y="357" width="0.9" height="15.0" fill="rgb(247,111,54)" rx="2" ry="2" />
<text  x="267.29" y="367.5" ></text>
</g>
<g >
<title>runtime.notewakeup (4 samples, 0.30%)</title><rect x="1071.6" y="357" width="3.4" height="15.0" fill="rgb(205,69,30)" rx="2" ry="2" />
<text  x="1074.56" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="685.8" y="373" width="0.8" height="15.0" fill="rgb(253,51,49)" rx="2" ry="2" />
<text  x="688.78" y="383.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (2 samples, 0.15%)</title><rect x="612.6" y="389" width="1.8" height="15.0" fill="rgb(249,187,45)" rx="2" ry="2" />
<text  x="615.63" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (1 samples, 0.07%)</title><rect x="570.8" y="293" width="0.9" height="15.0" fill="rgb(211,34,36)" rx="2" ry="2" />
<text  x="573.83" y="303.5" ></text>
</g>
<g >
<title>runtime.mstart (110 samples, 8.12%)</title><rect x="1075.9" y="453" width="95.8" height="15.0" fill="rgb(237,80,44)" rx="2" ry="2" />
<text  x="1078.92" y="463.5" >runtime.mst..</text>
</g>
<g >
<title>encoding/json.(*decodeState).object (10 samples, 0.74%)</title><rect x="575.2" y="341" width="8.7" height="15.0" fill="rgb(241,152,15)" rx="2" ry="2" />
<text  x="578.18" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="215.5" y="229" width="0.9" height="15.0" fill="rgb(240,113,50)" rx="2" ry="2" />
<text  x="218.52" y="239.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock (2 samples, 0.15%)</title><rect x="10.0" y="405" width="1.7" height="15.0" fill="rgb(222,32,30)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.lock (9 samples, 0.66%)</title><rect x="264.3" y="373" width="7.8" height="15.0" fill="rgb(227,11,0)" rx="2" ry="2" />
<text  x="267.29" y="383.5" ></text>
</g>
<g >
<title>sync.(*entry).load (1 samples, 0.07%)</title><rect x="345.3" y="293" width="0.8" height="15.0" fill="rgb(253,179,31)" rx="2" ry="2" />
<text  x="348.28" y="303.5" ></text>
</g>
<g >
<title>math/big.nat.mul (1 samples, 0.07%)</title><rect x="249.5" y="277" width="0.9" height="15.0" fill="rgb(223,140,28)" rx="2" ry="2" />
<text  x="252.48" y="287.5" ></text>
</g>
<g >
<title>encoding/json.uintEncoder (1 samples, 0.07%)</title><rect x="344.4" y="341" width="0.9" height="15.0" fill="rgb(246,165,42)" rx="2" ry="2" />
<text  x="347.41" y="351.5" ></text>
</g>
<g >
<title>math/big.shrVU (1 samples, 0.07%)</title><rect x="296.5" y="293" width="0.9" height="15.0" fill="rgb(244,148,46)" rx="2" ry="2" />
<text  x="299.51" y="303.5" ></text>
</g>
<g >
<title>runtime.gcDrain (65 samples, 4.80%)</title><rect x="909.6" y="405" width="56.6" height="15.0" fill="rgb(207,56,42)" rx="2" ry="2" />
<text  x="912.59" y="415.5" >runti..</text>
</g>
<g >
<title>reflect.deepValueEqual (1 samples, 0.07%)</title><rect x="279.1" y="341" width="0.9" height="15.0" fill="rgb(208,82,26)" rx="2" ry="2" />
<text  x="282.09" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).scanWhile (1 samples, 0.07%)</title><rect x="691.0" y="373" width="0.9" height="15.0" fill="rgb(251,39,42)" rx="2" ry="2" />
<text  x="694.00" y="383.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.07%)</title><rect x="537.7" y="277" width="0.9" height="15.0" fill="rgb(232,226,10)" rx="2" ry="2" />
<text  x="540.73" y="287.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*iStorageWriter).Write (1 samples, 0.07%)</title><rect x="21.3" y="309" width="0.9" height="15.0" fill="rgb(221,20,35)" rx="2" ry="2" />
<text  x="24.32" y="319.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).View (3 samples, 0.22%)</title><rect x="337.4" y="325" width="2.7" height="15.0" fill="rgb(211,129,1)" rx="2" ry="2" />
<text  x="340.44" y="335.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (3 samples, 0.22%)</title><rect x="927.0" y="373" width="2.6" height="15.0" fill="rgb(225,228,42)" rx="2" ry="2" />
<text  x="930.00" y="383.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="303.5" y="213" width="0.8" height="15.0" fill="rgb(240,21,25)" rx="2" ry="2" />
<text  x="306.48" y="223.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DB).Get (2 samples, 0.15%)</title><rect x="303.5" y="373" width="1.7" height="15.0" fill="rgb(239,225,0)" rx="2" ry="2" />
<text  x="306.48" y="383.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.15%)</title><rect x="1093.3" y="389" width="1.8" height="15.0" fill="rgb(251,18,2)" rx="2" ry="2" />
<text  x="1096.34" y="399.5" ></text>
</g>
<g >
<title>encoding/json.encodeByteSlice (1 samples, 0.07%)</title><rect x="616.1" y="341" width="0.9" height="15.0" fill="rgb(254,10,54)" rx="2" ry="2" />
<text  x="619.11" y="351.5" ></text>
</g>
<g >
<title>syscall.write (14 samples, 1.03%)</title><rect x="733.7" y="341" width="12.2" height="15.0" fill="rgb(243,47,12)" rx="2" ry="2" />
<text  x="736.68" y="351.5" ></text>
</g>
<g >
<title>reflect.New (1 samples, 0.07%)</title><rect x="24.8" y="149" width="0.9" height="15.0" fill="rgb(234,164,19)" rx="2" ry="2" />
<text  x="27.80" y="159.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (8 samples, 0.59%)</title><rect x="918.3" y="293" width="7.0" height="15.0" fill="rgb(238,112,23)" rx="2" ry="2" />
<text  x="921.30" y="303.5" ></text>
</g>
<g >
<title>runtime.copystack (7 samples, 0.52%)</title><rect x="756.3" y="325" width="6.1" height="15.0" fill="rgb(241,135,7)" rx="2" ry="2" />
<text  x="759.32" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.15%)</title><rect x="697.1" y="357" width="1.7" height="15.0" fill="rgb(246,70,6)" rx="2" ry="2" />
<text  x="700.10" y="367.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.07%)</title><rect x="345.3" y="309" width="0.8" height="15.0" fill="rgb(211,91,31)" rx="2" ry="2" />
<text  x="348.28" y="319.5" ></text>
</g>
<g >
<title>crypto/rand.Int (3 samples, 0.22%)</title><rect x="28.3" y="309" width="2.6" height="15.0" fill="rgb(239,79,2)" rx="2" ry="2" />
<text  x="31.29" y="319.5" ></text>
</g>
<g >
<title>time.startTimer (1 samples, 0.07%)</title><rect x="271.3" y="341" width="0.8" height="15.0" fill="rgb(238,63,44)" rx="2" ry="2" />
<text  x="274.25" y="351.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.07%)</title><rect x="537.7" y="149" width="0.9" height="15.0" fill="rgb(252,204,50)" rx="2" ry="2" />
<text  x="540.73" y="159.5" ></text>
</g>
<g >
<title>encoding/json.intEncoder (1 samples, 0.07%)</title><rect x="681.4" y="341" width="0.9" height="15.0" fill="rgb(216,5,30)" rx="2" ry="2" />
<text  x="684.42" y="351.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.07%)</title><rect x="976.6" y="389" width="0.9" height="15.0" fill="rgb(254,8,36)" rx="2" ry="2" />
<text  x="979.64" y="399.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Sum (1 samples, 0.07%)</title><rect x="306.1" y="373" width="0.9" height="15.0" fill="rgb(229,106,9)" rx="2" ry="2" />
<text  x="309.09" y="383.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.07%)</title><rect x="303.5" y="293" width="0.8" height="15.0" fill="rgb(235,16,3)" rx="2" ry="2" />
<text  x="306.48" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.15%)</title><rect x="325.2" y="373" width="1.8" height="15.0" fill="rgb(211,40,2)" rx="2" ry="2" />
<text  x="328.25" y="383.5" ></text>
</g>
<g >
<title>math/big.(*Int).SetInt64 (1 samples, 0.07%)</title><rect x="677.9" y="357" width="0.9" height="15.0" fill="rgb(234,54,2)" rx="2" ry="2" />
<text  x="680.94" y="367.5" ></text>
</g>
<g >
<title>runtime.futex (5 samples, 0.37%)</title><rect x="972.3" y="341" width="4.3" height="15.0" fill="rgb(249,80,49)" rx="2" ry="2" />
<text  x="975.29" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).scanWhile (1 samples, 0.07%)</title><rect x="311.3" y="373" width="0.9" height="15.0" fill="rgb(249,215,30)" rx="2" ry="2" />
<text  x="314.31" y="383.5" ></text>
</g>
<g >
<title>crypto/rsa.decryptAndCheck (2 samples, 0.15%)</title><rect x="280.0" y="357" width="1.7" height="15.0" fill="rgb(227,8,11)" rx="2" ry="2" />
<text  x="282.96" y="367.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*BlockConfirmMessage).Sign (2 samples, 0.15%)</title><rect x="280.0" y="405" width="1.7" height="15.0" fill="rgb(215,22,48)" rx="2" ry="2" />
<text  x="282.96" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (3 samples, 0.22%)</title><rect x="317.4" y="357" width="2.6" height="15.0" fill="rgb(234,209,5)" rx="2" ry="2" />
<text  x="320.41" y="367.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (15 samples, 1.11%)</title><rect x="706.7" y="389" width="13.0" height="15.0" fill="rgb(221,132,6)" rx="2" ry="2" />
<text  x="709.68" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.07%)</title><rect x="773.7" y="357" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="776.73" y="367.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (2 samples, 0.15%)</title><rect x="10.0" y="357" width="1.7" height="15.0" fill="rgb(229,6,18)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="212.0" y="181" width="0.9" height="15.0" fill="rgb(253,219,32)" rx="2" ry="2" />
<text  x="215.04" y="191.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtInteger (2 samples, 0.15%)</title><rect x="710.2" y="309" width="1.7" height="15.0" fill="rgb(206,88,22)" rx="2" ry="2" />
<text  x="713.16" y="319.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.07%)</title><rect x="719.7" y="389" width="0.9" height="15.0" fill="rgb(246,167,41)" rx="2" ry="2" />
<text  x="722.74" y="399.5" ></text>
</g>
<g >
<title>math/big.lehmerUpdate (10 samples, 0.74%)</title><rect x="226.8" y="261" width="8.7" height="15.0" fill="rgb(224,104,3)" rx="2" ry="2" />
<text  x="229.84" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (1 samples, 0.07%)</title><rect x="881.7" y="357" width="0.9" height="15.0" fill="rgb(250,146,42)" rx="2" ry="2" />
<text  x="884.72" y="367.5" ></text>
</g>
<g >
<title>math/bits.LeadingZeros (1 samples, 0.07%)</title><rect x="543.8" y="245" width="0.9" height="15.0" fill="rgb(253,227,29)" rx="2" ry="2" />
<text  x="546.83" y="255.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*node).spill (1 samples, 0.07%)</title><rect x="18.7" y="325" width="0.9" height="15.0" fill="rgb(233,190,24)" rx="2" ry="2" />
<text  x="21.71" y="335.5" ></text>
</g>
<g >
<title>runtime.schedule (11 samples, 0.81%)</title><rect x="967.9" y="421" width="9.6" height="15.0" fill="rgb(210,80,42)" rx="2" ry="2" />
<text  x="970.93" y="431.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (3 samples, 0.22%)</title><rect x="23.9" y="261" width="2.6" height="15.0" fill="rgb(252,44,46)" rx="2" ry="2" />
<text  x="26.93" y="271.5" ></text>
</g>
<g >
<title>sort.stable (1 samples, 0.07%)</title><rect x="731.1" y="325" width="0.8" height="15.0" fill="rgb(221,45,39)" rx="2" ry="2" />
<text  x="734.06" y="335.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb/memdb.(*DB).findGE (1 samples, 0.07%)</title><rect x="340.1" y="293" width="0.8" height="15.0" fill="rgb(223,81,35)" rx="2" ry="2" />
<text  x="343.05" y="303.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.07%)</title><rect x="212.0" y="165" width="0.9" height="15.0" fill="rgb(235,127,3)" rx="2" ry="2" />
<text  x="215.04" y="175.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.07%)</title><rect x="976.6" y="357" width="0.9" height="15.0" fill="rgb(224,109,11)" rx="2" ry="2" />
<text  x="979.64" y="367.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.07%)</title><rect x="12.6" y="309" width="0.9" height="15.0" fill="rgb(242,22,20)" rx="2" ry="2" />
<text  x="15.61" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.07%)</title><rect x="536.0" y="165" width="0.9" height="15.0" fill="rgb(242,170,10)" rx="2" ry="2" />
<text  x="538.99" y="175.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (1 samples, 0.07%)</title><rect x="727.6" y="309" width="0.9" height="15.0" fill="rgb(211,150,10)" rx="2" ry="2" />
<text  x="730.58" y="319.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (18 samples, 1.33%)</title><rect x="237.3" y="309" width="15.7" height="15.0" fill="rgb(212,205,20)" rx="2" ry="2" />
<text  x="240.29" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalReplyMessage).Sign (261 samples, 19.26%)</title><rect x="27.4" y="389" width="227.3" height="15.0" fill="rgb(227,155,50)" rx="2" ry="2" />
<text  x="30.42" y="399.5" >BCDns_0.1/messages.(*ProposalR..</text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.07%)</title><rect x="1024.5" y="357" width="0.9" height="15.0" fill="rgb(209,81,37)" rx="2" ry="2" />
<text  x="1027.54" y="367.5" ></text>
</g>
<g >
<title>runtime.newproc1 (3 samples, 0.22%)</title><rect x="267.8" y="309" width="2.6" height="15.0" fill="rgb(233,51,9)" rx="2" ry="2" />
<text  x="270.77" y="319.5" ></text>
</g>
<g >
<title>strconv.AppendInt (1 samples, 0.07%)</title><rect x="681.4" y="325" width="0.9" height="15.0" fill="rgb(215,190,21)" rx="2" ry="2" />
<text  x="684.42" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).find (1 samples, 0.07%)</title><rect x="866.9" y="293" width="0.9" height="15.0" fill="rgb(232,210,32)" rx="2" ry="2" />
<text  x="869.92" y="303.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.07%)</title><rect x="212.0" y="245" width="0.9" height="15.0" fill="rgb(231,155,21)" rx="2" ry="2" />
<text  x="215.04" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.07%)</title><rect x="684.9" y="325" width="0.9" height="15.0" fill="rgb(248,36,21)" rx="2" ry="2" />
<text  x="687.91" y="335.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.07%)</title><rect x="572.6" y="277" width="0.8" height="15.0" fill="rgb(254,152,1)" rx="2" ry="2" />
<text  x="575.57" y="287.5" ></text>
</g>
<g >
<title>runtime.getStackMap (2 samples, 0.15%)</title><rect x="758.1" y="277" width="1.7" height="15.0" fill="rgb(246,162,53)" rx="2" ry="2" />
<text  x="761.06" y="287.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.15%)</title><rect x="268.6" y="229" width="1.8" height="15.0" fill="rgb(210,153,17)" rx="2" ry="2" />
<text  x="271.64" y="239.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.07%)</title><rect x="727.6" y="277" width="0.9" height="15.0" fill="rgb(245,55,30)" rx="2" ry="2" />
<text  x="730.58" y="287.5" ></text>
</g>
<g >
<title>runtime.newobject (4 samples, 0.30%)</title><rect x="763.3" y="389" width="3.5" height="15.0" fill="rgb(206,23,54)" rx="2" ry="2" />
<text  x="766.28" y="399.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.ValidateProposals (1 samples, 0.07%)</title><rect x="279.1" y="405" width="0.9" height="15.0" fill="rgb(244,30,12)" rx="2" ry="2" />
<text  x="282.09" y="415.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.DNode.Send (1 samples, 0.07%)</title><rect x="12.6" y="405" width="0.9" height="15.0" fill="rgb(244,160,37)" rx="2" ry="2" />
<text  x="15.61" y="415.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.07%)</title><rect x="340.9" y="325" width="0.9" height="15.0" fill="rgb(245,11,36)" rx="2" ry="2" />
<text  x="343.92" y="335.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.07%)</title><rect x="862.6" y="325" width="0.8" height="15.0" fill="rgb(238,122,0)" rx="2" ry="2" />
<text  x="865.56" y="335.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (217 samples, 16.01%)</title><rect x="31.8" y="309" width="188.9" height="15.0" fill="rgb(214,65,11)" rx="2" ry="2" />
<text  x="34.77" y="319.5" >math/big.(*Int).Exp</text>
</g>
<g >
<title>runtime.scanstack (1 samples, 0.07%)</title><rect x="804.2" y="245" width="0.9" height="15.0" fill="rgb(241,96,36)" rx="2" ry="2" />
<text  x="807.21" y="255.5" ></text>
</g>
<g >
<title>reflect.Value.Field (1 samples, 0.07%)</title><rect x="701.5" y="373" width="0.8" height="15.0" fill="rgb(212,173,27)" rx="2" ry="2" />
<text  x="704.45" y="383.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Iterator).Next (3 samples, 0.22%)</title><rect x="337.4" y="341" width="2.7" height="15.0" fill="rgb(224,93,12)" rx="2" ry="2" />
<text  x="340.44" y="351.5" ></text>
</g>
<g >
<title>math/big.nat.clear (2 samples, 0.15%)</title><rect x="210.3" y="245" width="1.7" height="15.0" fill="rgb(249,209,48)" rx="2" ry="2" />
<text  x="213.30" y="255.5" ></text>
</g>
<g >
<title>encoding/base64.(*Encoding).Decode (1 samples, 0.07%)</title><rect x="577.8" y="293" width="0.9" height="15.0" fill="rgb(252,154,26)" rx="2" ry="2" />
<text  x="580.79" y="303.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (4 samples, 0.30%)</title><rect x="954.9" y="357" width="3.5" height="15.0" fill="rgb(215,215,31)" rx="2" ry="2" />
<text  x="957.87" y="367.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (1 samples, 0.07%)</title><rect x="752.0" y="437" width="0.8" height="15.0" fill="rgb(248,26,49)" rx="2" ry="2" />
<text  x="754.96" y="447.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.07%)</title><rect x="248.6" y="245" width="0.9" height="15.0" fill="rgb(218,32,45)" rx="2" ry="2" />
<text  x="251.61" y="255.5" ></text>
</g>
<g >
<title>math/big.nat.setWord (1 samples, 0.07%)</title><rect x="677.9" y="325" width="0.9" height="15.0" fill="rgb(218,73,3)" rx="2" ry="2" />
<text  x="680.94" y="335.5" ></text>
</g>
<g >
<title>github.com/golang/snappy.Encode (1 samples, 0.07%)</title><rect x="614.4" y="389" width="0.8" height="15.0" fill="rgb(244,97,54)" rx="2" ry="2" />
<text  x="617.37" y="399.5" ></text>
</g>
<g >
<title>runtime.goready (4 samples, 0.30%)</title><rect x="855.6" y="389" width="3.5" height="15.0" fill="rgb(224,151,45)" rx="2" ry="2" />
<text  x="858.59" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (2 samples, 0.15%)</title><rect x="907.0" y="229" width="1.7" height="15.0" fill="rgb(237,211,10)" rx="2" ry="2" />
<text  x="909.97" y="239.5" ></text>
</g>
<g >
<title>reflect.Value.MapRange (1 samples, 0.07%)</title><rect x="728.5" y="341" width="0.8" height="15.0" fill="rgb(225,149,49)" rx="2" ry="2" />
<text  x="731.45" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="262.5" y="277" width="0.9" height="15.0" fill="rgb(242,220,14)" rx="2" ry="2" />
<text  x="265.55" y="287.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.07%)</title><rect x="952.3" y="357" width="0.8" height="15.0" fill="rgb(213,33,24)" rx="2" ry="2" />
<text  x="955.26" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc.func1 (1 samples, 0.07%)</title><rect x="14.4" y="357" width="0.8" height="15.0" fill="rgb(210,185,40)" rx="2" ry="2" />
<text  x="17.35" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (21 samples, 1.55%)</title><rect x="864.3" y="405" width="18.3" height="15.0" fill="rgb(244,122,32)" rx="2" ry="2" />
<text  x="867.30" y="415.5" ></text>
</g>
<g >
<title>syscall.write (26 samples, 1.92%)</title><rect x="589.1" y="325" width="22.7" height="15.0" fill="rgb(214,29,46)" rx="2" ry="2" />
<text  x="592.11" y="335.5" >s..</text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.07%)</title><rect x="1070.7" y="389" width="0.9" height="15.0" fill="rgb(208,13,16)" rx="2" ry="2" />
<text  x="1073.69" y="399.5" ></text>
</g>
<g >
<title>runtime.assertE2I2 (3 samples, 0.22%)</title><rect x="712.8" y="309" width="2.6" height="15.0" fill="rgb(221,146,41)" rx="2" ry="2" />
<text  x="715.77" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.07%)</title><rect x="262.5" y="261" width="0.9" height="15.0" fill="rgb(205,77,37)" rx="2" ry="2" />
<text  x="265.55" y="271.5" ></text>
</g>
<g >
<title>runtime.jmpdefer (1 samples, 0.07%)</title><rect x="274.7" y="357" width="0.9" height="15.0" fill="rgb(206,68,0)" rx="2" ry="2" />
<text  x="277.74" y="367.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.07%)</title><rect x="326.1" y="277" width="0.9" height="15.0" fill="rgb(215,29,41)" rx="2" ry="2" />
<text  x="329.12" y="287.5" ></text>
</g>
<g >
<title>reflect.name.isExported (1 samples, 0.07%)</title><rect x="10.0" y="197" width="0.9" height="15.0" fill="rgb(245,111,19)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>runtime.callers (3 samples, 0.22%)</title><rect x="265.2" y="293" width="2.6" height="15.0" fill="rgb(231,92,8)" rx="2" ry="2" />
<text  x="268.16" y="303.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.07%)</title><rect x="526.4" y="213" width="0.9" height="15.0" fill="rgb(244,25,7)" rx="2" ry="2" />
<text  x="529.41" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.07%)</title><rect x="679.7" y="277" width="0.9" height="15.0" fill="rgb(250,105,15)" rx="2" ry="2" />
<text  x="682.68" y="287.5" ></text>
</g>
<g >
<title>runtime.sysUnused (1 samples, 0.07%)</title><rect x="262.5" y="69" width="0.9" height="15.0" fill="rgb(246,156,0)" rx="2" ry="2" />
<text  x="265.55" y="79.5" ></text>
</g>
<g >
<title>math/big.(*Int).QuoRem (1 samples, 0.07%)</title><rect x="536.9" y="309" width="0.8" height="15.0" fill="rgb(242,4,41)" rx="2" ry="2" />
<text  x="539.86" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (13 samples, 0.96%)</title><rect x="774.6" y="341" width="11.3" height="15.0" fill="rgb(223,224,34)" rx="2" ry="2" />
<text  x="777.61" y="351.5" ></text>
</g>
<g >
<title>runtime.chansend (2 samples, 0.15%)</title><rect x="325.2" y="421" width="1.8" height="15.0" fill="rgb(231,66,25)" rx="2" ry="2" />
<text  x="328.25" y="431.5" ></text>
</g>
<g >
<title>encoding/base64.(*Encoding).Decode (7 samples, 0.52%)</title><rect x="775.5" y="325" width="6.1" height="15.0" fill="rgb(245,216,40)" rx="2" ry="2" />
<text  x="778.48" y="335.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.07%)</title><rect x="979.3" y="357" width="0.8" height="15.0" fill="rgb(239,179,27)" rx="2" ry="2" />
<text  x="982.25" y="367.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.07%)</title><rect x="323.5" y="373" width="0.9" height="15.0" fill="rgb(216,25,32)" rx="2" ry="2" />
<text  x="326.51" y="383.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (3 samples, 0.22%)</title><rect x="704.1" y="421" width="2.6" height="15.0" fill="rgb(206,97,3)" rx="2" ry="2" />
<text  x="707.07" y="431.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.15%)</title><rect x="889.6" y="341" width="1.7" height="15.0" fill="rgb(238,138,5)" rx="2" ry="2" />
<text  x="892.56" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneNameByIndex (3 samples, 0.22%)</title><rect x="303.5" y="389" width="2.6" height="15.0" fill="rgb(224,111,39)" rx="2" ry="2" />
<text  x="306.48" y="399.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.07%)</title><rect x="759.8" y="293" width="0.9" height="15.0" fill="rgb(243,74,27)" rx="2" ry="2" />
<text  x="762.80" y="303.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtInteger (2 samples, 0.15%)</title><rect x="710.2" y="325" width="1.7" height="15.0" fill="rgb(230,163,36)" rx="2" ry="2" />
<text  x="713.16" y="335.5" ></text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.07%)</title><rect x="699.7" y="341" width="0.9" height="15.0" fill="rgb(248,9,39)" rx="2" ry="2" />
<text  x="702.71" y="351.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).Update (7 samples, 0.52%)</title><rect x="15.2" y="405" width="6.1" height="15.0" fill="rgb(232,177,21)" rx="2" ry="2" />
<text  x="18.23" y="415.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalReplyMessage).Hash (7 samples, 0.52%)</title><rect x="680.6" y="421" width="6.0" height="15.0" fill="rgb(215,38,4)" rx="2" ry="2" />
<text  x="683.55" y="431.5" ></text>
</g>
<g >
<title>runtime.sweepone (5 samples, 0.37%)</title><rect x="901.7" y="437" width="4.4" height="15.0" fill="rgb(240,75,8)" rx="2" ry="2" />
<text  x="904.75" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (3 samples, 0.22%)</title><rect x="866.9" y="309" width="2.6" height="15.0" fill="rgb(233,148,17)" rx="2" ry="2" />
<text  x="869.92" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (65 samples, 4.80%)</title><rect x="909.6" y="437" width="56.6" height="15.0" fill="rgb(248,141,32)" rx="2" ry="2" />
<text  x="912.59" y="447.5" >runti..</text>
</g>
<g >
<title>runtime.reentersyscall (7 samples, 0.52%)</title><rect x="847.8" y="325" width="6.1" height="15.0" fill="rgb(237,90,11)" rx="2" ry="2" />
<text  x="850.76" y="335.5" ></text>
</g>
<g >
<title>runtime.nanotime (2 samples, 0.15%)</title><rect x="1079.4" y="405" width="1.7" height="15.0" fill="rgb(248,126,40)" rx="2" ry="2" />
<text  x="1082.40" y="415.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.07%)</title><rect x="307.0" y="373" width="0.8" height="15.0" fill="rgb(248,223,5)" rx="2" ry="2" />
<text  x="309.96" y="383.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Name (1 samples, 0.07%)</title><rect x="313.1" y="229" width="0.8" height="15.0" fill="rgb(250,33,0)" rx="2" ry="2" />
<text  x="316.06" y="239.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*Bucket).spill (1 samples, 0.07%)</title><rect x="18.7" y="357" width="0.9" height="15.0" fill="rgb(221,58,13)" rx="2" ry="2" />
<text  x="21.71" y="367.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (3 samples, 0.22%)</title><rect x="23.9" y="277" width="2.6" height="15.0" fill="rgb(240,148,20)" rx="2" ry="2" />
<text  x="26.93" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (3 samples, 0.22%)</title><rect x="907.0" y="341" width="2.6" height="15.0" fill="rgb(208,29,5)" rx="2" ry="2" />
<text  x="909.97" y="351.5" ></text>
</g>
<g >
<title>reflect.(*rtype).nameOff (1 samples, 0.07%)</title><rect x="313.1" y="197" width="0.8" height="15.0" fill="rgb(252,111,43)" rx="2" ry="2" />
<text  x="316.06" y="207.5" ></text>
</g>
<g >
<title>math/big.lehmerUpdate (13 samples, 0.96%)</title><rect x="544.7" y="277" width="11.3" height="15.0" fill="rgb(231,18,16)" rx="2" ry="2" />
<text  x="547.70" y="287.5" ></text>
</g>
<g >
<title>math/big.nat.mul (7 samples, 0.52%)</title><rect x="549.9" y="245" width="6.1" height="15.0" fill="rgb(211,182,13)" rx="2" ry="2" />
<text  x="552.93" y="255.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Block).GenerateMerkelRoot (1 samples, 0.07%)</title><rect x="11.7" y="389" width="0.9" height="15.0" fill="rgb(206,217,15)" rx="2" ry="2" />
<text  x="14.74" y="399.5" ></text>
</g>
<g >
<title>io.ReadFull (3 samples, 0.22%)</title><rect x="28.3" y="293" width="2.6" height="15.0" fill="rgb(227,214,32)" rx="2" ry="2" />
<text  x="31.29" y="303.5" ></text>
</g>
<g >
<title>runtime.procPin (1 samples, 0.07%)</title><rect x="562.1" y="197" width="0.9" height="15.0" fill="rgb(205,25,31)" rx="2" ry="2" />
<text  x="565.12" y="207.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (2 samples, 0.15%)</title><rect x="294.8" y="277" width="1.7" height="15.0" fill="rgb(232,177,2)" rx="2" ry="2" />
<text  x="297.77" y="287.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.07%)</title><rect x="697.1" y="309" width="0.9" height="15.0" fill="rgb(254,163,6)" rx="2" ry="2" />
<text  x="700.10" y="319.5" ></text>
</g>
<g >
<title>reflect.cvtBytesString (1 samples, 0.07%)</title><rect x="24.8" y="181" width="0.9" height="15.0" fill="rgb(226,37,23)" rx="2" ry="2" />
<text  x="27.80" y="191.5" ></text>
</g>
<g >
<title>runtime.madvise (9 samples, 0.66%)</title><rect x="893.0" y="357" width="7.9" height="15.0" fill="rgb(214,155,8)" rx="2" ry="2" />
<text  x="896.04" y="367.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (13 samples, 0.96%)</title><rect x="238.2" y="261" width="11.3" height="15.0" fill="rgb(247,125,1)" rx="2" ry="2" />
<text  x="241.16" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="580.4" y="277" width="0.9" height="15.0" fill="rgb(254,17,23)" rx="2" ry="2" />
<text  x="583.41" y="287.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.07%)</title><rect x="655.3" y="293" width="0.9" height="15.0" fill="rgb(246,76,15)" rx="2" ry="2" />
<text  x="658.30" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="275.6" y="309" width="0.9" height="15.0" fill="rgb(221,227,46)" rx="2" ry="2" />
<text  x="278.61" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).VerifySignature (25 samples, 1.85%)</title><rect x="281.7" y="405" width="21.8" height="15.0" fill="rgb(219,88,52)" rx="2" ry="2" />
<text  x="284.70" y="415.5" >B..</text>
</g>
<g >
<title>encoding/base64.(*Encoding).Decode (1 samples, 0.07%)</title><rect x="691.9" y="341" width="0.8" height="15.0" fill="rgb(211,44,6)" rx="2" ry="2" />
<text  x="694.87" y="351.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (22 samples, 1.62%)</title><rect x="351.4" y="277" width="19.1" height="15.0" fill="rgb(254,184,44)" rx="2" ry="2" />
<text  x="354.37" y="287.5" ></text>
</g>
<g >
<title>runtime.wakeScavengerLocked (2 samples, 0.15%)</title><rect x="1176.1" y="421" width="1.7" height="15.0" fill="rgb(229,175,11)" rx="2" ry="2" />
<text  x="1179.07" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.07%)</title><rect x="15.2" y="69" width="0.9" height="15.0" fill="rgb(254,28,0)" rx="2" ry="2" />
<text  x="18.23" y="79.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (65 samples, 4.80%)</title><rect x="909.6" y="421" width="56.6" height="15.0" fill="rgb(244,58,28)" rx="2" ry="2" />
<text  x="912.59" y="431.5" >runti..</text>
</g>
<g >
<title>reflect.copyVal (1 samples, 0.07%)</title><rect x="727.6" y="325" width="0.9" height="15.0" fill="rgb(217,118,39)" rx="2" ry="2" />
<text  x="730.58" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.07%)</title><rect x="697.1" y="325" width="0.9" height="15.0" fill="rgb(234,24,5)" rx="2" ry="2" />
<text  x="700.10" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.07%)</title><rect x="612.6" y="181" width="0.9" height="15.0" fill="rgb(253,13,25)" rx="2" ry="2" />
<text  x="615.63" y="191.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (2 samples, 0.15%)</title><rect x="702.3" y="373" width="1.8" height="15.0" fill="rgb(235,154,25)" rx="2" ry="2" />
<text  x="705.32" y="383.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (1 samples, 0.07%)</title><rect x="56.2" y="245" width="0.8" height="15.0" fill="rgb(246,43,26)" rx="2" ry="2" />
<text  x="59.15" y="255.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).handleProposal (32 samples, 2.36%)</title><rect x="281.7" y="437" width="27.9" height="15.0" fill="rgb(222,104,46)" rx="2" ry="2" />
<text  x="284.70" y="447.5" >B..</text>
</g>
<g >
<title>syscall.Syscall (4 samples, 0.30%)</title><rect x="720.6" y="325" width="3.5" height="15.0" fill="rgb(206,134,0)" rx="2" ry="2" />
<text  x="723.61" y="335.5" ></text>
</g>
<g >
<title>syscall.write (9 samples, 0.66%)</title><rect x="254.7" y="309" width="7.8" height="15.0" fill="rgb(207,58,44)" rx="2" ry="2" />
<text  x="257.71" y="319.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.07%)</title><rect x="305.2" y="357" width="0.9" height="15.0" fill="rgb(219,182,41)" rx="2" ry="2" />
<text  x="308.22" y="367.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.07%)</title><rect x="784.2" y="245" width="0.9" height="15.0" fill="rgb(207,3,5)" rx="2" ry="2" />
<text  x="787.18" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (4 samples, 0.30%)</title><rect x="681.4" y="389" width="3.5" height="15.0" fill="rgb(243,57,14)" rx="2" ry="2" />
<text  x="684.42" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.07%)</title><rect x="315.7" y="357" width="0.8" height="15.0" fill="rgb(213,172,28)" rx="2" ry="2" />
<text  x="318.67" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.15%)</title><rect x="803.3" y="389" width="1.8" height="15.0" fill="rgb(250,93,27)" rx="2" ry="2" />
<text  x="806.34" y="399.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.07%)</title><rect x="46.6" y="229" width="0.8" height="15.0" fill="rgb(209,12,31)" rx="2" ry="2" />
<text  x="49.58" y="239.5" ></text>
</g>
<g >
<title>math/big.(*Int).BitLen (1 samples, 0.07%)</title><rect x="281.7" y="357" width="0.9" height="15.0" fill="rgb(224,15,2)" rx="2" ry="2" />
<text  x="284.70" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="14.4" y="373" width="0.8" height="15.0" fill="rgb(239,201,26)" rx="2" ry="2" />
<text  x="17.35" y="383.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (3 samples, 0.22%)</title><rect x="334.8" y="277" width="2.6" height="15.0" fill="rgb(254,21,38)" rx="2" ry="2" />
<text  x="337.83" y="287.5" ></text>
</g>
<g >
<title>crypto/rand.batched.func1 (1 samples, 0.07%)</title><rect x="348.8" y="293" width="0.8" height="15.0" fill="rgb(213,11,40)" rx="2" ry="2" />
<text  x="351.76" y="303.5" ></text>
</g>
<g >
<title>reflect.resolveTypeOff (1 samples, 0.07%)</title><rect x="24.8" y="101" width="0.9" height="15.0" fill="rgb(232,56,52)" rx="2" ry="2" />
<text  x="27.80" y="111.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (1 samples, 0.07%)</title><rect x="307.8" y="389" width="0.9" height="15.0" fill="rgb(237,0,13)" rx="2" ry="2" />
<text  x="310.83" y="399.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (97 samples, 7.16%)</title><rect x="125.8" y="245" width="84.5" height="15.0" fill="rgb(216,13,40)" rx="2" ry="2" />
<text  x="128.82" y="255.5" >math/big...</text>
</g>
<g >
<title>github.com/boltdb/bolt.(*Tx).Commit (2 samples, 0.15%)</title><rect x="18.7" y="389" width="1.8" height="15.0" fill="rgb(253,38,26)" rx="2" ry="2" />
<text  x="21.71" y="399.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.07%)</title><rect x="1180.4" y="309" width="0.9" height="15.0" fill="rgb(231,126,17)" rx="2" ry="2" />
<text  x="1183.42" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.07%)</title><rect x="10.0" y="229" width="0.9" height="15.0" fill="rgb(247,155,50)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.15%)</title><rect x="612.6" y="309" width="1.8" height="15.0" fill="rgb(212,208,45)" rx="2" ry="2" />
<text  x="615.63" y="319.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.07%)</title><rect x="863.4" y="341" width="0.9" height="15.0" fill="rgb(207,77,23)" rx="2" ry="2" />
<text  x="866.43" y="351.5" ></text>
</g>
<g >
<title>runtime.heapBits.next (1 samples, 0.07%)</title><rect x="963.6" y="373" width="0.9" height="15.0" fill="rgb(216,158,33)" rx="2" ry="2" />
<text  x="966.58" y="383.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (6 samples, 0.44%)</title><rect x="1183.9" y="421" width="5.2" height="15.0" fill="rgb(207,39,9)" rx="2" ry="2" />
<text  x="1186.90" y="431.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (2 samples, 0.15%)</title><rect x="338.3" y="261" width="1.8" height="15.0" fill="rgb(213,55,15)" rx="2" ry="2" />
<text  x="341.31" y="271.5" ></text>
</g>
<g >
<title>os.(*File).Write (3 samples, 0.22%)</title><rect x="752.8" y="405" width="2.6" height="15.0" fill="rgb(228,96,16)" rx="2" ry="2" />
<text  x="755.83" y="415.5" ></text>
</g>
<g >
<title>runtime.ready (2 samples, 0.15%)</title><rect x="1177.8" y="373" width="1.7" height="15.0" fill="rgb(209,2,29)" rx="2" ry="2" />
<text  x="1180.81" y="383.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (2 samples, 0.15%)</title><rect x="1182.2" y="405" width="1.7" height="15.0" fill="rgb(235,216,38)" rx="2" ry="2" />
<text  x="1185.16" y="415.5" ></text>
</g>
<g >
<title>crypto.Hash.New (1 samples, 0.07%)</title><rect x="627.4" y="389" width="0.9" height="15.0" fill="rgb(238,114,24)" rx="2" ry="2" />
<text  x="630.43" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (25 samples, 1.85%)</title><rect x="772.9" y="373" width="21.7" height="15.0" fill="rgb(215,183,7)" rx="2" ry="2" />
<text  x="775.86" y="383.5" >e..</text>
</g>
<g >
<title>os.(*File).Write (15 samples, 1.11%)</title><rect x="732.8" y="405" width="13.1" height="15.0" fill="rgb(206,82,21)" rx="2" ry="2" />
<text  x="735.80" y="415.5" ></text>
</g>
<g >
<title>crypto/rsa.VerifyPKCS1v15 (25 samples, 1.85%)</title><rect x="281.7" y="389" width="21.8" height="15.0" fill="rgb(232,165,36)" rx="2" ry="2" />
<text  x="284.70" y="399.5" >c..</text>
</g>
<g >
<title>sync.(*poolChain).pushHead (1 samples, 0.07%)</title><rect x="664.9" y="277" width="0.8" height="15.0" fill="rgb(209,89,50)" rx="2" ry="2" />
<text  x="667.88" y="287.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Block).GenerateMerkelRoot (1 samples, 0.07%)</title><rect x="275.6" y="389" width="0.9" height="15.0" fill="rgb(233,175,45)" rx="2" ry="2" />
<text  x="278.61" y="399.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.07%)</title><rect x="270.4" y="309" width="0.9" height="15.0" fill="rgb(248,184,27)" rx="2" ry="2" />
<text  x="273.38" y="319.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).cancel (1 samples, 0.07%)</title><rect x="686.6" y="421" width="0.9" height="15.0" fill="rgb(247,170,34)" rx="2" ry="2" />
<text  x="689.65" y="431.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.07%)</title><rect x="731.9" y="389" width="0.9" height="15.0" fill="rgb(235,119,33)" rx="2" ry="2" />
<text  x="734.93" y="399.5" ></text>
</g>
<g >
<title>runtime.futex (34 samples, 2.51%)</title><rect x="1040.2" y="341" width="29.6" height="15.0" fill="rgb(213,178,21)" rx="2" ry="2" />
<text  x="1043.21" y="351.5" >ru..</text>
</g>
<g >
<title>strconv.formatBits (1 samples, 0.07%)</title><rect x="681.4" y="309" width="0.9" height="15.0" fill="rgb(245,194,28)" rx="2" ry="2" />
<text  x="684.42" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (7 samples, 0.52%)</title><rect x="756.3" y="373" width="6.1" height="15.0" fill="rgb(209,199,26)" rx="2" ry="2" />
<text  x="759.32" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.07%)</title><rect x="525.5" y="101" width="0.9" height="15.0" fill="rgb(220,223,34)" rx="2" ry="2" />
<text  x="528.54" y="111.5" ></text>
</g>
<g >
<title>sync.loadPoolChainElt (1 samples, 0.07%)</title><rect x="360.1" y="197" width="0.9" height="15.0" fill="rgb(205,89,27)" rx="2" ry="2" />
<text  x="363.08" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DB).Get (2 samples, 0.15%)</title><rect x="340.1" y="373" width="1.7" height="15.0" fill="rgb(233,66,19)" rx="2" ry="2" />
<text  x="343.05" y="383.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (3 samples, 0.22%)</title><rect x="337.4" y="293" width="2.7" height="15.0" fill="rgb(238,90,24)" rx="2" ry="2" />
<text  x="340.44" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.07%)</title><rect x="308.7" y="325" width="0.9" height="15.0" fill="rgb(231,4,54)" rx="2" ry="2" />
<text  x="311.70" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.07%)</title><rect x="621.3" y="293" width="0.9" height="15.0" fill="rgb(237,208,8)" rx="2" ry="2" />
<text  x="624.34" y="303.5" ></text>
</g>
<g >
<title>math/big.nat.mul (1 samples, 0.07%)</title><rect x="671.0" y="341" width="0.8" height="15.0" fill="rgb(242,60,33)" rx="2" ry="2" />
<text  x="673.97" y="351.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (1 samples, 0.07%)</title><rect x="887.8" y="453" width="0.9" height="15.0" fill="rgb(220,197,2)" rx="2" ry="2" />
<text  x="890.82" y="463.5" ></text>
</g>
<g >
<title>runtime.systemstack (11 samples, 0.81%)</title><rect x="891.3" y="437" width="9.6" height="15.0" fill="rgb(217,66,30)" rx="2" ry="2" />
<text  x="894.30" y="447.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.07%)</title><rect x="264.3" y="293" width="0.9" height="15.0" fill="rgb(235,29,54)" rx="2" ry="2" />
<text  x="267.29" y="303.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (3 samples, 0.22%)</title><rect x="332.2" y="325" width="2.6" height="15.0" fill="rgb(220,39,14)" rx="2" ry="2" />
<text  x="335.21" y="335.5" ></text>
</g>
<g >
<title>encoding/json.unquoteBytes (2 samples, 0.15%)</title><rect x="781.6" y="325" width="1.7" height="15.0" fill="rgb(240,59,15)" rx="2" ry="2" />
<text  x="784.57" y="335.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.07%)</title><rect x="784.2" y="229" width="0.9" height="15.0" fill="rgb(206,96,43)" rx="2" ry="2" />
<text  x="787.18" y="239.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (2 samples, 0.15%)</title><rect x="1179.5" y="389" width="1.8" height="15.0" fill="rgb(205,193,2)" rx="2" ry="2" />
<text  x="1182.55" y="399.5" ></text>
</g>
<g >
<title>runtime.handoffp (1 samples, 0.07%)</title><rect x="1092.5" y="389" width="0.8" height="15.0" fill="rgb(227,209,53)" rx="2" ry="2" />
<text  x="1095.46" y="399.5" ></text>
</g>
<g >
<title>BCDns_0.1/utils.BytesToInt (8 samples, 0.59%)</title><rect x="763.3" y="421" width="7.0" height="15.0" fill="rgb(253,75,41)" rx="2" ry="2" />
<text  x="766.28" y="431.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (2 samples, 0.15%)</title><rect x="17.0" y="357" width="1.7" height="15.0" fill="rgb(234,131,7)" rx="2" ry="2" />
<text  x="19.97" y="367.5" ></text>
</g>
<g >
<title>runtime.notetsleepg (11 samples, 0.81%)</title><rect x="1179.5" y="437" width="9.6" height="15.0" fill="rgb(219,22,17)" rx="2" ry="2" />
<text  x="1182.55" y="447.5" ></text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.07%)</title><rect x="773.7" y="341" width="0.9" height="15.0" fill="rgb(212,197,32)" rx="2" ry="2" />
<text  x="776.73" y="351.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (8 samples, 0.59%)</title><rect x="725.0" y="389" width="6.9" height="15.0" fill="rgb(231,202,8)" rx="2" ry="2" />
<text  x="727.97" y="399.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="802.5" y="389" width="0.8" height="15.0" fill="rgb(246,2,24)" rx="2" ry="2" />
<text  x="805.47" y="399.5" ></text>
</g>
<g >
<title>runtime.add (1 samples, 0.07%)</title><rect x="341.8" y="341" width="0.9" height="15.0" fill="rgb(236,107,51)" rx="2" ry="2" />
<text  x="344.79" y="351.5" ></text>
</g>
<g >
<title>crypto/rsa.(*PublicKey).Size (1 samples, 0.07%)</title><rect x="281.7" y="373" width="0.9" height="15.0" fill="rgb(238,229,9)" rx="2" ry="2" />
<text  x="284.70" y="383.5" ></text>
</g>
<g >
<title>runtime.memequal (1 samples, 0.07%)</title><rect x="583.0" y="309" width="0.9" height="15.0" fill="rgb(241,95,52)" rx="2" ry="2" />
<text  x="586.02" y="319.5" ></text>
</g>
<g >
<title>runtime.futex (10 samples, 0.74%)</title><rect x="1082.0" y="357" width="8.7" height="15.0" fill="rgb(222,1,44)" rx="2" ry="2" />
<text  x="1085.01" y="367.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (3 samples, 0.22%)</title><rect x="23.9" y="325" width="2.6" height="15.0" fill="rgb(234,34,39)" rx="2" ry="2" />
<text  x="26.93" y="335.5" ></text>
</g>
<g >
<title>runtime.findrunnable (105 samples, 7.75%)</title><rect x="980.1" y="405" width="91.5" height="15.0" fill="rgb(209,96,53)" rx="2" ry="2" />
<text  x="983.13" y="415.5" >runtime.fi..</text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (2 samples, 0.15%)</title><rect x="764.2" y="325" width="1.7" height="15.0" fill="rgb(249,80,10)" rx="2" ry="2" />
<text  x="767.15" y="335.5" ></text>
</g>
<g >
<title>crypto/internal/randutil.MaybeReadByte (1 samples, 0.07%)</title><rect x="348.8" y="325" width="0.8" height="15.0" fill="rgb(250,74,34)" rx="2" ry="2" />
<text  x="351.76" y="335.5" ></text>
</g>
<g >
<title>math/big.nat.div (1 samples, 0.07%)</title><rect x="56.2" y="261" width="0.8" height="15.0" fill="rgb(210,48,21)" rx="2" ry="2" />
<text  x="59.15" y="271.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.07%)</title><rect x="1075.0" y="405" width="0.9" height="15.0" fill="rgb(224,213,0)" rx="2" ry="2" />
<text  x="1078.05" y="415.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (217 samples, 16.01%)</title><rect x="31.8" y="293" width="188.9" height="15.0" fill="rgb(246,9,51)" rx="2" ry="2" />
<text  x="34.77" y="303.5" >math/big.nat.expNN</text>
</g>
<g >
<title>runtime.notetsleep_internal (11 samples, 0.81%)</title><rect x="1081.1" y="389" width="9.6" height="15.0" fill="rgb(219,128,49)" rx="2" ry="2" />
<text  x="1084.14" y="399.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Write (1 samples, 0.07%)</title><rect x="342.7" y="341" width="0.8" height="15.0" fill="rgb(236,144,2)" rx="2" ry="2" />
<text  x="345.66" y="351.5" ></text>
</g>
<g >
<title>runtime/pprof.(*profMap).lookup (1 samples, 0.07%)</title><rect x="1189.1" y="421" width="0.9" height="15.0" fill="rgb(226,35,47)" rx="2" ry="2" />
<text  x="1192.13" y="431.5" ></text>
</g>
<g >
<title>sync.(*entry).load (1 samples, 0.07%)</title><rect x="700.6" y="341" width="0.9" height="15.0" fill="rgb(205,57,10)" rx="2" ry="2" />
<text  x="703.58" y="351.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="264.3" y="277" width="0.9" height="15.0" fill="rgb(225,192,21)" rx="2" ry="2" />
<text  x="267.29" y="287.5" ></text>
</g>
<g >
<title>math/big.putNat (1 samples, 0.07%)</title><rect x="46.6" y="245" width="0.8" height="15.0" fill="rgb(212,192,21)" rx="2" ry="2" />
<text  x="49.58" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="860.8" y="325" width="0.9" height="15.0" fill="rgb(250,133,26)" rx="2" ry="2" />
<text  x="863.82" y="335.5" ></text>
</g>
<g >
<title>encoding/json.encodeByteSlice (2 samples, 0.15%)</title><rect x="612.6" y="325" width="1.8" height="15.0" fill="rgb(242,216,46)" rx="2" ry="2" />
<text  x="615.63" y="335.5" ></text>
</g>
<g >
<title>encoding/json.valueEncoder (1 samples, 0.07%)</title><rect x="345.3" y="341" width="0.8" height="15.0" fill="rgb(224,225,7)" rx="2" ry="2" />
<text  x="348.28" y="351.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.07%)</title><rect x="215.5" y="261" width="0.9" height="15.0" fill="rgb(254,117,44)" rx="2" ry="2" />
<text  x="218.52" y="271.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.07%)</title><rect x="15.2" y="165" width="0.9" height="15.0" fill="rgb(246,158,20)" rx="2" ry="2" />
<text  x="18.23" y="175.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (4 samples, 0.30%)</title><rect x="42.2" y="245" width="3.5" height="15.0" fill="rgb(252,34,3)" rx="2" ry="2" />
<text  x="45.22" y="255.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.15%)</title><rect x="333.1" y="277" width="1.7" height="15.0" fill="rgb(246,123,37)" rx="2" ry="2" />
<text  x="336.08" y="287.5" ></text>
</g>
<g >
<title>math/big.nat.sub (1 samples, 0.07%)</title><rect x="537.7" y="293" width="0.9" height="15.0" fill="rgb(226,61,38)" rx="2" ry="2" />
<text  x="540.73" y="303.5" ></text>
</g>
<g >
<title>reflect.deepValueEqual (1 samples, 0.07%)</title><rect x="279.1" y="373" width="0.9" height="15.0" fill="rgb(245,32,38)" rx="2" ry="2" />
<text  x="282.09" y="383.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.07%)</title><rect x="976.6" y="325" width="0.9" height="15.0" fill="rgb(230,23,53)" rx="2" ry="2" />
<text  x="979.64" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (2 samples, 0.15%)</title><rect x="15.2" y="325" width="1.8" height="15.0" fill="rgb(218,203,35)" rx="2" ry="2" />
<text  x="18.23" y="335.5" ></text>
</g>
<g >
<title>encoding/json.stateBeginValue (1 samples, 0.07%)</title><rect x="585.6" y="357" width="0.9" height="15.0" fill="rgb(249,212,46)" rx="2" ry="2" />
<text  x="588.63" y="367.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.07%)</title><rect x="804.2" y="309" width="0.9" height="15.0" fill="rgb(211,192,38)" rx="2" ry="2" />
<text  x="807.21" y="319.5" ></text>
</g>
<g >
<title>crypto/sha256.New (1 samples, 0.07%)</title><rect x="627.4" y="373" width="0.9" height="15.0" fill="rgb(241,40,12)" rx="2" ry="2" />
<text  x="630.43" y="383.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.07%)</title><rect x="320.0" y="341" width="0.9" height="15.0" fill="rgb(240,47,45)" rx="2" ry="2" />
<text  x="323.02" y="351.5" ></text>
</g>
<g >
<title>runtime.nilinterequal (1 samples, 0.07%)</title><rect x="789.4" y="309" width="0.9" height="15.0" fill="rgb(252,99,31)" rx="2" ry="2" />
<text  x="792.41" y="319.5" ></text>
</g>
<g >
<title>runtime.futexsleep (5 samples, 0.37%)</title><rect x="972.3" y="357" width="4.3" height="15.0" fill="rgb(231,118,5)" rx="2" ry="2" />
<text  x="975.29" y="367.5" ></text>
</g>
<g >
<title>math/big.basicMul (3 samples, 0.22%)</title><rect x="218.1" y="261" width="2.6" height="15.0" fill="rgb(221,33,37)" rx="2" ry="2" />
<text  x="221.13" y="271.5" ></text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.07%)</title><rect x="277.4" y="197" width="0.8" height="15.0" fill="rgb(236,97,11)" rx="2" ry="2" />
<text  x="280.35" y="207.5" ></text>
</g>
<g >
<title>math/big.nat.add (2 samples, 0.15%)</title><rect x="226.8" y="229" width="1.8" height="15.0" fill="rgb(218,161,23)" rx="2" ry="2" />
<text  x="229.84" y="239.5" ></text>
</g>
<g >
<title>runtime.scang (20 samples, 1.48%)</title><rect x="909.6" y="357" width="17.4" height="15.0" fill="rgb(221,178,1)" rx="2" ry="2" />
<text  x="912.59" y="367.5" ></text>
</g>
<g >
<title>all (1,355 samples, 100%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(217,87,22)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (20 samples, 1.48%)</title><rect x="909.6" y="373" width="17.4" height="15.0" fill="rgb(245,77,34)" rx="2" ry="2" />
<text  x="912.59" y="383.5" ></text>
</g>
<g >
<title>runtime.pidleput (1 samples, 0.07%)</title><rect x="1179.5" y="357" width="0.9" height="15.0" fill="rgb(219,106,30)" rx="2" ry="2" />
<text  x="1182.55" y="367.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (2 samples, 0.15%)</title><rect x="571.7" y="325" width="1.7" height="15.0" fill="rgb(210,73,29)" rx="2" ry="2" />
<text  x="574.70" y="335.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.DNode.Send (28 samples, 2.07%)</title><rect x="587.4" y="405" width="24.4" height="15.0" fill="rgb(208,97,28)" rx="2" ry="2" />
<text  x="590.37" y="415.5" >B..</text>
</g>
<g >
<title>crypto/rand.batched.func1 (3 samples, 0.22%)</title><rect x="28.3" y="245" width="2.6" height="15.0" fill="rgb(223,188,39)" rx="2" ry="2" />
<text  x="31.29" y="255.5" ></text>
</g>
<g >
<title>math/big.nat.cmp (2 samples, 0.15%)</title><rect x="228.6" y="229" width="1.7" height="15.0" fill="rgb(234,59,9)" rx="2" ry="2" />
<text  x="231.58" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (2 samples, 0.15%)</title><rect x="907.0" y="245" width="1.7" height="15.0" fill="rgb(217,86,28)" rx="2" ry="2" />
<text  x="909.97" y="255.5" ></text>
</g>
<g >
<title>math/big.nat.setBytes (1 samples, 0.07%)</title><rect x="679.7" y="373" width="0.9" height="15.0" fill="rgb(207,178,3)" rx="2" ry="2" />
<text  x="682.68" y="383.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.15%)</title><rect x="1179.5" y="405" width="1.8" height="15.0" fill="rgb(252,72,40)" rx="2" ry="2" />
<text  x="1182.55" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="536.0" y="245" width="0.9" height="15.0" fill="rgb(224,194,16)" rx="2" ry="2" />
<text  x="538.99" y="255.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.07%)</title><rect x="325.2" y="325" width="0.9" height="15.0" fill="rgb(216,127,37)" rx="2" ry="2" />
<text  x="328.25" y="335.5" ></text>
</g>
<g >
<title>syscall.Syscall (47 samples, 3.47%)</title><rect x="813.8" y="357" width="40.9" height="15.0" fill="rgb(231,15,5)" rx="2" ry="2" />
<text  x="816.79" y="367.5" >sys..</text>
</g>
<g >
<title>crypto/rand.Int (2 samples, 0.15%)</title><rect x="349.6" y="325" width="1.8" height="15.0" fill="rgb(216,197,28)" rx="2" ry="2" />
<text  x="352.63" y="335.5" ></text>
</g>
<g >
<title>math/big.nat.clear (1 samples, 0.07%)</title><rect x="300.0" y="293" width="0.9" height="15.0" fill="rgb(224,189,30)" rx="2" ry="2" />
<text  x="302.99" y="303.5" ></text>
</g>
<g >
<title>runtime.netpollready (3 samples, 0.22%)</title><rect x="1020.2" y="373" width="2.6" height="15.0" fill="rgb(205,73,48)" rx="2" ry="2" />
<text  x="1023.18" y="383.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.07%)</title><rect x="862.6" y="341" width="0.8" height="15.0" fill="rgb(208,54,16)" rx="2" ry="2" />
<text  x="865.56" y="351.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast_pidle (2 samples, 0.15%)</title><rect x="1182.2" y="357" width="1.7" height="15.0" fill="rgb(219,163,6)" rx="2" ry="2" />
<text  x="1185.16" y="367.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.(*lockOrder).PreLock (3 samples, 0.22%)</title><rect x="265.2" y="341" width="2.6" height="15.0" fill="rgb(207,82,52)" rx="2" ry="2" />
<text  x="268.16" y="351.5" ></text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode (2 samples, 0.15%)</title><rect x="15.2" y="309" width="1.8" height="15.0" fill="rgb(248,148,37)" rx="2" ry="2" />
<text  x="18.23" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.expNNMontgomery (185 samples, 13.65%)</title><rect x="370.5" y="293" width="161.1" height="15.0" fill="rgb(252,201,40)" rx="2" ry="2" />
<text  x="373.53" y="303.5" >math/big.nat.expNNMo..</text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.07%)</title><rect x="1180.4" y="325" width="0.9" height="15.0" fill="rgb(209,73,54)" rx="2" ry="2" />
<text  x="1183.42" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (3 samples, 0.22%)</title><rect x="23.9" y="309" width="2.6" height="15.0" fill="rgb(210,141,15)" rx="2" ry="2" />
<text  x="26.93" y="319.5" ></text>
</g>
<g >
<title>runtime.convTstring (1 samples, 0.07%)</title><rect x="347.0" y="389" width="0.9" height="15.0" fill="rgb(226,155,41)" rx="2" ry="2" />
<text  x="350.02" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.sub (1 samples, 0.07%)</title><rect x="547.3" y="245" width="0.9" height="15.0" fill="rgb(247,61,27)" rx="2" ry="2" />
<text  x="550.31" y="255.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (4 samples, 0.30%)</title><rect x="615.2" y="357" width="3.5" height="15.0" fill="rgb(236,73,53)" rx="2" ry="2" />
<text  x="618.24" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="25.7" y="133" width="0.8" height="15.0" fill="rgb(210,215,48)" rx="2" ry="2" />
<text  x="28.68" y="143.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (5 samples, 0.37%)</title><rect x="320.9" y="421" width="4.3" height="15.0" fill="rgb(245,106,40)" rx="2" ry="2" />
<text  x="323.89" y="431.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.07%)</title><rect x="784.2" y="213" width="0.9" height="15.0" fill="rgb(247,177,18)" rx="2" ry="2" />
<text  x="787.18" y="223.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).writeLocked (1 samples, 0.07%)</title><rect x="21.3" y="373" width="0.9" height="15.0" fill="rgb(218,71,27)" rx="2" ry="2" />
<text  x="24.32" y="383.5" ></text>
</g>
<g >
<title>time.(*Timer).Stop (1 samples, 0.07%)</title><rect x="270.4" y="357" width="0.9" height="15.0" fill="rgb(241,34,41)" rx="2" ry="2" />
<text  x="273.38" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="574.3" y="357" width="0.9" height="15.0" fill="rgb(239,48,1)" rx="2" ry="2" />
<text  x="577.31" y="367.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 0.22%)</title><rect x="334.8" y="261" width="2.6" height="15.0" fill="rgb(231,82,40)" rx="2" ry="2" />
<text  x="337.83" y="271.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.07%)</title><rect x="685.8" y="357" width="0.8" height="15.0" fill="rgb(230,21,54)" rx="2" ry="2" />
<text  x="688.78" y="367.5" ></text>
</g>
<g >
<title>runtime.(*treapNode).updateInvariants (1 samples, 0.07%)</title><rect x="907.8" y="197" width="0.9" height="15.0" fill="rgb(214,160,29)" rx="2" ry="2" />
<text  x="910.85" y="207.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (2 samples, 0.15%)</title><rect x="612.6" y="341" width="1.8" height="15.0" fill="rgb(234,20,50)" rx="2" ry="2" />
<text  x="615.63" y="351.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.07%)</title><rect x="39.6" y="197" width="0.9" height="15.0" fill="rgb(211,182,11)" rx="2" ry="2" />
<text  x="42.61" y="207.5" ></text>
</g>
<g >
<title>runtime.bgsweep (6 samples, 0.44%)</title><rect x="900.9" y="453" width="5.2" height="15.0" fill="rgb(212,167,17)" rx="2" ry="2" />
<text  x="903.88" y="463.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (3 samples, 0.22%)</title><rect x="912.2" y="309" width="2.6" height="15.0" fill="rgb(235,107,54)" rx="2" ry="2" />
<text  x="915.20" y="319.5" ></text>
</g>
<g >
<title>fmt.Println (3 samples, 0.22%)</title><rect x="752.8" y="437" width="2.6" height="15.0" fill="rgb(229,38,9)" rx="2" ry="2" />
<text  x="755.83" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (2 samples, 0.15%)</title><rect x="10.0" y="325" width="1.7" height="15.0" fill="rgb(214,207,43)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.07%)</title><rect x="337.4" y="181" width="0.9" height="15.0" fill="rgb(233,16,6)" rx="2" ry="2" />
<text  x="340.44" y="191.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (26 samples, 1.92%)</title><rect x="589.1" y="357" width="22.7" height="15.0" fill="rgb(245,159,3)" rx="2" ry="2" />
<text  x="592.11" y="367.5" >i..</text>
</g>
<g >
<title>encoding/json.(*scanner).pushParseState (1 samples, 0.07%)</title><rect x="585.6" y="341" width="0.9" height="15.0" fill="rgb(246,180,27)" rx="2" ry="2" />
<text  x="588.63" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.07%)</title><rect x="262.5" y="341" width="0.9" height="15.0" fill="rgb(212,146,42)" rx="2" ry="2" />
<text  x="265.55" y="351.5" ></text>
</g>
<g >
<title>runtime.runqempty (1 samples, 0.07%)</title><rect x="1179.5" y="341" width="0.9" height="15.0" fill="rgb(243,0,18)" rx="2" ry="2" />
<text  x="1182.55" y="351.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (2 samples, 0.15%)</title><rect x="10.0" y="341" width="1.7" height="15.0" fill="rgb(212,126,54)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>runtime.convTstring (1 samples, 0.07%)</title><rect x="574.3" y="373" width="0.9" height="15.0" fill="rgb(212,188,25)" rx="2" ry="2" />
<text  x="577.31" y="383.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.07%)</title><rect x="679.7" y="357" width="0.9" height="15.0" fill="rgb(237,160,32)" rx="2" ry="2" />
<text  x="682.68" y="367.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (13 samples, 0.96%)</title><rect x="309.6" y="421" width="11.3" height="15.0" fill="rgb(222,20,46)" rx="2" ry="2" />
<text  x="312.57" y="431.5" ></text>
</g>
<g >
<title>runtime.(*treapNode).updateInvariants (1 samples, 0.07%)</title><rect x="860.8" y="229" width="0.9" height="15.0" fill="rgb(226,196,6)" rx="2" ry="2" />
<text  x="863.82" y="239.5" ></text>
</g>
<g >
<title>encoding/json.stringEncoder (1 samples, 0.07%)</title><rect x="682.3" y="341" width="0.9" height="15.0" fill="rgb(215,91,43)" rx="2" ry="2" />
<text  x="685.30" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="677.9" y="277" width="0.9" height="15.0" fill="rgb(233,149,24)" rx="2" ry="2" />
<text  x="680.94" y="287.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.07%)</title><rect x="686.6" y="341" width="0.9" height="15.0" fill="rgb(219,190,52)" rx="2" ry="2" />
<text  x="689.65" y="351.5" ></text>
</g>
<g >
<title>runtime.resetspinning (4 samples, 0.30%)</title><rect x="1071.6" y="405" width="3.4" height="15.0" fill="rgb(219,161,39)" rx="2" ry="2" />
<text  x="1074.56" y="415.5" ></text>
</g>
<g >
<title>runtime.runqgrab (13 samples, 0.96%)</title><rect x="1025.4" y="373" width="11.3" height="15.0" fill="rgb(249,22,37)" rx="2" ry="2" />
<text  x="1028.41" y="383.5" ></text>
</g>
<g >
<title>runtime.epollwait (3 samples, 0.22%)</title><rect x="969.7" y="373" width="2.6" height="15.0" fill="rgb(208,200,30)" rx="2" ry="2" />
<text  x="972.68" y="383.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.15%)</title><rect x="886.1" y="437" width="1.7" height="15.0" fill="rgb(218,40,12)" rx="2" ry="2" />
<text  x="889.07" y="447.5" ></text>
</g>
<g >
<title>runtime.scanblock (3 samples, 0.22%)</title><rect x="927.0" y="357" width="2.6" height="15.0" fill="rgb(232,225,15)" rx="2" ry="2" />
<text  x="930.00" y="367.5" ></text>
</g>
<g >
<title>sort.Stable (1 samples, 0.07%)</title><rect x="731.1" y="341" width="0.8" height="15.0" fill="rgb(239,203,21)" rx="2" ry="2" />
<text  x="734.06" y="351.5" ></text>
</g>
<g >
<title>reflect.Value.Type (1 samples, 0.07%)</title><rect x="253.0" y="277" width="0.8" height="15.0" fill="rgb(212,139,50)" rx="2" ry="2" />
<text  x="255.97" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.22%)</title><rect x="907.0" y="405" width="2.6" height="15.0" fill="rgb(228,185,33)" rx="2" ry="2" />
<text  x="909.97" y="415.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.07%)</title><rect x="262.5" y="293" width="0.9" height="15.0" fill="rgb(245,44,21)" rx="2" ry="2" />
<text  x="265.55" y="303.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination (3 samples, 0.22%)</title><rect x="907.0" y="421" width="2.6" height="15.0" fill="rgb(254,193,25)" rx="2" ry="2" />
<text  x="909.97" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="762.4" y="389" width="0.9" height="15.0" fill="rgb(232,130,4)" rx="2" ry="2" />
<text  x="765.41" y="399.5" ></text>
</g>
<g >
<title>runtime.mallocgc.func1 (21 samples, 1.55%)</title><rect x="864.3" y="389" width="18.3" height="15.0" fill="rgb(237,107,50)" rx="2" ry="2" />
<text  x="867.30" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.mul (1 samples, 0.07%)</title><rect x="300.0" y="325" width="0.9" height="15.0" fill="rgb(254,101,49)" rx="2" ry="2" />
<text  x="302.99" y="335.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock (2 samples, 0.15%)</title><rect x="1179.5" y="421" width="1.8" height="15.0" fill="rgb(233,13,28)" rx="2" ry="2" />
<text  x="1182.55" y="431.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).pushHead (1 samples, 0.07%)</title><rect x="566.5" y="213" width="0.8" height="15.0" fill="rgb(228,185,16)" rx="2" ry="2" />
<text  x="569.47" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (5 samples, 0.37%)</title><rect x="615.2" y="389" width="4.4" height="15.0" fill="rgb(254,112,5)" rx="2" ry="2" />
<text  x="618.24" y="399.5" ></text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.07%)</title><rect x="808.6" y="325" width="0.8" height="15.0" fill="rgb(240,177,38)" rx="2" ry="2" />
<text  x="811.57" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.07%)</title><rect x="316.5" y="357" width="0.9" height="15.0" fill="rgb(227,222,53)" rx="2" ry="2" />
<text  x="319.54" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="347.0" y="373" width="0.9" height="15.0" fill="rgb(216,190,21)" rx="2" ry="2" />
<text  x="350.02" y="383.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb/memdb.(*DB).Find (1 samples, 0.07%)</title><rect x="340.1" y="309" width="0.8" height="15.0" fill="rgb(211,171,44)" rx="2" ry="2" />
<text  x="343.05" y="319.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.07%)</title><rect x="804.2" y="293" width="0.9" height="15.0" fill="rgb(214,116,6)" rx="2" ry="2" />
<text  x="807.21" y="303.5" ></text>
</g>
<g >
<title>runtime.timerproc (17 samples, 1.25%)</title><rect x="1174.3" y="453" width="14.8" height="15.0" fill="rgb(213,177,43)" rx="2" ry="2" />
<text  x="1177.32" y="463.5" ></text>
</g>
<g >
<title>os.(*File).write (4 samples, 0.30%)</title><rect x="720.6" y="389" width="3.5" height="15.0" fill="rgb(248,15,12)" rx="2" ry="2" />
<text  x="723.61" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.07%)</title><rect x="612.6" y="229" width="0.9" height="15.0" fill="rgb(253,182,25)" rx="2" ry="2" />
<text  x="615.63" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="572.6" y="293" width="0.8" height="15.0" fill="rgb(248,49,45)" rx="2" ry="2" />
<text  x="575.57" y="303.5" ></text>
</g>
<g >
<title>math/big.NewInt (1 samples, 0.07%)</title><rect x="677.9" y="373" width="0.9" height="15.0" fill="rgb(231,189,49)" rx="2" ry="2" />
<text  x="680.94" y="383.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (9 samples, 0.66%)</title><rect x="254.7" y="357" width="7.8" height="15.0" fill="rgb(230,54,2)" rx="2" ry="2" />
<text  x="257.71" y="367.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.15%)</title><rect x="333.1" y="261" width="1.7" height="15.0" fill="rgb(234,188,4)" rx="2" ry="2" />
<text  x="336.08" y="271.5" ></text>
</g>
<g >
<title>runtime.rawbyteslice (1 samples, 0.07%)</title><rect x="341.8" y="357" width="0.9" height="15.0" fill="rgb(231,10,50)" rx="2" ry="2" />
<text  x="344.79" y="367.5" ></text>
</g>
<g >
<title>runtime.entersyscall (1 samples, 0.07%)</title><rect x="744.1" y="309" width="0.9" height="15.0" fill="rgb(216,214,40)" rx="2" ry="2" />
<text  x="747.13" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.07%)</title><rect x="337.4" y="165" width="0.9" height="15.0" fill="rgb(215,162,28)" rx="2" ry="2" />
<text  x="340.44" y="175.5" ></text>
</g>
<g >
<title>strconv.AppendUint (1 samples, 0.07%)</title><rect x="344.4" y="325" width="0.9" height="15.0" fill="rgb(227,128,30)" rx="2" ry="2" />
<text  x="347.41" y="335.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.22%)</title><rect x="265.2" y="277" width="2.6" height="15.0" fill="rgb(225,74,22)" rx="2" ry="2" />
<text  x="268.16" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (25 samples, 1.85%)</title><rect x="772.9" y="389" width="21.7" height="15.0" fill="rgb(227,60,42)" rx="2" ry="2" />
<text  x="775.86" y="399.5" >e..</text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.07%)</title><rect x="626.6" y="325" width="0.8" height="15.0" fill="rgb(229,56,22)" rx="2" ry="2" />
<text  x="629.56" y="335.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="612.6" y="197" width="0.9" height="15.0" fill="rgb(248,101,37)" rx="2" ry="2" />
<text  x="615.63" y="207.5" ></text>
</g>
<g >
<title>runtime.pcvalue (2 samples, 0.15%)</title><rect x="916.6" y="293" width="1.7" height="15.0" fill="rgb(254,134,15)" rx="2" ry="2" />
<text  x="919.55" y="303.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.07%)</title><rect x="685.8" y="389" width="0.8" height="15.0" fill="rgb(216,112,20)" rx="2" ry="2" />
<text  x="688.78" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.div (1 samples, 0.07%)</title><rect x="220.7" y="277" width="0.9" height="15.0" fill="rgb(228,40,45)" rx="2" ry="2" />
<text  x="223.75" y="287.5" ></text>
</g>
<g >
<title>runtime.convT2E (1 samples, 0.07%)</title><rect x="263.4" y="373" width="0.9" height="15.0" fill="rgb(234,140,54)" rx="2" ry="2" />
<text  x="266.42" y="383.5" ></text>
</g>
<g >
<title>runtime.largeAlloc (1 samples, 0.07%)</title><rect x="621.3" y="309" width="0.9" height="15.0" fill="rgb(207,42,54)" rx="2" ry="2" />
<text  x="624.34" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/utils.SHA256 (1 samples, 0.07%)</title><rect x="306.1" y="389" width="0.9" height="15.0" fill="rgb(250,178,37)" rx="2" ry="2" />
<text  x="309.09" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (19 samples, 1.40%)</title><rect x="687.5" y="389" width="16.6" height="15.0" fill="rgb(243,188,27)" rx="2" ry="2" />
<text  x="690.52" y="399.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.07%)</title><rect x="266.9" y="229" width="0.9" height="15.0" fill="rgb(245,163,41)" rx="2" ry="2" />
<text  x="269.90" y="239.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.07%)</title><rect x="236.4" y="309" width="0.9" height="15.0" fill="rgb(250,57,0)" rx="2" ry="2" />
<text  x="239.42" y="319.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.07%)</title><rect x="863.4" y="389" width="0.9" height="15.0" fill="rgb(251,89,3)" rx="2" ry="2" />
<text  x="866.43" y="399.5" ></text>
</g>
<g >
<title>encoding/json.unquoteBytes (1 samples, 0.07%)</title><rect x="23.9" y="197" width="0.9" height="15.0" fill="rgb(210,203,53)" rx="2" ry="2" />
<text  x="26.93" y="207.5" ></text>
</g>
<g >
<title>math/big.nat.expNNMontgomery (190 samples, 14.02%)</title><rect x="50.1" y="277" width="165.4" height="15.0" fill="rgb(237,162,13)" rx="2" ry="2" />
<text  x="53.06" y="287.5" >math/big.nat.expNNMon..</text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).VerifySignature (1 samples, 0.07%)</title><rect x="276.5" y="389" width="0.9" height="15.0" fill="rgb(209,190,3)" rx="2" ry="2" />
<text  x="279.48" y="399.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.07%)</title><rect x="327.0" y="373" width="0.9" height="15.0" fill="rgb(221,1,33)" rx="2" ry="2" />
<text  x="329.99" y="383.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (5 samples, 0.37%)</title><rect x="673.6" y="309" width="4.3" height="15.0" fill="rgb(230,179,25)" rx="2" ry="2" />
<text  x="676.59" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (3 samples, 0.22%)</title><rect x="23.9" y="245" width="2.6" height="15.0" fill="rgb(220,157,51)" rx="2" ry="2" />
<text  x="26.93" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).setSpans (1 samples, 0.07%)</title><rect x="868.7" y="293" width="0.8" height="15.0" fill="rgb(224,132,40)" rx="2" ry="2" />
<text  x="871.66" y="303.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (2 samples, 0.15%)</title><rect x="664.0" y="293" width="1.7" height="15.0" fill="rgb(212,5,50)" rx="2" ry="2" />
<text  x="667.01" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (2 samples, 0.15%)</title><rect x="17.0" y="277" width="1.7" height="15.0" fill="rgb(254,180,18)" rx="2" ry="2" />
<text  x="19.97" y="287.5" ></text>
</g>
<g >
<title>crypto/rsa.decryptAndCheck (256 samples, 18.89%)</title><rect x="348.8" y="357" width="222.9" height="15.0" fill="rgb(215,128,1)" rx="2" ry="2" />
<text  x="351.76" y="367.5" >crypto/rsa.decryptAndCheck</text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.07%)</title><rect x="804.2" y="373" width="0.9" height="15.0" fill="rgb(253,138,16)" rx="2" ry="2" />
<text  x="807.21" y="383.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (2 samples, 0.15%)</title><rect x="15.2" y="245" width="1.8" height="15.0" fill="rgb(234,69,54)" rx="2" ry="2" />
<text  x="18.23" y="255.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (2 samples, 0.15%)</title><rect x="325.2" y="357" width="1.8" height="15.0" fill="rgb(235,69,13)" rx="2" ry="2" />
<text  x="328.25" y="367.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (3 samples, 0.22%)</title><rect x="23.9" y="293" width="2.6" height="15.0" fill="rgb(208,50,38)" rx="2" ry="2" />
<text  x="26.93" y="303.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.PostUnlock (1 samples, 0.07%)</title><rect x="272.1" y="373" width="0.9" height="15.0" fill="rgb(250,106,51)" rx="2" ry="2" />
<text  x="275.13" y="383.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.07%)</title><rect x="923.5" y="229" width="0.9" height="15.0" fill="rgb(208,19,3)" rx="2" ry="2" />
<text  x="926.52" y="239.5" ></text>
</g>
<g >
<title>runtime.entersyscall_sysmon (2 samples, 0.15%)</title><rect x="333.1" y="293" width="1.7" height="15.0" fill="rgb(221,147,23)" rx="2" ry="2" />
<text  x="336.08" y="303.5" ></text>
</g>
<g >
<title>math/big.addVV (1 samples, 0.07%)</title><rect x="227.7" y="213" width="0.9" height="15.0" fill="rgb(225,61,42)" rx="2" ry="2" />
<text  x="230.71" y="223.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.15%)</title><rect x="889.6" y="357" width="1.7" height="15.0" fill="rgb(216,1,24)" rx="2" ry="2" />
<text  x="892.56" y="367.5" ></text>
</g>
<g >
<title>runtime.exitsyscall0 (1 samples, 0.07%)</title><rect x="966.2" y="437" width="0.9" height="15.0" fill="rgb(207,175,23)" rx="2" ry="2" />
<text  x="969.19" y="447.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (2 samples, 0.15%)</title><rect x="15.2" y="261" width="1.8" height="15.0" fill="rgb(206,72,53)" rx="2" ry="2" />
<text  x="18.23" y="271.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.(*lockOrder).PostUnlock (1 samples, 0.07%)</title><rect x="272.1" y="357" width="0.9" height="15.0" fill="rgb(210,26,41)" rx="2" ry="2" />
<text  x="275.13" y="367.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.07%)</title><rect x="278.2" y="213" width="0.9" height="15.0" fill="rgb(237,4,28)" rx="2" ry="2" />
<text  x="281.22" y="223.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.07%)</title><rect x="1075.0" y="389" width="0.9" height="15.0" fill="rgb(251,18,29)" rx="2" ry="2" />
<text  x="1078.05" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (2 samples, 0.15%)</title><rect x="907.0" y="261" width="1.7" height="15.0" fill="rgb(216,74,17)" rx="2" ry="2" />
<text  x="909.97" y="271.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.07%)</title><rect x="966.2" y="405" width="0.9" height="15.0" fill="rgb(246,126,30)" rx="2" ry="2" />
<text  x="969.19" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (7 samples, 0.52%)</title><rect x="576.9" y="325" width="6.1" height="15.0" fill="rgb(231,170,35)" rx="2" ry="2" />
<text  x="579.92" y="335.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.DNode.Send (9 samples, 0.66%)</title><rect x="254.7" y="389" width="7.8" height="15.0" fill="rgb(243,51,5)" rx="2" ry="2" />
<text  x="257.71" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.div (20 samples, 1.48%)</title><rect x="32.6" y="277" width="17.5" height="15.0" fill="rgb(236,1,30)" rx="2" ry="2" />
<text  x="35.64" y="287.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Write (1 samples, 0.07%)</title><rect x="630.0" y="389" width="0.9" height="15.0" fill="rgb(254,31,41)" rx="2" ry="2" />
<text  x="633.04" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).insert (2 samples, 0.15%)</title><rect x="907.0" y="213" width="1.7" height="15.0" fill="rgb(251,56,36)" rx="2" ry="2" />
<text  x="909.97" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.07%)</title><rect x="15.2" y="85" width="0.9" height="15.0" fill="rgb(239,188,50)" rx="2" ry="2" />
<text  x="18.23" y="95.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Hash (4 samples, 0.30%)</title><rect x="571.7" y="389" width="3.5" height="15.0" fill="rgb(227,69,1)" rx="2" ry="2" />
<text  x="574.70" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.07%)</title><rect x="235.5" y="277" width="0.9" height="15.0" fill="rgb(248,99,30)" rx="2" ry="2" />
<text  x="238.55" y="287.5" ></text>
</g>
<g >
<title>internal/reflectlite.Value.Len (1 samples, 0.07%)</title><rect x="617.9" y="293" width="0.8" height="15.0" fill="rgb(233,12,31)" rx="2" ry="2" />
<text  x="620.85" y="303.5" ></text>
</g>
<g >
<title>math/big.(*Int).QuoRem (1 samples, 0.07%)</title><rect x="220.7" y="293" width="0.9" height="15.0" fill="rgb(220,22,23)" rx="2" ry="2" />
<text  x="223.75" y="303.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.07%)</title><rect x="988.0" y="389" width="0.8" height="15.0" fill="rgb(225,91,14)" rx="2" ry="2" />
<text  x="990.96" y="399.5" ></text>
</g>
<g >
<title>runtime.bgscavenge.func1 (2 samples, 0.15%)</title><rect x="1176.1" y="437" width="1.7" height="15.0" fill="rgb(222,149,33)" rx="2" ry="2" />
<text  x="1179.07" y="447.5" ></text>
</g>
<g >
<title>math/big.(*Int).Mod (1 samples, 0.07%)</title><rect x="220.7" y="309" width="0.9" height="15.0" fill="rgb(250,205,37)" rx="2" ry="2" />
<text  x="223.75" y="319.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (3 samples, 0.22%)</title><rect x="563.0" y="261" width="2.6" height="15.0" fill="rgb(217,34,39)" rx="2" ry="2" />
<text  x="565.99" y="271.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.07%)</title><rect x="17.8" y="229" width="0.9" height="15.0" fill="rgb(244,64,48)" rx="2" ry="2" />
<text  x="20.84" y="239.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.07%)</title><rect x="291.3" y="277" width="0.9" height="15.0" fill="rgb(236,90,15)" rx="2" ry="2" />
<text  x="294.28" y="287.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).done (1 samples, 0.07%)</title><rect x="986.2" y="389" width="0.9" height="15.0" fill="rgb(244,135,0)" rx="2" ry="2" />
<text  x="989.22" y="399.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.memGet (1 samples, 0.07%)</title><rect x="340.1" y="325" width="0.8" height="15.0" fill="rgb(237,154,43)" rx="2" ry="2" />
<text  x="343.05" y="335.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (6 samples, 0.44%)</title><rect x="658.8" y="309" width="5.2" height="15.0" fill="rgb(218,184,12)" rx="2" ry="2" />
<text  x="661.78" y="319.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.07%)</title><rect x="700.6" y="357" width="0.9" height="15.0" fill="rgb(249,75,38)" rx="2" ry="2" />
<text  x="703.58" y="367.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (15 samples, 1.11%)</title><rect x="732.8" y="373" width="13.1" height="15.0" fill="rgb(245,23,44)" rx="2" ry="2" />
<text  x="735.80" y="383.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (2 samples, 0.15%)</title><rect x="695.4" y="341" width="1.7" height="15.0" fill="rgb(253,8,15)" rx="2" ry="2" />
<text  x="698.36" y="351.5" ></text>
</g>
<g >
<title>sync.runtime_procPin (1 samples, 0.07%)</title><rect x="40.5" y="197" width="0.9" height="15.0" fill="rgb(234,82,28)" rx="2" ry="2" />
<text  x="43.48" y="207.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (2 samples, 0.15%)</title><rect x="561.2" y="229" width="1.8" height="15.0" fill="rgb(238,66,5)" rx="2" ry="2" />
<text  x="564.25" y="239.5" ></text>
</g>
<g >
<title>runtime.mcall (125 samples, 9.23%)</title><rect x="966.2" y="453" width="108.8" height="15.0" fill="rgb(208,226,52)" rx="2" ry="2" />
<text  x="969.19" y="463.5" >runtime.mcall</text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.07%)</title><rect x="262.5" y="213" width="0.9" height="15.0" fill="rgb(211,148,42)" rx="2" ry="2" />
<text  x="265.55" y="223.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.07%)</title><rect x="264.3" y="261" width="0.9" height="15.0" fill="rgb(226,45,10)" rx="2" ry="2" />
<text  x="267.29" y="271.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.07%)</title><rect x="39.6" y="165" width="0.9" height="15.0" fill="rgb(207,183,48)" rx="2" ry="2" />
<text  x="42.61" y="175.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.07%)</title><rect x="346.1" y="341" width="0.9" height="15.0" fill="rgb(226,115,19)" rx="2" ry="2" />
<text  x="349.15" y="351.5" ></text>
</g>
<g >
<title>runtime.goready (3 samples, 0.22%)</title><rect x="334.8" y="389" width="2.6" height="15.0" fill="rgb(209,157,28)" rx="2" ry="2" />
<text  x="337.83" y="399.5" ></text>
</g>
<g >
<title>runtime.resolveTypeOff (1 samples, 0.07%)</title><rect x="24.8" y="69" width="0.9" height="15.0" fill="rgb(243,24,24)" rx="2" ry="2" />
<text  x="27.80" y="79.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*Tx).write (1 samples, 0.07%)</title><rect x="19.6" y="373" width="0.9" height="15.0" fill="rgb(240,8,19)" rx="2" ry="2" />
<text  x="22.58" y="383.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtString (1 samples, 0.07%)</title><rect x="725.0" y="373" width="0.8" height="15.0" fill="rgb(214,162,22)" rx="2" ry="2" />
<text  x="727.97" y="383.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.07%)</title><rect x="804.2" y="229" width="0.9" height="15.0" fill="rgb(224,0,1)" rx="2" ry="2" />
<text  x="807.21" y="239.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.07%)</title><rect x="992.3" y="389" width="0.9" height="15.0" fill="rgb(232,197,25)" rx="2" ry="2" />
<text  x="995.32" y="399.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).checkSum (1 samples, 0.07%)</title><rect x="629.2" y="373" width="0.8" height="15.0" fill="rgb(241,210,9)" rx="2" ry="2" />
<text  x="632.17" y="383.5" ></text>
</g>
<g >
<title>runtime.chansend1 (3 samples, 0.22%)</title><rect x="334.8" y="437" width="2.6" height="15.0" fill="rgb(229,218,48)" rx="2" ry="2" />
<text  x="337.83" y="447.5" ></text>
</g>
<g >
<title>math/big.getNat (3 samples, 0.22%)</title><rect x="38.7" y="245" width="2.7" height="15.0" fill="rgb(213,213,43)" rx="2" ry="2" />
<text  x="41.74" y="255.5" ></text>
</g>
<g >
<title>math/big.nat.setUint64 (1 samples, 0.07%)</title><rect x="677.9" y="341" width="0.9" height="15.0" fill="rgb(215,218,14)" rx="2" ry="2" />
<text  x="680.94" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.07%)</title><rect x="313.1" y="277" width="0.8" height="15.0" fill="rgb(254,110,28)" rx="2" ry="2" />
<text  x="316.06" y="287.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.15%)</title><rect x="268.6" y="261" width="1.8" height="15.0" fill="rgb(223,122,10)" rx="2" ry="2" />
<text  x="271.64" y="271.5" ></text>
</g>
<g >
<title>encoding/json.stateBeginString (1 samples, 0.07%)</title><rect x="311.3" y="357" width="0.9" height="15.0" fill="rgb(205,61,18)" rx="2" ry="2" />
<text  x="314.31" y="367.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (19 samples, 1.40%)</title><rect x="33.5" y="261" width="16.6" height="15.0" fill="rgb(251,54,12)" rx="2" ry="2" />
<text  x="36.51" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).find (1 samples, 0.07%)</title><rect x="612.6" y="133" width="0.9" height="15.0" fill="rgb(240,229,9)" rx="2" ry="2" />
<text  x="615.63" y="143.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.07%)</title><rect x="750.2" y="405" width="0.9" height="15.0" fill="rgb(234,202,23)" rx="2" ry="2" />
<text  x="753.22" y="415.5" ></text>
</g>
<g >
<title>runtime.bgscavenge.func2 (1 samples, 0.07%)</title><rect x="888.7" y="453" width="0.9" height="15.0" fill="rgb(229,92,0)" rx="2" ry="2" />
<text  x="891.69" y="463.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Name (2 samples, 0.15%)</title><rect x="693.6" y="325" width="1.8" height="15.0" fill="rgb(206,164,5)" rx="2" ry="2" />
<text  x="696.62" y="335.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (1 samples, 0.07%)</title><rect x="12.6" y="357" width="0.9" height="15.0" fill="rgb(207,158,49)" rx="2" ry="2" />
<text  x="15.61" y="367.5" ></text>
</g>
<g >
<title>math/big.nat.mul (1 samples, 0.07%)</title><rect x="215.5" y="277" width="0.9" height="15.0" fill="rgb(250,40,29)" rx="2" ry="2" />
<text  x="218.52" y="287.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.07%)</title><rect x="684.9" y="373" width="0.9" height="15.0" fill="rgb(218,25,52)" rx="2" ry="2" />
<text  x="687.91" y="383.5" ></text>
</g>
<g >
<title>math/big.shrVU (1 samples, 0.07%)</title><rect x="48.3" y="245" width="0.9" height="15.0" fill="rgb(211,180,17)" rx="2" ry="2" />
<text  x="51.32" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.07%)</title><rect x="536.0" y="117" width="0.9" height="15.0" fill="rgb(207,79,19)" rx="2" ry="2" />
<text  x="538.99" y="127.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (3 samples, 0.22%)</title><rect x="273.0" y="389" width="2.6" height="15.0" fill="rgb(215,171,52)" rx="2" ry="2" />
<text  x="276.00" y="399.5" ></text>
</g>
<g >
<title>math/big.(*Int).Mod (1 samples, 0.07%)</title><rect x="536.9" y="325" width="0.8" height="15.0" fill="rgb(233,52,13)" rx="2" ry="2" />
<text  x="539.86" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.07%)</title><rect x="612.6" y="165" width="0.9" height="15.0" fill="rgb(249,109,17)" rx="2" ry="2" />
<text  x="615.63" y="175.5" ></text>
</g>
<g >
<title>math/big.(*Int).Mul (5 samples, 0.37%)</title><rect x="230.3" y="245" width="4.4" height="15.0" fill="rgb(245,140,13)" rx="2" ry="2" />
<text  x="233.32" y="255.5" ></text>
</g>
<g >
<title>runtime.mcall (1 samples, 0.07%)</title><rect x="885.2" y="437" width="0.9" height="15.0" fill="rgb(231,122,32)" rx="2" ry="2" />
<text  x="888.20" y="447.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (5 samples, 0.37%)</title><rect x="958.4" y="357" width="4.3" height="15.0" fill="rgb(225,225,28)" rx="2" ry="2" />
<text  x="961.35" y="367.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.07%)</title><rect x="307.8" y="325" width="0.9" height="15.0" fill="rgb(206,122,15)" rx="2" ry="2" />
<text  x="310.83" y="335.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Proposer).ReceiveOrder (11 samples, 0.81%)</title><rect x="327.9" y="453" width="9.5" height="15.0" fill="rgb(249,44,47)" rx="2" ry="2" />
<text  x="330.86" y="463.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock (4 samples, 0.30%)</title><rect x="23.9" y="421" width="3.5" height="15.0" fill="rgb(235,188,1)" rx="2" ry="2" />
<text  x="26.93" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="792.0" y="341" width="0.9" height="15.0" fill="rgb(229,209,22)" rx="2" ry="2" />
<text  x="795.02" y="351.5" ></text>
</g>
<g >
<title>runtime.sysUnused (1 samples, 0.07%)</title><rect x="867.8" y="245" width="0.9" height="15.0" fill="rgb(235,217,32)" rx="2" ry="2" />
<text  x="870.79" y="255.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.07%)</title><rect x="583.0" y="325" width="0.9" height="15.0" fill="rgb(253,6,16)" rx="2" ry="2" />
<text  x="586.02" y="335.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (1 samples, 0.07%)</title><rect x="1030.6" y="357" width="0.9" height="15.0" fill="rgb(253,16,19)" rx="2" ry="2" />
<text  x="1033.63" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mheap).scavengeIfNeededLocked (1 samples, 0.07%)</title><rect x="867.8" y="293" width="0.9" height="15.0" fill="rgb(227,224,36)" rx="2" ry="2" />
<text  x="870.79" y="303.5" ></text>
</g>
<g >
<title>encoding/json.state0 (2 samples, 0.15%)</title><rect x="799.0" y="373" width="1.7" height="15.0" fill="rgb(239,96,47)" rx="2" ry="2" />
<text  x="801.99" y="383.5" ></text>
</g>
<g >
<title>math/big.(*Int).GCD (20 samples, 1.48%)</title><rect x="538.6" y="309" width="17.4" height="15.0" fill="rgb(205,117,29)" rx="2" ry="2" />
<text  x="541.61" y="319.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.07%)</title><rect x="326.1" y="309" width="0.9" height="15.0" fill="rgb(227,221,20)" rx="2" ry="2" />
<text  x="329.12" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.15%)</title><rect x="764.2" y="341" width="1.7" height="15.0" fill="rgb(249,15,37)" rx="2" ry="2" />
<text  x="767.15" y="351.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (3 samples, 0.22%)</title><rect x="300.9" y="325" width="2.6" height="15.0" fill="rgb(237,61,5)" rx="2" ry="2" />
<text  x="303.86" y="335.5" ></text>
</g>
<g >
<title>runtime.ready (3 samples, 0.22%)</title><rect x="334.8" y="341" width="2.6" height="15.0" fill="rgb(229,133,32)" rx="2" ry="2" />
<text  x="337.83" y="351.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.07%)</title><rect x="215.5" y="245" width="0.9" height="15.0" fill="rgb(246,147,41)" rx="2" ry="2" />
<text  x="218.52" y="255.5" ></text>
</g>
<g >
<title>runtime.lock (3 samples, 0.22%)</title><rect x="1022.8" y="373" width="2.6" height="15.0" fill="rgb(245,143,34)" rx="2" ry="2" />
<text  x="1025.80" y="383.5" ></text>
</g>
<g >
<title>net.(*conn).Write (26 samples, 1.92%)</title><rect x="589.1" y="389" width="22.7" height="15.0" fill="rgb(227,196,11)" rx="2" ry="2" />
<text  x="592.11" y="399.5" >n..</text>
</g>
<g >
<title>math/big.mulAddVWW (2 samples, 0.15%)</title><rect x="554.3" y="213" width="1.7" height="15.0" fill="rgb(210,205,29)" rx="2" ry="2" />
<text  x="557.28" y="223.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).checkSum (1 samples, 0.07%)</title><rect x="306.1" y="357" width="0.9" height="15.0" fill="rgb(213,183,17)" rx="2" ry="2" />
<text  x="309.09" y="367.5" ></text>
</g>
<g >
<title>encoding/base64.assemble64 (1 samples, 0.07%)</title><rect x="577.8" y="277" width="0.9" height="15.0" fill="rgb(222,55,6)" rx="2" ry="2" />
<text  x="580.79" y="287.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.07%)</title><rect x="14.4" y="309" width="0.8" height="15.0" fill="rgb(254,125,49)" rx="2" ry="2" />
<text  x="17.35" y="319.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.07%)</title><rect x="966.2" y="373" width="0.9" height="15.0" fill="rgb(218,194,0)" rx="2" ry="2" />
<text  x="969.19" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.07%)</title><rect x="262.5" y="357" width="0.9" height="15.0" fill="rgb(210,21,15)" rx="2" ry="2" />
<text  x="265.55" y="367.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Iterator).Next.func1 (3 samples, 0.22%)</title><rect x="337.4" y="309" width="2.7" height="15.0" fill="rgb(209,110,13)" rx="2" ry="2" />
<text  x="340.44" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="15.2" y="149" width="0.9" height="15.0" fill="rgb(228,143,7)" rx="2" ry="2" />
<text  x="18.23" y="159.5" ></text>
</g>
<g >
<title>math/big.(*Int).ModInverse (21 samples, 1.55%)</title><rect x="537.7" y="325" width="18.3" height="15.0" fill="rgb(210,99,49)" rx="2" ry="2" />
<text  x="540.73" y="335.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (3 samples, 0.22%)</title><rect x="907.0" y="389" width="2.6" height="15.0" fill="rgb(240,205,8)" rx="2" ry="2" />
<text  x="909.97" y="399.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.07%)</title><rect x="546.4" y="181" width="0.9" height="15.0" fill="rgb(250,144,26)" rx="2" ry="2" />
<text  x="549.44" y="191.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (1 samples, 0.07%)</title><rect x="1075.0" y="421" width="0.9" height="15.0" fill="rgb(242,150,40)" rx="2" ry="2" />
<text  x="1078.05" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="698.0" y="277" width="0.8" height="15.0" fill="rgb(220,112,39)" rx="2" ry="2" />
<text  x="700.97" y="287.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.15%)</title><rect x="1176.1" y="373" width="1.7" height="15.0" fill="rgb(249,187,24)" rx="2" ry="2" />
<text  x="1179.07" y="383.5" ></text>
</g>
<g >
<title>runtime.mapassign (1 samples, 0.07%)</title><rect x="25.7" y="165" width="0.8" height="15.0" fill="rgb(225,102,37)" rx="2" ry="2" />
<text  x="28.68" y="175.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (3 samples, 0.22%)</title><rect x="907.0" y="437" width="2.6" height="15.0" fill="rgb(234,54,22)" rx="2" ry="2" />
<text  x="909.97" y="447.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtInteger (1 samples, 0.07%)</title><rect x="725.8" y="341" width="0.9" height="15.0" fill="rgb(241,89,23)" rx="2" ry="2" />
<text  x="728.84" y="351.5" ></text>
</g>
<g >
<title>runtime.entersyscall (8 samples, 0.59%)</title><rect x="846.9" y="341" width="7.0" height="15.0" fill="rgb(228,103,23)" rx="2" ry="2" />
<text  x="849.89" y="351.5" ></text>
</g>
<g >
<title>time.startTimer (2 samples, 0.15%)</title><rect x="889.6" y="421" width="1.7" height="15.0" fill="rgb(253,5,54)" rx="2" ry="2" />
<text  x="892.56" y="431.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.07%)</title><rect x="300.0" y="277" width="0.9" height="15.0" fill="rgb(207,149,23)" rx="2" ry="2" />
<text  x="302.99" y="287.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (1 samples, 0.07%)</title><rect x="26.5" y="325" width="0.9" height="15.0" fill="rgb(215,203,27)" rx="2" ry="2" />
<text  x="29.55" y="335.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.07%)</title><rect x="679.7" y="229" width="0.9" height="15.0" fill="rgb(233,50,35)" rx="2" ry="2" />
<text  x="682.68" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="769.4" y="389" width="0.9" height="15.0" fill="rgb(208,202,49)" rx="2" ry="2" />
<text  x="772.38" y="399.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.15%)</title><rect x="531.6" y="261" width="1.8" height="15.0" fill="rgb(234,188,27)" rx="2" ry="2" />
<text  x="534.64" y="271.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (1 samples, 0.07%)</title><rect x="307.0" y="389" width="0.8" height="15.0" fill="rgb(208,56,17)" rx="2" ry="2" />
<text  x="309.96" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.07%)</title><rect x="612.6" y="213" width="0.9" height="15.0" fill="rgb(249,227,9)" rx="2" ry="2" />
<text  x="615.63" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.07%)</title><rect x="308.7" y="357" width="0.9" height="15.0" fill="rgb(245,76,26)" rx="2" ry="2" />
<text  x="311.70" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="730.2" y="325" width="0.9" height="15.0" fill="rgb(247,192,40)" rx="2" ry="2" />
<text  x="733.19" y="335.5" ></text>
</g>
<g >
<title>runtime.notetsleep (11 samples, 0.81%)</title><rect x="1081.1" y="405" width="9.6" height="15.0" fill="rgb(232,194,47)" rx="2" ry="2" />
<text  x="1084.14" y="415.5" ></text>
</g>
<g >
<title>runtime.(*timersBucket).addtimerLocked (2 samples, 0.15%)</title><rect x="889.6" y="389" width="1.7" height="15.0" fill="rgb(219,226,54)" rx="2" ry="2" />
<text  x="892.56" y="399.5" ></text>
</g>
<g >
<title>runtime.gcStart.func2 (1 samples, 0.07%)</title><rect x="862.6" y="373" width="0.8" height="15.0" fill="rgb(247,13,23)" rx="2" ry="2" />
<text  x="865.56" y="383.5" ></text>
</g>
<g >
<title>runtime.freedefer (1 samples, 0.07%)</title><rect x="20.5" y="373" width="0.8" height="15.0" fill="rgb(227,10,9)" rx="2" ry="2" />
<text  x="23.45" y="383.5" ></text>
</g>
<g >
<title>runtime.entersyscall_sysmon (6 samples, 0.44%)</title><rect x="848.6" y="293" width="5.3" height="15.0" fill="rgb(231,0,45)" rx="2" ry="2" />
<text  x="851.63" y="303.5" ></text>
</g>
<g >
<title>runtime.park_m (109 samples, 8.04%)</title><rect x="980.1" y="437" width="94.9" height="15.0" fill="rgb(254,94,29)" rx="2" ry="2" />
<text  x="983.13" y="447.5" >runtime.par..</text>
</g>
<g >
<title>runtime.(*mspan).sweep (3 samples, 0.22%)</title><rect x="903.5" y="421" width="2.6" height="15.0" fill="rgb(225,69,48)" rx="2" ry="2" />
<text  x="906.49" y="431.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.15%)</title><rect x="277.4" y="293" width="1.7" height="15.0" fill="rgb(216,172,43)" rx="2" ry="2" />
<text  x="280.35" y="303.5" ></text>
</g>
<g >
<title>runtime.stackalloc (1 samples, 0.07%)</title><rect x="761.5" y="309" width="0.9" height="15.0" fill="rgb(231,155,37)" rx="2" ry="2" />
<text  x="764.54" y="319.5" ></text>
</g>
<g >
<title>runtime.trygetfull (1 samples, 0.07%)</title><rect x="532.5" y="149" width="0.9" height="15.0" fill="rgb(234,142,1)" rx="2" ry="2" />
<text  x="535.51" y="159.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (1 samples, 0.07%)</title><rect x="804.2" y="213" width="0.9" height="15.0" fill="rgb(222,101,23)" rx="2" ry="2" />
<text  x="807.21" y="223.5" ></text>
</g>
<g >
<title>syscall.read (8 samples, 0.59%)</title><rect x="327.9" y="373" width="6.9" height="15.0" fill="rgb(211,45,13)" rx="2" ry="2" />
<text  x="330.86" y="383.5" ></text>
</g>
<g >
<title>runtime.newstack (7 samples, 0.52%)</title><rect x="756.3" y="341" width="6.1" height="15.0" fill="rgb(213,95,43)" rx="2" ry="2" />
<text  x="759.32" y="351.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.15%)</title><rect x="1182.2" y="325" width="1.7" height="15.0" fill="rgb(208,167,43)" rx="2" ry="2" />
<text  x="1185.16" y="335.5" ></text>
</g>
<g >
<title>fmt.Printf (20 samples, 1.48%)</title><rect x="706.7" y="437" width="17.4" height="15.0" fill="rgb(211,193,45)" rx="2" ry="2" />
<text  x="709.68" y="447.5" ></text>
</g>
<g >
<title>crypto/sha256.block (1 samples, 0.07%)</title><rect x="629.2" y="341" width="0.8" height="15.0" fill="rgb(219,83,39)" rx="2" ry="2" />
<text  x="632.17" y="351.5" ></text>
</g>
<g >
<title>runtime.gentraceback (6 samples, 0.44%)</title><rect x="756.3" y="309" width="5.2" height="15.0" fill="rgb(224,29,23)" rx="2" ry="2" />
<text  x="759.32" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.div (1 samples, 0.07%)</title><rect x="280.0" y="293" width="0.8" height="15.0" fill="rgb(227,172,16)" rx="2" ry="2" />
<text  x="282.96" y="303.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.07%)</title><rect x="760.7" y="261" width="0.8" height="15.0" fill="rgb(252,109,40)" rx="2" ry="2" />
<text  x="763.67" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.07%)</title><rect x="15.2" y="117" width="0.9" height="15.0" fill="rgb(249,20,38)" rx="2" ry="2" />
<text  x="18.23" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.07%)</title><rect x="679.7" y="293" width="0.9" height="15.0" fill="rgb(211,82,25)" rx="2" ry="2" />
<text  x="682.68" y="303.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.07%)</title><rect x="360.1" y="245" width="0.9" height="15.0" fill="rgb(234,138,20)" rx="2" ry="2" />
<text  x="363.08" y="255.5" ></text>
</g>
<g >
<title>encoding/base64.(*Encoding).decodeQuantum (1 samples, 0.07%)</title><rect x="779.8" y="309" width="0.9" height="15.0" fill="rgb(231,60,19)" rx="2" ry="2" />
<text  x="782.83" y="319.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (1 samples, 0.07%)</title><rect x="46.6" y="213" width="0.8" height="15.0" fill="rgb(207,155,36)" rx="2" ry="2" />
<text  x="49.58" y="223.5" ></text>
</g>
<g >
<title>runtime.markrootSpans (1 samples, 0.07%)</title><rect x="929.6" y="373" width="0.9" height="15.0" fill="rgb(209,155,39)" rx="2" ry="2" />
<text  x="932.62" y="383.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (2 samples, 0.15%)</title><rect x="280.0" y="309" width="1.7" height="15.0" fill="rgb(251,28,54)" rx="2" ry="2" />
<text  x="282.96" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (2 samples, 0.15%)</title><rect x="612.6" y="373" width="1.8" height="15.0" fill="rgb(242,22,8)" rx="2" ry="2" />
<text  x="615.63" y="383.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (2 samples, 0.15%)</title><rect x="764.2" y="293" width="1.7" height="15.0" fill="rgb(225,169,16)" rx="2" ry="2" />
<text  x="767.15" y="303.5" ></text>
</g>
<g >
<title>encoding/json.unquoteBytes (1 samples, 0.07%)</title><rect x="315.7" y="341" width="0.8" height="15.0" fill="rgb(248,114,49)" rx="2" ry="2" />
<text  x="318.67" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (2 samples, 0.15%)</title><rect x="253.0" y="325" width="1.7" height="15.0" fill="rgb(224,153,5)" rx="2" ry="2" />
<text  x="255.97" y="335.5" ></text>
</g>
<g >
<title>math/big.getNat (1 samples, 0.07%)</title><rect x="655.3" y="309" width="0.9" height="15.0" fill="rgb(216,38,35)" rx="2" ry="2" />
<text  x="658.30" y="319.5" ></text>
</g>
<g >
<title>syscall.Syscall (14 samples, 1.03%)</title><rect x="733.7" y="325" width="12.2" height="15.0" fill="rgb(226,44,30)" rx="2" ry="2" />
<text  x="736.68" y="335.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.15%)</title><rect x="803.3" y="405" width="1.8" height="15.0" fill="rgb(229,10,35)" rx="2" ry="2" />
<text  x="806.34" y="415.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (3 samples, 0.22%)</title><rect x="265.2" y="261" width="2.6" height="15.0" fill="rgb(241,21,9)" rx="2" ry="2" />
<text  x="268.16" y="271.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.07%)</title><rect x="1022.8" y="341" width="0.9" height="15.0" fill="rgb(238,41,14)" rx="2" ry="2" />
<text  x="1025.80" y="351.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.07%)</title><rect x="853.9" y="341" width="0.8" height="15.0" fill="rgb(241,157,41)" rx="2" ry="2" />
<text  x="856.85" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="770.3" y="405" width="0.8" height="15.0" fill="rgb(235,48,4)" rx="2" ry="2" />
<text  x="773.25" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.07%)</title><rect x="537.7" y="213" width="0.9" height="15.0" fill="rgb(228,75,49)" rx="2" ry="2" />
<text  x="540.73" y="223.5" ></text>
</g>
<g >
<title>fmt.(*pp).printValue (7 samples, 0.52%)</title><rect x="725.8" y="373" width="6.1" height="15.0" fill="rgb(205,91,39)" rx="2" ry="2" />
<text  x="728.84" y="383.5" ></text>
</g>
<g >
<title>runtime.closechan (1 samples, 0.07%)</title><rect x="686.6" y="405" width="0.9" height="15.0" fill="rgb(242,13,37)" rx="2" ry="2" />
<text  x="689.65" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.07%)</title><rect x="14.4" y="325" width="0.8" height="15.0" fill="rgb(228,227,15)" rx="2" ry="2" />
<text  x="17.35" y="335.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Leader).Run (6 samples, 0.44%)</title><rect x="10.0" y="453" width="5.2" height="15.0" fill="rgb(244,0,45)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.07%)</title><rect x="537.7" y="197" width="0.9" height="15.0" fill="rgb(243,51,7)" rx="2" ry="2" />
<text  x="540.73" y="207.5" ></text>
</g>
<g >
<title>runtime.pidleput (1 samples, 0.07%)</title><rect x="1092.5" y="373" width="0.8" height="15.0" fill="rgb(245,124,14)" rx="2" ry="2" />
<text  x="1095.46" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.07%)</title><rect x="23.9" y="213" width="0.9" height="15.0" fill="rgb(230,193,22)" rx="2" ry="2" />
<text  x="26.93" y="223.5" ></text>
</g>
<g >
<title>reflect.copyVal (1 samples, 0.07%)</title><rect x="16.1" y="197" width="0.9" height="15.0" fill="rgb(206,161,35)" rx="2" ry="2" />
<text  x="19.10" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="39.6" y="181" width="0.9" height="15.0" fill="rgb(254,127,7)" rx="2" ry="2" />
<text  x="42.61" y="191.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (2 samples, 0.15%)</title><rect x="859.1" y="405" width="1.7" height="15.0" fill="rgb(233,130,39)" rx="2" ry="2" />
<text  x="862.08" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (3 samples, 0.22%)</title><rect x="23.9" y="341" width="2.6" height="15.0" fill="rgb(220,216,15)" rx="2" ry="2" />
<text  x="26.93" y="351.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.07%)</title><rect x="1171.7" y="453" width="0.9" height="15.0" fill="rgb(229,95,16)" rx="2" ry="2" />
<text  x="1174.71" y="463.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.getDigest2 (1 samples, 0.07%)</title><rect x="27.4" y="357" width="0.9" height="15.0" fill="rgb(233,92,22)" rx="2" ry="2" />
<text  x="30.42" y="367.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*node).spill (1 samples, 0.07%)</title><rect x="18.7" y="341" width="0.9" height="15.0" fill="rgb(214,153,36)" rx="2" ry="2" />
<text  x="21.71" y="351.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (2 samples, 0.15%)</title><rect x="758.1" y="261" width="1.7" height="15.0" fill="rgb(240,56,25)" rx="2" ry="2" />
<text  x="761.06" y="271.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.07%)</title><rect x="854.7" y="373" width="0.9" height="15.0" fill="rgb(248,171,26)" rx="2" ry="2" />
<text  x="857.72" y="383.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.07%)</title><rect x="698.0" y="293" width="0.8" height="15.0" fill="rgb(207,196,17)" rx="2" ry="2" />
<text  x="700.97" y="303.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.22%)</title><rect x="267.8" y="293" width="2.6" height="15.0" fill="rgb(222,56,51)" rx="2" ry="2" />
<text  x="270.77" y="303.5" ></text>
</g>
<g >
<title>encoding/binary.Read (3 samples, 0.22%)</title><rect x="766.8" y="405" width="2.6" height="15.0" fill="rgb(206,103,26)" rx="2" ry="2" />
<text  x="769.77" y="415.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Write (1 samples, 0.07%)</title><rect x="306.1" y="341" width="0.9" height="15.0" fill="rgb(215,204,13)" rx="2" ry="2" />
<text  x="309.09" y="351.5" ></text>
</g>
<g >
<title>runtime.sysmon (110 samples, 8.12%)</title><rect x="1075.9" y="421" width="95.8" height="15.0" fill="rgb(231,182,8)" rx="2" ry="2" />
<text  x="1078.92" y="431.5" >runtime.sys..</text>
</g>
<g >
<title>syscall.Write (1 samples, 0.07%)</title><rect x="12.6" y="341" width="0.9" height="15.0" fill="rgb(211,24,32)" rx="2" ry="2" />
<text  x="15.61" y="351.5" ></text>
</g>
<g >
<title>runtime.spanOfUnchecked (1 samples, 0.07%)</title><rect x="965.3" y="373" width="0.9" height="15.0" fill="rgb(224,4,42)" rx="2" ry="2" />
<text  x="968.32" y="383.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.22%)</title><rect x="334.8" y="293" width="2.6" height="15.0" fill="rgb(207,169,13)" rx="2" ry="2" />
<text  x="337.83" y="303.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.Map (1 samples, 0.07%)</title><rect x="275.6" y="373" width="0.9" height="15.0" fill="rgb(252,11,32)" rx="2" ry="2" />
<text  x="278.61" y="383.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (1 samples, 0.07%)</title><rect x="340.9" y="245" width="0.9" height="15.0" fill="rgb(212,59,8)" rx="2" ry="2" />
<text  x="343.92" y="255.5" ></text>
</g>
<g >
<title>runtime.makeBucketArray (1 samples, 0.07%)</title><rect x="621.3" y="389" width="0.9" height="15.0" fill="rgb(221,52,38)" rx="2" ry="2" />
<text  x="624.34" y="399.5" ></text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.07%)</title><rect x="799.9" y="357" width="0.8" height="15.0" fill="rgb(252,88,19)" rx="2" ry="2" />
<text  x="802.86" y="367.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.07%)</title><rect x="677.9" y="293" width="0.9" height="15.0" fill="rgb(233,18,11)" rx="2" ry="2" />
<text  x="680.94" y="303.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.07%)</title><rect x="303.5" y="245" width="0.8" height="15.0" fill="rgb(225,151,54)" rx="2" ry="2" />
<text  x="306.48" y="255.5" ></text>
</g>
<g >
<title>container/list.(*List).PushBack (1 samples, 0.07%)</title><rect x="303.5" y="325" width="0.8" height="15.0" fill="rgb(248,194,9)" rx="2" ry="2" />
<text  x="306.48" y="335.5" ></text>
</g>
<g >
<title>runtime.procPin (1 samples, 0.07%)</title><rect x="40.5" y="181" width="0.9" height="15.0" fill="rgb(244,129,18)" rx="2" ry="2" />
<text  x="43.48" y="191.5" ></text>
</g>
<g >
<title>reflect.resolveNameOff (1 samples, 0.07%)</title><rect x="313.1" y="181" width="0.8" height="15.0" fill="rgb(239,221,11)" rx="2" ry="2" />
<text  x="316.06" y="191.5" ></text>
</g>
<g >
<title>net.(*conn).Write (1 samples, 0.07%)</title><rect x="12.6" y="389" width="0.9" height="15.0" fill="rgb(246,176,29)" rx="2" ry="2" />
<text  x="15.61" y="399.5" ></text>
</g>
<g >
<title>runtime.evacuate_fast64 (1 samples, 0.07%)</title><rect x="1189.1" y="373" width="0.9" height="15.0" fill="rgb(226,207,10)" rx="2" ry="2" />
<text  x="1192.13" y="383.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).buildIndex (3 samples, 0.22%)</title><rect x="912.2" y="325" width="2.6" height="15.0" fill="rgb(225,7,37)" rx="2" ry="2" />
<text  x="915.20" y="335.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (1 samples, 0.07%)</title><rect x="19.6" y="293" width="0.9" height="15.0" fill="rgb(217,126,9)" rx="2" ry="2" />
<text  x="22.58" y="303.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (2 samples, 0.15%)</title><rect x="764.2" y="309" width="1.7" height="15.0" fill="rgb(214,115,19)" rx="2" ry="2" />
<text  x="767.15" y="319.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.07%)</title><rect x="320.0" y="325" width="0.9" height="15.0" fill="rgb(238,215,26)" rx="2" ry="2" />
<text  x="323.02" y="335.5" ></text>
</g>
<g >
<title>runtime.save (1 samples, 0.07%)</title><rect x="332.2" y="309" width="0.9" height="15.0" fill="rgb(234,42,30)" rx="2" ry="2" />
<text  x="335.21" y="319.5" ></text>
</g>
<g >
<title>math/big.putNat (2 samples, 0.15%)</title><rect x="664.0" y="309" width="1.7" height="15.0" fill="rgb(212,192,12)" rx="2" ry="2" />
<text  x="667.01" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).scanWhile (1 samples, 0.07%)</title><rect x="17.0" y="229" width="0.8" height="15.0" fill="rgb(230,189,35)" rx="2" ry="2" />
<text  x="19.97" y="239.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).ProcessBlockMessage (7 samples, 0.52%)</title><rect x="275.6" y="437" width="6.1" height="15.0" fill="rgb(240,197,46)" rx="2" ry="2" />
<text  x="278.61" y="447.5" ></text>
</g>
<g >
<title>sync.(*entry).load (1 samples, 0.07%)</title><rect x="683.2" y="309" width="0.8" height="15.0" fill="rgb(215,101,53)" rx="2" ry="2" />
<text  x="686.17" y="319.5" ></text>
</g>
<g >
<title>github.com/golang/snappy.encodeBlock (1 samples, 0.07%)</title><rect x="614.4" y="373" width="0.8" height="15.0" fill="rgb(254,42,51)" rx="2" ry="2" />
<text  x="617.37" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.15%)</title><rect x="17.0" y="325" width="1.7" height="15.0" fill="rgb(239,42,45)" rx="2" ry="2" />
<text  x="19.97" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.07%)</title><rect x="262.5" y="165" width="0.9" height="15.0" fill="rgb(229,201,26)" rx="2" ry="2" />
<text  x="265.55" y="175.5" ></text>
</g>
<g >
<title>math/big.nat.make (2 samples, 0.15%)</title><rect x="545.6" y="229" width="1.7" height="15.0" fill="rgb(217,15,32)" rx="2" ry="2" />
<text  x="548.57" y="239.5" ></text>
</g>
<g >
<title>runtime.runqsteal (13 samples, 0.96%)</title><rect x="1025.4" y="389" width="11.3" height="15.0" fill="rgb(235,61,2)" rx="2" ry="2" />
<text  x="1028.41" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (13 samples, 0.96%)</title><rect x="309.6" y="389" width="11.3" height="15.0" fill="rgb(217,162,34)" rx="2" ry="2" />
<text  x="312.57" y="399.5" ></text>
</g>
<g >
<title>syscall.read (49 samples, 3.62%)</title><rect x="812.1" y="373" width="42.6" height="15.0" fill="rgb(238,210,14)" rx="2" ry="2" />
<text  x="815.05" y="383.5" >sysc..</text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.07%)</title><rect x="265.2" y="229" width="0.8" height="15.0" fill="rgb(246,56,24)" rx="2" ry="2" />
<text  x="268.16" y="239.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (24 samples, 1.77%)</title><rect x="282.6" y="357" width="20.9" height="15.0" fill="rgb(236,228,39)" rx="2" ry="2" />
<text  x="285.58" y="367.5" ></text>
</g>
<g >
<title>reflect.(*rtype).PkgPath (1 samples, 0.07%)</title><rect x="316.5" y="309" width="0.9" height="15.0" fill="rgb(223,137,36)" rx="2" ry="2" />
<text  x="319.54" y="319.5" ></text>
</g>
<g >
<title>time.After (8 samples, 0.59%)</title><rect x="756.3" y="437" width="7.0" height="15.0" fill="rgb(243,200,6)" rx="2" ry="2" />
<text  x="759.32" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).removeNode (1 samples, 0.07%)</title><rect x="860.8" y="245" width="0.9" height="15.0" fill="rgb(253,17,11)" rx="2" ry="2" />
<text  x="863.82" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="727.6" y="293" width="0.9" height="15.0" fill="rgb(219,181,9)" rx="2" ry="2" />
<text  x="730.58" y="303.5" ></text>
</g>
<g >
<title>crypto/rsa.SignPKCS1v15 (258 samples, 19.04%)</title><rect x="28.3" y="357" width="224.7" height="15.0" fill="rgb(213,229,31)" rx="2" ry="2" />
<text  x="31.29" y="367.5" >crypto/rsa.SignPKCS1v15</text>
</g>
<g >
<title>runtime.selectgo (1 samples, 0.07%)</title><rect x="22.2" y="373" width="0.9" height="15.0" fill="rgb(213,24,19)" rx="2" ry="2" />
<text  x="25.19" y="383.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (1 samples, 0.07%)</title><rect x="219.9" y="245" width="0.8" height="15.0" fill="rgb(218,205,23)" rx="2" ry="2" />
<text  x="222.87" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.15%)</title><rect x="277.4" y="277" width="1.7" height="15.0" fill="rgb(241,83,2)" rx="2" ry="2" />
<text  x="280.35" y="287.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).Sign (259 samples, 19.11%)</title><rect x="27.4" y="373" width="225.6" height="15.0" fill="rgb(220,98,6)" rx="2" ry="2" />
<text  x="30.42" y="383.5" >BCDns_0.1/certificateAuthorit..</text>
</g>
<g >
<title>internal/poll.(*FD).Read (54 samples, 3.99%)</title><rect x="807.7" y="405" width="47.0" height="15.0" fill="rgb(230,196,0)" rx="2" ry="2" />
<text  x="810.70" y="415.5" >inte..</text>
</g>
<g >
<title>math/big.(*Int).ModInverse (16 samples, 1.18%)</title><rect x="221.6" y="309" width="13.9" height="15.0" fill="rgb(228,180,27)" rx="2" ry="2" />
<text  x="224.62" y="319.5" ></text>
</g>
<g >
<title>syscall.Write (4 samples, 0.30%)</title><rect x="720.6" y="357" width="3.5" height="15.0" fill="rgb(238,108,34)" rx="2" ry="2" />
<text  x="723.61" y="367.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.07%)</title><rect x="966.2" y="421" width="0.9" height="15.0" fill="rgb(227,135,30)" rx="2" ry="2" />
<text  x="969.19" y="431.5" ></text>
</g>
<g >
<title>fmt.(*pp).handleMethods (4 samples, 0.30%)</title><rect x="711.9" y="325" width="3.5" height="15.0" fill="rgb(207,68,14)" rx="2" ry="2" />
<text  x="714.90" y="335.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.07%)</title><rect x="39.6" y="117" width="0.9" height="15.0" fill="rgb(209,61,13)" rx="2" ry="2" />
<text  x="42.61" y="127.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*BlockMessage).VerifySignature (1 samples, 0.07%)</title><rect x="276.5" y="405" width="0.9" height="15.0" fill="rgb(254,51,44)" rx="2" ry="2" />
<text  x="279.48" y="415.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (1 samples, 0.07%)</title><rect x="327.0" y="325" width="0.9" height="15.0" fill="rgb(213,198,14)" rx="2" ry="2" />
<text  x="329.99" y="335.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.07%)</title><rect x="684.9" y="293" width="0.9" height="15.0" fill="rgb(214,211,47)" rx="2" ry="2" />
<text  x="687.91" y="303.5" ></text>
</g>
<g >
<title>crypto/rand.(*devReader).Read (1 samples, 0.07%)</title><rect x="348.8" y="309" width="0.8" height="15.0" fill="rgb(225,161,39)" rx="2" ry="2" />
<text  x="351.76" y="319.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.07%)</title><rect x="326.1" y="293" width="0.9" height="15.0" fill="rgb(212,185,41)" rx="2" ry="2" />
<text  x="329.12" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.07%)</title><rect x="537.7" y="165" width="0.9" height="15.0" fill="rgb(205,78,38)" rx="2" ry="2" />
<text  x="540.73" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="680.6" y="341" width="0.8" height="15.0" fill="rgb(214,52,41)" rx="2" ry="2" />
<text  x="683.55" y="351.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (54 samples, 3.99%)</title><rect x="630.9" y="357" width="47.0" height="15.0" fill="rgb(221,220,35)" rx="2" ry="2" />
<text  x="633.92" y="367.5" >math..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="582.1" y="277" width="0.9" height="15.0" fill="rgb(225,28,9)" rx="2" ry="2" />
<text  x="585.15" y="287.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (5 samples, 0.37%)</title><rect x="216.4" y="277" width="4.3" height="15.0" fill="rgb(251,151,49)" rx="2" ry="2" />
<text  x="219.39" y="287.5" ></text>
</g>
<g >
<title>math/big.nlz (1 samples, 0.07%)</title><rect x="543.8" y="261" width="0.9" height="15.0" fill="rgb(221,15,28)" rx="2" ry="2" />
<text  x="546.83" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.07%)</title><rect x="765.9" y="357" width="0.9" height="15.0" fill="rgb(221,93,43)" rx="2" ry="2" />
<text  x="768.90" y="367.5" ></text>
</g>
<g >
<title>crypto/rsa.VerifyPKCS1v15 (1 samples, 0.07%)</title><rect x="276.5" y="373" width="0.9" height="15.0" fill="rgb(235,41,23)" rx="2" ry="2" />
<text  x="279.48" y="383.5" ></text>
</g>
<g >
<title>net.(*conn).Read (8 samples, 0.59%)</title><rect x="327.9" y="437" width="6.9" height="15.0" fill="rgb(217,167,53)" rx="2" ry="2" />
<text  x="330.86" y="447.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).ValidateMod (32 samples, 2.36%)</title><rect x="281.7" y="421" width="27.9" height="15.0" fill="rgb(245,20,12)" rx="2" ry="2" />
<text  x="284.70" y="431.5" >B..</text>
</g>
<g >
<title>math/big.basicMul (3 samples, 0.22%)</title><rect x="300.9" y="309" width="2.6" height="15.0" fill="rgb(238,85,48)" rx="2" ry="2" />
<text  x="303.86" y="319.5" ></text>
</g>
<g >
<title>fmt.Fprintf (20 samples, 1.48%)</title><rect x="706.7" y="421" width="17.4" height="15.0" fill="rgb(217,14,16)" rx="2" ry="2" />
<text  x="709.68" y="431.5" ></text>
</g>
<g >
<title>syscall.Write (3 samples, 0.22%)</title><rect x="752.8" y="357" width="2.6" height="15.0" fill="rgb(207,64,18)" rx="2" ry="2" />
<text  x="755.83" y="367.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (93 samples, 6.86%)</title><rect x="440.2" y="261" width="81.0" height="15.0" fill="rgb(210,121,33)" rx="2" ry="2" />
<text  x="443.20" y="271.5" >math/big...</text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.07%)</title><rect x="253.0" y="309" width="0.8" height="15.0" fill="rgb(231,2,34)" rx="2" ry="2" />
<text  x="255.97" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).Get (3 samples, 0.22%)</title><rect x="337.4" y="357" width="2.7" height="15.0" fill="rgb(216,208,48)" rx="2" ry="2" />
<text  x="340.44" y="367.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.07%)</title><rect x="863.4" y="277" width="0.9" height="15.0" fill="rgb(252,168,5)" rx="2" ry="2" />
<text  x="866.43" y="287.5" ></text>
</g>
<g >
<title>syscall.Syscall (3 samples, 0.22%)</title><rect x="28.3" y="197" width="2.6" height="15.0" fill="rgb(235,185,8)" rx="2" ry="2" />
<text  x="31.29" y="207.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.07%)</title><rect x="275.6" y="325" width="0.9" height="15.0" fill="rgb(238,60,23)" rx="2" ry="2" />
<text  x="278.61" y="335.5" ></text>
</g>
<g >
<title>runtime.casfrom_Gscanstatus (1 samples, 0.07%)</title><rect x="911.3" y="325" width="0.9" height="15.0" fill="rgb(245,219,5)" rx="2" ry="2" />
<text  x="914.33" y="335.5" ></text>
</g>
<g >
<title>math/big.(*Int).Add (1 samples, 0.07%)</title><rect x="30.9" y="309" width="0.9" height="15.0" fill="rgb(222,161,34)" rx="2" ry="2" />
<text  x="33.90" y="319.5" ></text>
</g>
<g >
<title>runtime.pcvalue (2 samples, 0.15%)</title><rect x="758.1" y="245" width="1.7" height="15.0" fill="rgb(206,132,35)" rx="2" ry="2" />
<text  x="761.06" y="255.5" ></text>
</g>
<g >
<title>runtime._System (6 samples, 0.44%)</title><rect x="882.6" y="453" width="5.2" height="15.0" fill="rgb(247,181,40)" rx="2" ry="2" />
<text  x="885.59" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (3 samples, 0.22%)</title><rect x="907.0" y="325" width="2.6" height="15.0" fill="rgb(251,77,7)" rx="2" ry="2" />
<text  x="909.97" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.07%)</title><rect x="752.0" y="421" width="0.8" height="15.0" fill="rgb(220,11,25)" rx="2" ry="2" />
<text  x="754.96" y="431.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Proposer).timer (14 samples, 1.03%)</title><rect x="751.1" y="453" width="12.2" height="15.0" fill="rgb(213,229,47)" rx="2" ry="2" />
<text  x="754.09" y="463.5" ></text>
</g>
<g >
<title>runtime.notesleep (5 samples, 0.37%)</title><rect x="972.3" y="373" width="4.3" height="15.0" fill="rgb(219,94,30)" rx="2" ry="2" />
<text  x="975.29" y="383.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (1 samples, 0.07%)</title><rect x="249.5" y="245" width="0.9" height="15.0" fill="rgb(211,201,27)" rx="2" ry="2" />
<text  x="252.48" y="255.5" ></text>
</g>
<g >
<title>fmt.(*pp).handleMethods (1 samples, 0.07%)</title><rect x="706.7" y="373" width="0.8" height="15.0" fill="rgb(205,109,47)" rx="2" ry="2" />
<text  x="709.68" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.15%)</title><rect x="581.3" y="309" width="1.7" height="15.0" fill="rgb(244,50,5)" rx="2" ry="2" />
<text  x="584.28" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).init (1 samples, 0.07%)</title><rect x="772.0" y="405" width="0.9" height="15.0" fill="rgb(247,56,32)" rx="2" ry="2" />
<text  x="774.99" y="415.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Leader).generateBlock (6 samples, 0.44%)</title><rect x="10.0" y="437" width="5.2" height="15.0" fill="rgb(215,25,28)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.07%)</title><rect x="802.5" y="373" width="0.8" height="15.0" fill="rgb(249,95,35)" rx="2" ry="2" />
<text  x="805.47" y="383.5" ></text>
</g>
<g >
<title>fmt.Fprintln (25 samples, 1.85%)</title><rect x="724.1" y="421" width="21.8" height="15.0" fill="rgb(216,175,23)" rx="2" ry="2" />
<text  x="727.10" y="431.5" >f..</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="784.2" y="277" width="0.9" height="15.0" fill="rgb(235,121,11)" rx="2" ry="2" />
<text  x="787.18" y="287.5" ></text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode (4 samples, 0.30%)</title><rect x="615.2" y="373" width="3.5" height="15.0" fill="rgb(244,32,52)" rx="2" ry="2" />
<text  x="618.24" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="679.7" y="325" width="0.9" height="15.0" fill="rgb(245,219,3)" rx="2" ry="2" />
<text  x="682.68" y="335.5" ></text>
</g>
<g >
<title>os.(*File).Write (1 samples, 0.07%)</title><rect x="21.3" y="293" width="0.9" height="15.0" fill="rgb(211,30,21)" rx="2" ry="2" />
<text  x="24.32" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (5 samples, 0.37%)</title><rect x="615.2" y="405" width="4.4" height="15.0" fill="rgb(228,32,50)" rx="2" ry="2" />
<text  x="618.24" y="415.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.07%)</title><rect x="271.3" y="309" width="0.8" height="15.0" fill="rgb(218,158,46)" rx="2" ry="2" />
<text  x="274.25" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.div (20 samples, 1.48%)</title><rect x="282.6" y="325" width="17.4" height="15.0" fill="rgb(226,189,42)" rx="2" ry="2" />
<text  x="285.58" y="335.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.07%)</title><rect x="532.5" y="213" width="0.9" height="15.0" fill="rgb(251,84,12)" rx="2" ry="2" />
<text  x="535.51" y="223.5" ></text>
</g>
<g >
<title>runtime.heapBits.bits (1 samples, 0.07%)</title><rect x="962.7" y="373" width="0.9" height="15.0" fill="rgb(225,155,34)" rx="2" ry="2" />
<text  x="965.71" y="383.5" ></text>
</g>
<g >
<title>syscall.Write (1 samples, 0.07%)</title><rect x="21.3" y="245" width="0.9" height="15.0" fill="rgb(245,23,46)" rx="2" ry="2" />
<text  x="24.32" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.15%)</title><rect x="612.6" y="293" width="1.8" height="15.0" fill="rgb(244,17,53)" rx="2" ry="2" />
<text  x="615.63" y="303.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (5 samples, 0.37%)</title><rect x="521.2" y="245" width="4.3" height="15.0" fill="rgb(215,130,34)" rx="2" ry="2" />
<text  x="524.19" y="255.5" ></text>
</g>
<g >
<title>math/big.putNat (2 samples, 0.15%)</title><rect x="294.8" y="293" width="1.7" height="15.0" fill="rgb(205,114,9)" rx="2" ry="2" />
<text  x="297.77" y="303.5" ></text>
</g>
<g >
<title>runtime.epollwait (30 samples, 2.21%)</title><rect x="994.1" y="373" width="26.1" height="15.0" fill="rgb(225,141,5)" rx="2" ry="2" />
<text  x="997.06" y="383.5" >r..</text>
</g>
<g >
<title>crypto/sha256.(*digest).Sum (1 samples, 0.07%)</title><rect x="27.4" y="341" width="0.9" height="15.0" fill="rgb(253,138,21)" rx="2" ry="2" />
<text  x="30.42" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).BroadCast (32 samples, 2.36%)</title><rect x="587.4" y="421" width="27.8" height="15.0" fill="rgb(215,95,22)" rx="2" ry="2" />
<text  x="590.37" y="431.5" >B..</text>
</g>
<g >
<title>encoding/base64.(*Encoding).Encode (1 samples, 0.07%)</title><rect x="273.0" y="309" width="0.9" height="15.0" fill="rgb(242,124,50)" rx="2" ry="2" />
<text  x="276.00" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.07%)</title><rect x="525.5" y="213" width="0.9" height="15.0" fill="rgb(232,45,4)" rx="2" ry="2" />
<text  x="528.54" y="223.5" ></text>
</g>
<g >
<title>math/big.(*Int).Add (1 samples, 0.07%)</title><rect x="537.7" y="309" width="0.9" height="15.0" fill="rgb(214,171,4)" rx="2" ry="2" />
<text  x="540.73" y="319.5" ></text>
</g>
<g >
<title>reflect.Value.MapKeys (1 samples, 0.07%)</title><rect x="617.0" y="325" width="0.9" height="15.0" fill="rgb(210,96,49)" rx="2" ry="2" />
<text  x="619.98" y="335.5" ></text>
</g>
<g >
<title>github.com/golang/snappy.encodeBlock (1 samples, 0.07%)</title><rect x="13.5" y="405" width="0.9" height="15.0" fill="rgb(240,159,21)" rx="2" ry="2" />
<text  x="16.48" y="415.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).putPtr (1 samples, 0.07%)</title><rect x="923.5" y="261" width="0.9" height="15.0" fill="rgb(229,179,44)" rx="2" ry="2" />
<text  x="926.52" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc.func1 (1 samples, 0.07%)</title><rect x="621.3" y="325" width="0.9" height="15.0" fill="rgb(223,217,20)" rx="2" ry="2" />
<text  x="624.34" y="335.5" ></text>
</g>
<g >
<title>reflect.convertOp (1 samples, 0.07%)</title><rect x="316.5" y="325" width="0.9" height="15.0" fill="rgb(214,32,33)" rx="2" ry="2" />
<text  x="319.54" y="335.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (213 samples, 15.72%)</title><rect x="351.4" y="309" width="185.5" height="15.0" fill="rgb(249,67,50)" rx="2" ry="2" />
<text  x="354.37" y="319.5" >math/big.nat.expNN</text>
</g>
<g >
<title>BCDns_0.1/network/service.PackMessage (4 samples, 0.30%)</title><rect x="611.8" y="405" width="3.4" height="15.0" fill="rgb(211,85,33)" rx="2" ry="2" />
<text  x="614.76" y="415.5" ></text>
</g>
<g >
<title>runtime.notesleep (35 samples, 2.58%)</title><rect x="1039.3" y="373" width="30.5" height="15.0" fill="rgb(238,201,1)" rx="2" ry="2" />
<text  x="1042.34" y="383.5" >ru..</text>
</g>
<g >
<title>runtime.ready (2 samples, 0.15%)</title><rect x="1176.1" y="405" width="1.7" height="15.0" fill="rgb(207,14,13)" rx="2" ry="2" />
<text  x="1179.07" y="415.5" ></text>
</g>
<g >
<title>crypto/rsa.decrypt (240 samples, 17.71%)</title><rect x="28.3" y="325" width="209.0" height="15.0" fill="rgb(214,42,32)" rx="2" ry="2" />
<text  x="31.29" y="335.5" >crypto/rsa.decrypt</text>
</g>
<g >
<title>reflect.packEface (4 samples, 0.30%)</title><rect x="716.3" y="293" width="3.4" height="15.0" fill="rgb(238,180,37)" rx="2" ry="2" />
<text  x="719.26" y="303.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.(*Mutex).Unlock (1 samples, 0.07%)</title><rect x="272.1" y="389" width="0.9" height="15.0" fill="rgb(249,194,54)" rx="2" ry="2" />
<text  x="275.13" y="399.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.07%)</title><rect x="21.3" y="213" width="0.9" height="15.0" fill="rgb(218,11,29)" rx="2" ry="2" />
<text  x="24.32" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.07%)</title><rect x="340.9" y="293" width="0.9" height="15.0" fill="rgb(208,144,20)" rx="2" ry="2" />
<text  x="343.92" y="303.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.07%)</title><rect x="862.6" y="309" width="0.8" height="15.0" fill="rgb(206,21,16)" rx="2" ry="2" />
<text  x="865.56" y="319.5" ></text>
</g>
<g >
<title>sync.(*poolChain).popTail (1 samples, 0.07%)</title><rect x="360.1" y="213" width="0.9" height="15.0" fill="rgb(248,45,44)" rx="2" ry="2" />
<text  x="363.08" y="223.5" ></text>
</g>
<g >
<title>math/big.putNat (2 samples, 0.15%)</title><rect x="565.6" y="261" width="1.7" height="15.0" fill="rgb(208,41,43)" rx="2" ry="2" />
<text  x="568.60" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.07%)</title><rect x="347.0" y="357" width="0.9" height="15.0" fill="rgb(251,121,47)" rx="2" ry="2" />
<text  x="350.02" y="367.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.22%)</title><rect x="334.8" y="309" width="2.6" height="15.0" fill="rgb(251,46,27)" rx="2" ry="2" />
<text  x="337.83" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.07%)</title><rect x="262.5" y="133" width="0.9" height="15.0" fill="rgb(253,135,35)" rx="2" ry="2" />
<text  x="265.55" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.07%)</title><rect x="525.5" y="165" width="0.9" height="15.0" fill="rgb(230,123,16)" rx="2" ry="2" />
<text  x="528.54" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.07%)</title><rect x="340.9" y="261" width="0.9" height="15.0" fill="rgb(217,211,5)" rx="2" ry="2" />
<text  x="343.92" y="271.5" ></text>
</g>
<g >
<title>runtime.stringtoslicebyte (1 samples, 0.07%)</title><rect x="23.1" y="405" width="0.8" height="15.0" fill="rgb(222,169,11)" rx="2" ry="2" />
<text  x="26.06" y="415.5" ></text>
</g>
<g >
<title>crypto/subtle.ConstantTimeCompare (1 samples, 0.07%)</title><rect x="678.8" y="389" width="0.9" height="15.0" fill="rgb(211,94,30)" rx="2" ry="2" />
<text  x="681.81" y="399.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock.func1 (4 samples, 0.30%)</title><rect x="23.9" y="389" width="3.5" height="15.0" fill="rgb(250,116,32)" rx="2" ry="2" />
<text  x="26.93" y="399.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (2 samples, 0.15%)</title><rect x="704.9" y="405" width="1.8" height="15.0" fill="rgb(216,145,54)" rx="2" ry="2" />
<text  x="707.94" y="415.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (68 samples, 5.02%)</title><rect x="907.0" y="453" width="59.2" height="15.0" fill="rgb(217,211,3)" rx="2" ry="2" />
<text  x="909.97" y="463.5" >runtim..</text>
</g>
<g >
<title>math/big.getNat (1 samples, 0.07%)</title><rect x="291.3" y="293" width="0.9" height="15.0" fill="rgb(210,174,0)" rx="2" ry="2" />
<text  x="294.28" y="303.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (1 samples, 0.07%)</title><rect x="680.6" y="373" width="0.8" height="15.0" fill="rgb(245,193,20)" rx="2" ry="2" />
<text  x="683.55" y="383.5" ></text>
</g>
<g >
<title>memeqbody (1 samples, 0.07%)</title><rect x="703.2" y="357" width="0.9" height="15.0" fill="rgb(253,46,34)" rx="2" ry="2" />
<text  x="706.20" y="367.5" ></text>
</g>
<g >
<title>encoding/json.stateBeginValue (1 samples, 0.07%)</title><rect x="323.5" y="405" width="0.9" height="15.0" fill="rgb(241,176,30)" rx="2" ry="2" />
<text  x="326.51" y="415.5" ></text>
</g>
<g >
<title>math/big.lehmerSimulate (6 samples, 0.44%)</title><rect x="221.6" y="261" width="5.2" height="15.0" fill="rgb(251,172,23)" rx="2" ry="2" />
<text  x="224.62" y="271.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (3 samples, 0.22%)</title><rect x="752.8" y="373" width="2.6" height="15.0" fill="rgb(242,28,48)" rx="2" ry="2" />
<text  x="755.83" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (20 samples, 1.48%)</title><rect x="864.3" y="357" width="17.4" height="15.0" fill="rgb(243,67,21)" rx="2" ry="2" />
<text  x="867.30" y="367.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (3 samples, 0.22%)</title><rect x="1022.8" y="389" width="2.6" height="15.0" fill="rgb(222,37,22)" rx="2" ry="2" />
<text  x="1025.80" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.montgomery (179 samples, 13.21%)</title><rect x="375.8" y="277" width="155.8" height="15.0" fill="rgb(206,81,24)" rx="2" ry="2" />
<text  x="378.76" y="287.5" >math/big.nat.montgom..</text>
</g>
<g >
<title>runtime.getempty (1 samples, 0.07%)</title><rect x="919.2" y="261" width="0.8" height="15.0" fill="rgb(242,48,26)" rx="2" ry="2" />
<text  x="922.17" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).rotateRight (1 samples, 0.07%)</title><rect x="907.0" y="197" width="0.8" height="15.0" fill="rgb(244,13,24)" rx="2" ry="2" />
<text  x="909.97" y="207.5" ></text>
</g>
<g >
<title>fmt.(*pp).printValue (1 samples, 0.07%)</title><rect x="725.8" y="357" width="0.9" height="15.0" fill="rgb(233,88,26)" rx="2" ry="2" />
<text  x="728.84" y="367.5" ></text>
</g>
<g >
<title>runtime.step (2 samples, 0.15%)</title><rect x="758.1" y="229" width="1.7" height="15.0" fill="rgb(253,201,10)" rx="2" ry="2" />
<text  x="761.06" y="239.5" ></text>
</g>
<g >
<title>math/big.nat.norm (1 samples, 0.07%)</title><rect x="214.6" y="261" width="0.9" height="15.0" fill="rgb(242,212,31)" rx="2" ry="2" />
<text  x="217.65" y="271.5" ></text>
</g>
<g >
<title>math/big.shrVU (1 samples, 0.07%)</title><rect x="56.2" y="229" width="0.8" height="15.0" fill="rgb(221,56,28)" rx="2" ry="2" />
<text  x="59.15" y="239.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (2 samples, 0.15%)</title><rect x="232.9" y="197" width="1.8" height="15.0" fill="rgb(224,214,13)" rx="2" ry="2" />
<text  x="235.94" y="207.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (5 samples, 0.37%)</title><rect x="715.4" y="325" width="4.3" height="15.0" fill="rgb(234,168,26)" rx="2" ry="2" />
<text  x="718.39" y="335.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (1 samples, 0.07%)</title><rect x="324.4" y="405" width="0.8" height="15.0" fill="rgb(246,33,30)" rx="2" ry="2" />
<text  x="327.38" y="415.5" ></text>
</g>
<g >
<title>runtime.selunlock (1 samples, 0.07%)</title><rect x="750.2" y="421" width="0.9" height="15.0" fill="rgb(210,30,2)" rx="2" ry="2" />
<text  x="753.22" y="431.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.15%)</title><rect x="525.5" y="245" width="1.8" height="15.0" fill="rgb(215,139,1)" rx="2" ry="2" />
<text  x="528.54" y="255.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (3 samples, 0.22%)</title><rect x="337.4" y="277" width="2.7" height="15.0" fill="rgb(212,9,0)" rx="2" ry="2" />
<text  x="340.44" y="287.5" ></text>
</g>
<g >
<title>runtime.wirep (1 samples, 0.07%)</title><rect x="988.0" y="373" width="0.8" height="15.0" fill="rgb(234,154,11)" rx="2" ry="2" />
<text  x="990.96" y="383.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (2 samples, 0.15%)</title><rect x="561.2" y="245" width="1.8" height="15.0" fill="rgb(225,0,2)" rx="2" ry="2" />
<text  x="564.25" y="255.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.07%)</title><rect x="349.6" y="261" width="0.9" height="15.0" fill="rgb(252,136,13)" rx="2" ry="2" />
<text  x="352.63" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.22%)</title><rect x="334.8" y="373" width="2.6" height="15.0" fill="rgb(205,78,46)" rx="2" ry="2" />
<text  x="337.83" y="383.5" ></text>
</g>
<g >
<title>fmt.(*fmt).padString (1 samples, 0.07%)</title><rect x="725.0" y="341" width="0.8" height="15.0" fill="rgb(233,59,16)" rx="2" ry="2" />
<text  x="727.97" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.NewProposal (287 samples, 21.18%)</title><rect x="337.4" y="421" width="250.0" height="15.0" fill="rgb(228,60,7)" rx="2" ry="2" />
<text  x="340.44" y="431.5" >BCDns_0.1/messages.NewProposal</text>
</g>
<g >
<title>runtime.pcvalue (3 samples, 0.22%)</title><rect x="920.9" y="245" width="2.6" height="15.0" fill="rgb(231,192,48)" rx="2" ry="2" />
<text  x="923.91" y="255.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).Run (359 samples, 26.49%)</title><rect x="15.2" y="453" width="312.7" height="15.0" fill="rgb(226,146,9)" rx="2" ry="2" />
<text  x="18.23" y="463.5" >BCDns_0.1/consensusMy/service.(*Node).Run</text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.07%)</title><rect x="275.6" y="293" width="0.9" height="15.0" fill="rgb(229,63,47)" rx="2" ry="2" />
<text  x="278.61" y="303.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.07%)</title><rect x="235.5" y="261" width="0.9" height="15.0" fill="rgb(221,224,35)" rx="2" ry="2" />
<text  x="238.55" y="271.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (1 samples, 0.07%)</title><rect x="280.0" y="277" width="0.8" height="15.0" fill="rgb(206,62,49)" rx="2" ry="2" />
<text  x="282.96" y="287.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).pushHead (1 samples, 0.07%)</title><rect x="664.9" y="261" width="0.8" height="15.0" fill="rgb(234,160,21)" rx="2" ry="2" />
<text  x="667.88" y="271.5" ></text>
</g>
<g >
<title>runtime.freedefer (1 samples, 0.07%)</title><rect x="273.9" y="357" width="0.8" height="15.0" fill="rgb(246,112,15)" rx="2" ry="2" />
<text  x="276.87" y="367.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.07%)</title><rect x="264.3" y="229" width="0.9" height="15.0" fill="rgb(234,221,0)" rx="2" ry="2" />
<text  x="267.29" y="239.5" ></text>
</g>
<g >
<title>os.(*File).write (15 samples, 1.11%)</title><rect x="732.8" y="389" width="13.1" height="15.0" fill="rgb(212,188,25)" rx="2" ry="2" />
<text  x="735.80" y="399.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).View (2 samples, 0.15%)</title><rect x="10.0" y="389" width="1.7" height="15.0" fill="rgb(254,197,3)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.setBytes (1 samples, 0.07%)</title><rect x="350.5" y="293" width="0.9" height="15.0" fill="rgb(227,223,47)" rx="2" ry="2" />
<text  x="353.50" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="346.1" y="357" width="0.9" height="15.0" fill="rgb(220,38,7)" rx="2" ry="2" />
<text  x="349.15" y="367.5" ></text>
</g>
<g >
<title>encoding/json.valueEncoder (1 samples, 0.07%)</title><rect x="683.2" y="357" width="0.8" height="15.0" fill="rgb(221,73,52)" rx="2" ry="2" />
<text  x="686.17" y="367.5" ></text>
</g>
<g >
<title>runtime.newarray (1 samples, 0.07%)</title><rect x="621.3" y="373" width="0.9" height="15.0" fill="rgb(243,156,25)" rx="2" ry="2" />
<text  x="624.34" y="383.5" ></text>
</g>
<g >
<title>os.(*File).write (3 samples, 0.22%)</title><rect x="752.8" y="389" width="2.6" height="15.0" fill="rgb(239,69,49)" rx="2" ry="2" />
<text  x="755.83" y="399.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (1 samples, 0.07%)</title><rect x="532.5" y="133" width="0.9" height="15.0" fill="rgb(227,218,54)" rx="2" ry="2" />
<text  x="535.51" y="143.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock.func1 (2 samples, 0.15%)</title><rect x="10.0" y="373" width="1.7" height="15.0" fill="rgb(230,139,35)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.07%)</title><rect x="525.5" y="85" width="0.9" height="15.0" fill="rgb(250,152,7)" rx="2" ry="2" />
<text  x="528.54" y="95.5" ></text>
</g>
<g >
<title>runtime.growWork_fast64 (1 samples, 0.07%)</title><rect x="1189.1" y="389" width="0.9" height="15.0" fill="rgb(238,86,28)" rx="2" ry="2" />
<text  x="1192.13" y="399.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.callers (3 samples, 0.22%)</title><rect x="265.2" y="325" width="2.6" height="15.0" fill="rgb(243,13,24)" rx="2" ry="2" />
<text  x="268.16" y="335.5" ></text>
</g>
<g >
<title>reflect.(*rtype).String (1 samples, 0.07%)</title><rect x="313.1" y="213" width="0.8" height="15.0" fill="rgb(236,179,33)" rx="2" ry="2" />
<text  x="316.06" y="223.5" ></text>
</g>
<g >
<title>os.(*File).WriteAt (1 samples, 0.07%)</title><rect x="19.6" y="357" width="0.9" height="15.0" fill="rgb(215,48,38)" rx="2" ry="2" />
<text  x="22.58" y="367.5" ></text>
</g>
<g >
<title>math/big.(*Int).lehmerGCD (16 samples, 1.18%)</title><rect x="221.6" y="277" width="13.9" height="15.0" fill="rgb(219,168,15)" rx="2" ry="2" />
<text  x="224.62" y="287.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (8 samples, 0.59%)</title><rect x="327.9" y="405" width="6.9" height="15.0" fill="rgb(215,70,27)" rx="2" ry="2" />
<text  x="330.86" y="415.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.07%)</title><rect x="308.7" y="389" width="0.9" height="15.0" fill="rgb(235,218,4)" rx="2" ry="2" />
<text  x="311.70" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (18 samples, 1.33%)</title><rect x="237.3" y="293" width="15.7" height="15.0" fill="rgb(214,66,24)" rx="2" ry="2" />
<text  x="240.29" y="303.5" ></text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.07%)</title><rect x="863.4" y="405" width="0.9" height="15.0" fill="rgb(227,159,39)" rx="2" ry="2" />
<text  x="866.43" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="696.2" y="325" width="0.9" height="15.0" fill="rgb(239,215,45)" rx="2" ry="2" />
<text  x="699.23" y="335.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.15%)</title><rect x="1177.8" y="405" width="1.7" height="15.0" fill="rgb(213,15,1)" rx="2" ry="2" />
<text  x="1180.81" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.07%)</title><rect x="313.9" y="293" width="0.9" height="15.0" fill="rgb(246,111,30)" rx="2" ry="2" />
<text  x="316.93" y="303.5" ></text>
</g>
<g >
<title>math/big.(*Int).Add (4 samples, 0.30%)</title><rect x="226.8" y="245" width="3.5" height="15.0" fill="rgb(219,104,7)" rx="2" ry="2" />
<text  x="229.84" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="525.5" y="133" width="0.9" height="15.0" fill="rgb(233,162,4)" rx="2" ry="2" />
<text  x="528.54" y="143.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.07%)</title><rect x="804.2" y="325" width="0.9" height="15.0" fill="rgb(229,146,18)" rx="2" ry="2" />
<text  x="807.21" y="335.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.07%)</title><rect x="708.4" y="309" width="0.9" height="15.0" fill="rgb(238,154,21)" rx="2" ry="2" />
<text  x="711.42" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (2 samples, 0.15%)</title><rect x="571.7" y="341" width="1.7" height="15.0" fill="rgb(226,187,33)" rx="2" ry="2" />
<text  x="574.70" y="351.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).pushHead (2 samples, 0.15%)</title><rect x="294.8" y="245" width="1.7" height="15.0" fill="rgb(234,51,22)" rx="2" ry="2" />
<text  x="297.77" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (23 samples, 1.70%)</title><rect x="862.6" y="421" width="20.0" height="15.0" fill="rgb(206,82,23)" rx="2" ry="2" />
<text  x="865.56" y="431.5" ></text>
</g>
<g >
<title>runtime.makeslice (23 samples, 1.70%)</title><rect x="862.6" y="437" width="20.0" height="15.0" fill="rgb(252,60,16)" rx="2" ry="2" />
<text  x="865.56" y="447.5" ></text>
</g>
<g >
<title>runtime.goready (2 samples, 0.15%)</title><rect x="1177.8" y="421" width="1.7" height="15.0" fill="rgb(237,63,0)" rx="2" ry="2" />
<text  x="1180.81" y="431.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.15%)</title><rect x="24.8" y="213" width="1.7" height="15.0" fill="rgb(211,197,8)" rx="2" ry="2" />
<text  x="27.80" y="223.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (1 samples, 0.07%)</title><rect x="570.8" y="261" width="0.9" height="15.0" fill="rgb(205,217,14)" rx="2" ry="2" />
<text  x="573.83" y="271.5" ></text>
</g>
<g >
<title>runtime.readvarint (1 samples, 0.07%)</title><rect x="863.4" y="261" width="0.9" height="15.0" fill="rgb(210,70,13)" rx="2" ry="2" />
<text  x="866.43" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="621.3" y="357" width="0.9" height="15.0" fill="rgb(235,123,10)" rx="2" ry="2" />
<text  x="624.34" y="367.5" ></text>
</g>
<g >
<title>encoding/json.valueEncoder (1 samples, 0.07%)</title><rect x="618.7" y="373" width="0.9" height="15.0" fill="rgb(231,225,47)" rx="2" ry="2" />
<text  x="621.72" y="383.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.07%)</title><rect x="679.7" y="341" width="0.9" height="15.0" fill="rgb(250,72,51)" rx="2" ry="2" />
<text  x="682.68" y="351.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.07%)</title><rect x="917.4" y="277" width="0.9" height="15.0" fill="rgb(239,61,1)" rx="2" ry="2" />
<text  x="920.42" y="287.5" ></text>
</g>
<g >
<title>encoding/json.valueEncoder (1 samples, 0.07%)</title><rect x="253.8" y="309" width="0.9" height="15.0" fill="rgb(226,7,1)" rx="2" ry="2" />
<text  x="256.84" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="804.2" y="357" width="0.9" height="15.0" fill="rgb(223,56,43)" rx="2" ry="2" />
<text  x="807.21" y="367.5" ></text>
</g>
<g >
<title>runtime.convT2E (1 samples, 0.07%)</title><rect x="745.9" y="437" width="0.8" height="15.0" fill="rgb(234,38,14)" rx="2" ry="2" />
<text  x="748.87" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.07%)</title><rect x="337.4" y="245" width="0.9" height="15.0" fill="rgb(254,197,27)" rx="2" ry="2" />
<text  x="340.44" y="255.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock (2 samples, 0.15%)</title><rect x="277.4" y="405" width="1.7" height="15.0" fill="rgb(250,186,21)" rx="2" ry="2" />
<text  x="280.35" y="415.5" ></text>
</g>
<g >
<title>encoding/json.cachedTypeFields (1 samples, 0.07%)</title><rect x="10.9" y="277" width="0.8" height="15.0" fill="rgb(252,192,34)" rx="2" ry="2" />
<text  x="13.87" y="287.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (1 samples, 0.07%)</title><rect x="671.0" y="309" width="0.8" height="15.0" fill="rgb(252,128,24)" rx="2" ry="2" />
<text  x="673.97" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.clear (5 samples, 0.37%)</title><rect x="521.2" y="261" width="4.3" height="15.0" fill="rgb(230,147,47)" rx="2" ry="2" />
<text  x="524.19" y="271.5" ></text>
</g>
<g >
<title>syscall.Write (14 samples, 1.03%)</title><rect x="733.7" y="357" width="12.2" height="15.0" fill="rgb(223,72,22)" rx="2" ry="2" />
<text  x="736.68" y="367.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.07%)</title><rect x="343.5" y="341" width="0.9" height="15.0" fill="rgb(248,199,22)" rx="2" ry="2" />
<text  x="346.54" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.07%)</title><rect x="27.4" y="277" width="0.9" height="15.0" fill="rgb(246,106,15)" rx="2" ry="2" />
<text  x="30.42" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.07%)</title><rect x="273.0" y="373" width="0.9" height="15.0" fill="rgb(240,96,24)" rx="2" ry="2" />
<text  x="276.00" y="383.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.07%)</title><rect x="784.2" y="293" width="0.9" height="15.0" fill="rgb(236,120,39)" rx="2" ry="2" />
<text  x="787.18" y="303.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.07%)</title><rect x="212.0" y="229" width="0.9" height="15.0" fill="rgb(241,79,16)" rx="2" ry="2" />
<text  x="215.04" y="239.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (1 samples, 0.07%)</title><rect x="987.1" y="389" width="0.9" height="15.0" fill="rgb(209,53,35)" rx="2" ry="2" />
<text  x="990.09" y="399.5" ></text>
</g>
<g >
<title>runtime.scanblock (2 samples, 0.15%)</title><rect x="925.3" y="325" width="1.7" height="15.0" fill="rgb(231,52,40)" rx="2" ry="2" />
<text  x="928.26" y="335.5" ></text>
</g>
<g >
<title>runtime.futexsleep (34 samples, 2.51%)</title><rect x="1040.2" y="357" width="29.6" height="15.0" fill="rgb(241,35,12)" rx="2" ry="2" />
<text  x="1043.21" y="367.5" >ru..</text>
</g>
<g >
<title>runtime.memequal (1 samples, 0.07%)</title><rect x="793.8" y="341" width="0.8" height="15.0" fill="rgb(211,95,16)" rx="2" ry="2" />
<text  x="796.76" y="351.5" ></text>
</g>
<g >
<title>math/big.nat.add (1 samples, 0.07%)</title><rect x="30.9" y="293" width="0.9" height="15.0" fill="rgb(235,174,37)" rx="2" ry="2" />
<text  x="33.90" y="303.5" ></text>
</g>
<g >
<title>runtime.morestack (1 samples, 0.07%)</title><rect x="1075.0" y="453" width="0.9" height="15.0" fill="rgb(245,88,16)" rx="2" ry="2" />
<text  x="1078.05" y="463.5" ></text>
</g>
<g >
<title>runtime.gentraceback (12 samples, 0.89%)</title><rect x="914.8" y="325" width="10.5" height="15.0" fill="rgb(229,64,19)" rx="2" ry="2" />
<text  x="917.81" y="335.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).Sign (2 samples, 0.15%)</title><rect x="280.0" y="389" width="1.7" height="15.0" fill="rgb(229,164,0)" rx="2" ry="2" />
<text  x="282.96" y="399.5" ></text>
</g>
<g >
<title>encoding/json.cachedTypeFields (7 samples, 0.52%)</title><rect x="785.9" y="357" width="6.1" height="15.0" fill="rgb(228,112,54)" rx="2" ry="2" />
<text  x="788.93" y="367.5" ></text>
</g>
<g >
<title>runtime.convTslice (1 samples, 0.07%)</title><rect x="582.1" y="293" width="0.9" height="15.0" fill="rgb(225,193,25)" rx="2" ry="2" />
<text  x="585.15" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (2 samples, 0.15%)</title><rect x="277.4" y="261" width="1.7" height="15.0" fill="rgb(248,97,29)" rx="2" ry="2" />
<text  x="280.35" y="271.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (57 samples, 4.21%)</title><rect x="805.1" y="421" width="49.6" height="15.0" fill="rgb(221,22,34)" rx="2" ry="2" />
<text  x="808.08" y="431.5" >net.(..</text>
</g>
<g >
<title>math/big.(*Int).Mul (1 samples, 0.07%)</title><rect x="235.5" y="309" width="0.9" height="15.0" fill="rgb(213,98,7)" rx="2" ry="2" />
<text  x="238.55" y="319.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.07%)</title><rect x="863.4" y="325" width="0.9" height="15.0" fill="rgb(237,33,26)" rx="2" ry="2" />
<text  x="866.43" y="335.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (1 samples, 0.07%)</title><rect x="252.1" y="245" width="0.9" height="15.0" fill="rgb(206,96,29)" rx="2" ry="2" />
<text  x="255.10" y="255.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.callers (1 samples, 0.07%)</title><rect x="264.3" y="325" width="0.9" height="15.0" fill="rgb(215,107,1)" rx="2" ry="2" />
<text  x="267.29" y="335.5" ></text>
</g>
<g >
<title>math/big.nat.mul (1 samples, 0.07%)</title><rect x="235.5" y="293" width="0.9" height="15.0" fill="rgb(247,53,29)" rx="2" ry="2" />
<text  x="238.55" y="303.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (26 samples, 1.92%)</title><rect x="589.1" y="373" width="22.7" height="15.0" fill="rgb(211,11,38)" rx="2" ry="2" />
<text  x="592.11" y="383.5" >n..</text>
</g>
<g >
<title>fmt.(*pp).printValue (14 samples, 1.03%)</title><rect x="707.5" y="357" width="12.2" height="15.0" fill="rgb(234,160,5)" rx="2" ry="2" />
<text  x="710.55" y="367.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (1 samples, 0.07%)</title><rect x="347.0" y="341" width="0.9" height="15.0" fill="rgb(221,201,17)" rx="2" ry="2" />
<text  x="350.02" y="351.5" ></text>
</g>
<g >
<title>runtime.memmove (4 samples, 0.30%)</title><rect x="528.2" y="261" width="3.4" height="15.0" fill="rgb(225,148,42)" rx="2" ry="2" />
<text  x="531.15" y="271.5" ></text>
</g>
<g >
<title>runtime.futex (4 samples, 0.30%)</title><rect x="1071.6" y="325" width="3.4" height="15.0" fill="rgb(229,25,27)" rx="2" ry="2" />
<text  x="1074.56" y="335.5" ></text>
</g>
<g >
<title>syscall.Write (9 samples, 0.66%)</title><rect x="254.7" y="325" width="7.8" height="15.0" fill="rgb(246,124,28)" rx="2" ry="2" />
<text  x="257.71" y="335.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Block).VerifyBlock (1 samples, 0.07%)</title><rect x="275.6" y="405" width="0.9" height="15.0" fill="rgb(208,130,43)" rx="2" ry="2" />
<text  x="278.61" y="415.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.07%)</title><rect x="273.0" y="341" width="0.9" height="15.0" fill="rgb(236,168,18)" rx="2" ry="2" />
<text  x="276.00" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).ExecuteBlock (299 samples, 22.07%)</title><rect x="15.2" y="437" width="260.4" height="15.0" fill="rgb(231,156,35)" rx="2" ry="2" />
<text  x="18.23" y="447.5" >BCDns_0.1/consensusMy/service.(*No..</text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.15%)</title><rect x="1177.8" y="309" width="1.7" height="15.0" fill="rgb(220,7,48)" rx="2" ry="2" />
<text  x="1180.81" y="319.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.22%)</title><rect x="267.8" y="277" width="2.6" height="15.0" fill="rgb(246,114,41)" rx="2" ry="2" />
<text  x="270.77" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.15%)</title><rect x="313.1" y="309" width="1.7" height="15.0" fill="rgb(236,225,49)" rx="2" ry="2" />
<text  x="316.06" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="212.0" y="213" width="0.9" height="15.0" fill="rgb(223,92,13)" rx="2" ry="2" />
<text  x="215.04" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).scavengeLocked (1 samples, 0.07%)</title><rect x="262.5" y="101" width="0.9" height="15.0" fill="rgb(210,213,40)" rx="2" ry="2" />
<text  x="265.55" y="111.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*iComparer).Compare (1 samples, 0.07%)</title><rect x="340.1" y="277" width="0.8" height="15.0" fill="rgb(236,15,38)" rx="2" ry="2" />
<text  x="343.05" y="287.5" ></text>
</g>
<g >
<title>context.WithCancel.func1 (1 samples, 0.07%)</title><rect x="686.6" y="437" width="0.9" height="15.0" fill="rgb(239,210,15)" rx="2" ry="2" />
<text  x="689.65" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (2 samples, 0.15%)</title><rect x="612.6" y="357" width="1.8" height="15.0" fill="rgb(242,10,28)" rx="2" ry="2" />
<text  x="615.63" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).erase (1 samples, 0.07%)</title><rect x="860.8" y="261" width="0.9" height="15.0" fill="rgb(235,63,19)" rx="2" ry="2" />
<text  x="863.82" y="271.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.07%)</title><rect x="683.2" y="325" width="0.8" height="15.0" fill="rgb(219,100,44)" rx="2" ry="2" />
<text  x="686.17" y="335.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.07%)</title><rect x="621.3" y="277" width="0.9" height="15.0" fill="rgb(254,150,51)" rx="2" ry="2" />
<text  x="624.34" y="287.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (18 samples, 1.33%)</title><rect x="237.3" y="325" width="15.7" height="15.0" fill="rgb(217,48,20)" rx="2" ry="2" />
<text  x="240.29" y="335.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (2 samples, 0.15%)</title><rect x="713.6" y="277" width="1.8" height="15.0" fill="rgb(206,96,23)" rx="2" ry="2" />
<text  x="716.65" y="287.5" ></text>
</g>
<g >
<title>reflect.Value.OverflowInt (1 samples, 0.07%)</title><rect x="579.5" y="293" width="0.9" height="15.0" fill="rgb(244,58,47)" rx="2" ry="2" />
<text  x="582.54" y="303.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.15%)</title><rect x="990.6" y="389" width="1.7" height="15.0" fill="rgb(247,10,53)" rx="2" ry="2" />
<text  x="993.58" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (16 samples, 1.18%)</title><rect x="556.0" y="277" width="14.0" height="15.0" fill="rgb(211,55,52)" rx="2" ry="2" />
<text  x="559.02" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.15%)</title><rect x="10.0" y="309" width="1.7" height="15.0" fill="rgb(233,137,4)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.mul (1 samples, 0.07%)</title><rect x="570.0" y="293" width="0.8" height="15.0" fill="rgb(242,42,33)" rx="2" ry="2" />
<text  x="572.96" y="303.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.UnMarshalProposalMessage (2 samples, 0.15%)</title><rect x="307.8" y="405" width="1.8" height="15.0" fill="rgb(205,61,40)" rx="2" ry="2" />
<text  x="310.83" y="415.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.07%)</title><rect x="211.2" y="229" width="0.8" height="15.0" fill="rgb(239,21,1)" rx="2" ry="2" />
<text  x="214.17" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="23.1" y="373" width="0.8" height="15.0" fill="rgb(238,110,5)" rx="2" ry="2" />
<text  x="26.06" y="383.5" ></text>
</g>
<g >
<title>net.(*conn).Write (9 samples, 0.66%)</title><rect x="254.7" y="373" width="7.8" height="15.0" fill="rgb(209,153,16)" rx="2" ry="2" />
<text  x="257.71" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (3 samples, 0.22%)</title><rect x="343.5" y="373" width="2.6" height="15.0" fill="rgb(238,88,19)" rx="2" ry="2" />
<text  x="346.54" y="383.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (4 samples, 0.30%)</title><rect x="623.1" y="309" width="3.5" height="15.0" fill="rgb(226,177,43)" rx="2" ry="2" />
<text  x="626.08" y="319.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.PreLock (3 samples, 0.22%)</title><rect x="265.2" y="357" width="2.6" height="15.0" fill="rgb(215,17,51)" rx="2" ry="2" />
<text  x="268.16" y="367.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (1 samples, 0.07%)</title><rect x="16.1" y="229" width="0.9" height="15.0" fill="rgb(250,26,51)" rx="2" ry="2" />
<text  x="19.10" y="239.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.07%)</title><rect x="212.0" y="133" width="0.9" height="15.0" fill="rgb(246,71,40)" rx="2" ry="2" />
<text  x="215.04" y="143.5" ></text>
</g>
<g >
<title>time.stopTimer (1 samples, 0.07%)</title><rect x="270.4" y="341" width="0.9" height="15.0" fill="rgb(242,144,23)" rx="2" ry="2" />
<text  x="273.38" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.15%)</title><rect x="10.0" y="293" width="1.7" height="15.0" fill="rgb(220,176,1)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>math/big.basicMul (1 samples, 0.07%)</title><rect x="671.0" y="325" width="0.8" height="15.0" fill="rgb(210,81,21)" rx="2" ry="2" />
<text  x="673.97" y="335.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.07%)</title><rect x="745.0" y="309" width="0.9" height="15.0" fill="rgb(208,23,4)" rx="2" ry="2" />
<text  x="748.00" y="319.5" ></text>
</g>
<g >
<title>math/big.(*Int).Add (4 samples, 0.30%)</title><rect x="544.7" y="261" width="3.5" height="15.0" fill="rgb(221,182,25)" rx="2" ry="2" />
<text  x="547.70" y="271.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.07%)</title><rect x="264.3" y="213" width="0.9" height="15.0" fill="rgb(245,110,31)" rx="2" ry="2" />
<text  x="267.29" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.15%)</title><rect x="784.2" y="309" width="1.7" height="15.0" fill="rgb(226,100,41)" rx="2" ry="2" />
<text  x="787.18" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.07%)</title><rect x="612.6" y="149" width="0.9" height="15.0" fill="rgb(208,192,28)" rx="2" ry="2" />
<text  x="615.63" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.07%)</title><rect x="612.6" y="277" width="0.9" height="15.0" fill="rgb(220,106,15)" rx="2" ry="2" />
<text  x="615.63" y="287.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.internalKey.ukey (1 samples, 0.07%)</title><rect x="340.1" y="261" width="0.8" height="15.0" fill="rgb(234,167,45)" rx="2" ry="2" />
<text  x="343.05" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.15%)</title><rect x="277.4" y="229" width="1.7" height="15.0" fill="rgb(217,204,19)" rx="2" ry="2" />
<text  x="280.35" y="239.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (13 samples, 0.96%)</title><rect x="774.6" y="357" width="11.3" height="15.0" fill="rgb(236,45,17)" rx="2" ry="2" />
<text  x="777.61" y="367.5" ></text>
</g>
<g >
<title>runtime.chansend1 (7 samples, 0.52%)</title><rect x="854.7" y="437" width="6.1" height="15.0" fill="rgb(205,117,10)" rx="2" ry="2" />
<text  x="857.72" y="447.5" ></text>
</g>
<g >
<title>math/big.subVV (6 samples, 0.44%)</title><rect x="365.3" y="261" width="5.2" height="15.0" fill="rgb(220,197,49)" rx="2" ry="2" />
<text  x="368.31" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (6 samples, 0.44%)</title><rect x="848.6" y="277" width="5.3" height="15.0" fill="rgb(207,77,19)" rx="2" ry="2" />
<text  x="851.63" y="287.5" ></text>
</g>
<g >
<title>runtime.ready (4 samples, 0.30%)</title><rect x="855.6" y="341" width="3.5" height="15.0" fill="rgb(243,221,31)" rx="2" ry="2" />
<text  x="858.59" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (3 samples, 0.22%)</title><rect x="343.5" y="357" width="2.6" height="15.0" fill="rgb(235,120,46)" rx="2" ry="2" />
<text  x="346.54" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.07%)</title><rect x="684.9" y="341" width="0.9" height="15.0" fill="rgb(237,122,5)" rx="2" ry="2" />
<text  x="687.91" y="351.5" ></text>
</g>
<g >
<title>sync.runtime_procPin (1 samples, 0.07%)</title><rect x="562.1" y="213" width="0.9" height="15.0" fill="rgb(242,176,43)" rx="2" ry="2" />
<text  x="565.12" y="223.5" ></text>
</g>
<g >
<title>runtime.futex (4 samples, 0.30%)</title><rect x="623.1" y="293" width="3.5" height="15.0" fill="rgb(242,130,27)" rx="2" ry="2" />
<text  x="626.08" y="303.5" ></text>
</g>
<g >
<title>memeqbody (1 samples, 0.07%)</title><rect x="314.8" y="293" width="0.9" height="15.0" fill="rgb(207,166,34)" rx="2" ry="2" />
<text  x="317.80" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (4 samples, 0.30%)</title><rect x="312.2" y="325" width="3.5" height="15.0" fill="rgb(229,196,7)" rx="2" ry="2" />
<text  x="315.18" y="335.5" ></text>
</g>
<g >
<title>reflect.Value.SetMapIndex (1 samples, 0.07%)</title><rect x="698.0" y="341" width="0.8" height="15.0" fill="rgb(248,183,53)" rx="2" ry="2" />
<text  x="700.97" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.07%)</title><rect x="537.7" y="229" width="0.9" height="15.0" fill="rgb(209,112,2)" rx="2" ry="2" />
<text  x="540.73" y="239.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (19 samples, 1.40%)</title><rect x="687.5" y="421" width="16.6" height="15.0" fill="rgb(239,6,24)" rx="2" ry="2" />
<text  x="690.52" y="431.5" ></text>
</g>
<g >
<title>runtime.mstart1 (110 samples, 8.12%)</title><rect x="1075.9" y="437" width="95.8" height="15.0" fill="rgb(229,24,15)" rx="2" ry="2" />
<text  x="1078.92" y="447.5" >runtime.mst..</text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.07%)</title><rect x="10.9" y="261" width="0.8" height="15.0" fill="rgb(227,190,38)" rx="2" ry="2" />
<text  x="13.87" y="271.5" ></text>
</g>
<g >
<title>reflect.Value.Field (1 samples, 0.07%)</title><rect x="10.0" y="213" width="0.9" height="15.0" fill="rgb(208,120,7)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.07%)</title><rect x="262.5" y="229" width="0.9" height="15.0" fill="rgb(241,53,53)" rx="2" ry="2" />
<text  x="265.55" y="239.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.07%)</title><rect x="264.3" y="245" width="0.9" height="15.0" fill="rgb(251,97,26)" rx="2" ry="2" />
<text  x="267.29" y="255.5" ></text>
</g>
<g >
<title>runtime.mapdelete (1 samples, 0.07%)</title><rect x="272.1" y="341" width="0.9" height="15.0" fill="rgb(230,229,44)" rx="2" ry="2" />
<text  x="275.13" y="351.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollWait (1 samples, 0.07%)</title><rect x="808.6" y="357" width="0.8" height="15.0" fill="rgb(228,222,49)" rx="2" ry="2" />
<text  x="811.57" y="367.5" ></text>
</g>
<g >
<title>fmt.(*pp).printValue (12 samples, 0.89%)</title><rect x="709.3" y="341" width="10.4" height="15.0" fill="rgb(238,51,13)" rx="2" ry="2" />
<text  x="712.29" y="351.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.07%)</title><rect x="23.1" y="357" width="0.8" height="15.0" fill="rgb(251,220,4)" rx="2" ry="2" />
<text  x="26.06" y="367.5" ></text>
</g>
<g >
<title>runtime.ready (2 samples, 0.15%)</title><rect x="325.2" y="341" width="1.8" height="15.0" fill="rgb(220,65,13)" rx="2" ry="2" />
<text  x="328.25" y="351.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.07%)</title><rect x="49.2" y="245" width="0.9" height="15.0" fill="rgb(242,48,34)" rx="2" ry="2" />
<text  x="52.19" y="255.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (36 samples, 2.66%)</title><rect x="772.0" y="421" width="31.3" height="15.0" fill="rgb(240,165,27)" rx="2" ry="2" />
<text  x="774.99" y="431.5" >en..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="14.4" y="389" width="0.8" height="15.0" fill="rgb(240,35,32)" rx="2" ry="2" />
<text  x="17.35" y="399.5" ></text>
</g>
<g >
<title>math/big.getNat (2 samples, 0.15%)</title><rect x="561.2" y="261" width="1.8" height="15.0" fill="rgb(240,123,20)" rx="2" ry="2" />
<text  x="564.25" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.07%)</title><rect x="327.0" y="357" width="0.9" height="15.0" fill="rgb(212,202,41)" rx="2" ry="2" />
<text  x="329.99" y="367.5" ></text>
</g>
<g >
<title>io.ReadFull (3 samples, 0.22%)</title><rect x="766.8" y="389" width="2.6" height="15.0" fill="rgb(237,33,9)" rx="2" ry="2" />
<text  x="769.77" y="399.5" ></text>
</g>
<g >
<title>runtime.largeAlloc (21 samples, 1.55%)</title><rect x="864.3" y="373" width="18.3" height="15.0" fill="rgb(213,22,20)" rx="2" ry="2" />
<text  x="867.30" y="383.5" ></text>
</g>
<g >
<title>reflect.(*rtype).ptrTo (1 samples, 0.07%)</title><rect x="24.8" y="133" width="0.9" height="15.0" fill="rgb(243,28,14)" rx="2" ry="2" />
<text  x="27.80" y="143.5" ></text>
</g>
<g >
<title>runtime.send (3 samples, 0.22%)</title><rect x="334.8" y="405" width="2.6" height="15.0" fill="rgb(233,35,48)" rx="2" ry="2" />
<text  x="337.83" y="415.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (24 samples, 1.77%)</title><rect x="282.6" y="341" width="20.9" height="15.0" fill="rgb(212,199,30)" rx="2" ry="2" />
<text  x="285.58" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Proposer).handleOrder (333 samples, 24.58%)</title><rect x="337.4" y="437" width="290.0" height="15.0" fill="rgb(239,54,23)" rx="2" ry="2" />
<text  x="340.44" y="447.5" >BCDns_0.1/consensusMy/service.(*Propos..</text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.07%)</title><rect x="860.8" y="405" width="0.9" height="15.0" fill="rgb(206,43,24)" rx="2" ry="2" />
<text  x="863.82" y="415.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="262.5" y="181" width="0.9" height="15.0" fill="rgb(219,62,38)" rx="2" ry="2" />
<text  x="265.55" y="191.5" ></text>
</g>
<g >
<title>encoding/json.state1 (2 samples, 0.15%)</title><rect x="799.0" y="389" width="1.7" height="15.0" fill="rgb(244,52,1)" rx="2" ry="2" />
<text  x="801.99" y="399.5" ></text>
</g>
<g >
<title>sync.(*entry).load (1 samples, 0.07%)</title><rect x="253.8" y="261" width="0.9" height="15.0" fill="rgb(208,135,34)" rx="2" ry="2" />
<text  x="256.84" y="271.5" ></text>
</g>
<g >
<title>runtime.futex (4 samples, 0.30%)</title><rect x="855.6" y="261" width="3.5" height="15.0" fill="rgb(226,75,54)" rx="2" ry="2" />
<text  x="858.59" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.07%)</title><rect x="698.0" y="261" width="0.8" height="15.0" fill="rgb(218,209,38)" rx="2" ry="2" />
<text  x="700.97" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.07%)</title><rect x="525.5" y="149" width="0.9" height="15.0" fill="rgb(232,165,12)" rx="2" ry="2" />
<text  x="528.54" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mspan).scavenge (1 samples, 0.07%)</title><rect x="262.5" y="85" width="0.9" height="15.0" fill="rgb(222,208,53)" rx="2" ry="2" />
<text  x="265.55" y="95.5" ></text>
</g>
<g >
<title>syscall.Syscall (3 samples, 0.22%)</title><rect x="752.8" y="325" width="2.6" height="15.0" fill="rgb(239,220,43)" rx="2" ry="2" />
<text  x="755.83" y="335.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.UnMarshalProposalMessage (13 samples, 0.96%)</title><rect x="575.2" y="405" width="11.3" height="15.0" fill="rgb(218,55,48)" rx="2" ry="2" />
<text  x="578.18" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (4 samples, 0.30%)</title><rect x="312.2" y="341" width="3.5" height="15.0" fill="rgb(251,122,26)" rx="2" ry="2" />
<text  x="315.18" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mspan).scavenge (9 samples, 0.66%)</title><rect x="893.0" y="389" width="7.9" height="15.0" fill="rgb(226,219,12)" rx="2" ry="2" />
<text  x="896.04" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).insert (1 samples, 0.07%)</title><rect x="892.2" y="389" width="0.8" height="15.0" fill="rgb(227,122,7)" rx="2" ry="2" />
<text  x="895.17" y="399.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.07%)</title><rect x="730.2" y="341" width="0.9" height="15.0" fill="rgb(217,119,2)" rx="2" ry="2" />
<text  x="733.19" y="351.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).putRec (2 samples, 0.15%)</title><rect x="21.3" y="389" width="1.8" height="15.0" fill="rgb(248,22,42)" rx="2" ry="2" />
<text  x="24.32" y="399.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtInteger (1 samples, 0.07%)</title><rect x="725.8" y="325" width="0.9" height="15.0" fill="rgb(249,46,29)" rx="2" ry="2" />
<text  x="728.84" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mspan).hugePages (1 samples, 0.07%)</title><rect x="892.2" y="341" width="0.8" height="15.0" fill="rgb(236,188,26)" rx="2" ry="2" />
<text  x="895.17" y="351.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.07%)</title><rect x="769.4" y="405" width="0.9" height="15.0" fill="rgb(208,229,24)" rx="2" ry="2" />
<text  x="772.38" y="415.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.15%)</title><rect x="268.6" y="245" width="1.8" height="15.0" fill="rgb(252,82,6)" rx="2" ry="2" />
<text  x="271.64" y="255.5" ></text>
</g>
<g >
<title>math/big.nat.montgomery (181 samples, 13.36%)</title><rect x="57.0" y="261" width="157.6" height="15.0" fill="rgb(216,15,43)" rx="2" ry="2" />
<text  x="60.03" y="271.5" >math/big.nat.montgom..</text>
</g>
<g >
<title>math/big.addMulVVW (2 samples, 0.15%)</title><rect x="301.7" y="293" width="1.8" height="15.0" fill="rgb(207,95,14)" rx="2" ry="2" />
<text  x="304.73" y="303.5" ></text>
</g>
<g >
<title>encoding/base64.(*Encoding).EncodedLen (1 samples, 0.07%)</title><rect x="616.1" y="325" width="0.9" height="15.0" fill="rgb(209,150,32)" rx="2" ry="2" />
<text  x="619.11" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (25 samples, 1.85%)</title><rect x="772.9" y="405" width="21.7" height="15.0" fill="rgb(247,75,15)" rx="2" ry="2" />
<text  x="775.86" y="415.5" >e..</text>
</g>
<g >
<title>runtime.getitab (3 samples, 0.22%)</title><rect x="712.8" y="293" width="2.6" height="15.0" fill="rgb(222,210,49)" rx="2" ry="2" />
<text  x="715.77" y="303.5" ></text>
</g>
<g >
<title>runtime.newproc1 (6 samples, 0.44%)</title><rect x="622.2" y="373" width="5.2" height="15.0" fill="rgb(216,93,6)" rx="2" ry="2" />
<text  x="625.21" y="383.5" ></text>
</g>
<g >
<title>memeqbody (1 samples, 0.07%)</title><rect x="792.9" y="341" width="0.9" height="15.0" fill="rgb(245,1,16)" rx="2" ry="2" />
<text  x="795.89" y="351.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.07%)</title><rect x="784.2" y="261" width="0.9" height="15.0" fill="rgb(241,61,47)" rx="2" ry="2" />
<text  x="787.18" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).scanWhile (1 samples, 0.07%)</title><rect x="576.1" y="325" width="0.8" height="15.0" fill="rgb(243,32,15)" rx="2" ry="2" />
<text  x="579.05" y="335.5" ></text>
</g>
<g >
<title>math/big.(*Int).SetBytes (1 samples, 0.07%)</title><rect x="350.5" y="309" width="0.9" height="15.0" fill="rgb(237,34,4)" rx="2" ry="2" />
<text  x="353.50" y="319.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (1 samples, 0.07%)</title><rect x="1075.0" y="373" width="0.9" height="15.0" fill="rgb(231,192,39)" rx="2" ry="2" />
<text  x="1078.05" y="383.5" ></text>
</g>
<g >
<title>runtime.isSystemGoroutine (1 samples, 0.07%)</title><rect x="622.2" y="357" width="0.9" height="15.0" fill="rgb(220,213,54)" rx="2" ry="2" />
<text  x="625.21" y="367.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.07%)</title><rect x="802.5" y="405" width="0.8" height="15.0" fill="rgb(226,146,33)" rx="2" ry="2" />
<text  x="805.47" y="415.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.07%)</title><rect x="565.6" y="229" width="0.9" height="15.0" fill="rgb(211,113,54)" rx="2" ry="2" />
<text  x="568.60" y="239.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (2 samples, 0.15%)</title><rect x="280.0" y="325" width="1.7" height="15.0" fill="rgb(208,179,30)" rx="2" ry="2" />
<text  x="282.96" y="335.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (18 samples, 1.33%)</title><rect x="309.6" y="437" width="15.6" height="15.0" fill="rgb(221,21,13)" rx="2" ry="2" />
<text  x="312.57" y="447.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.UnpackMessage (39 samples, 2.88%)</title><rect x="771.1" y="437" width="34.0" height="15.0" fill="rgb(218,223,3)" rx="2" ry="2" />
<text  x="774.12" y="447.5" >BC..</text>
</g>
<g >
<title>sort.insertionSort (1 samples, 0.07%)</title><rect x="731.1" y="309" width="0.8" height="15.0" fill="rgb(215,216,39)" rx="2" ry="2" />
<text  x="734.06" y="319.5" ></text>
</g>
<g >
<title>reflect.DeepEqual (1 samples, 0.07%)</title><rect x="279.1" y="389" width="0.9" height="15.0" fill="rgb(246,5,9)" rx="2" ry="2" />
<text  x="282.09" y="399.5" ></text>
</g>
<g >
<title>math/big.(*Int).GCD (16 samples, 1.18%)</title><rect x="221.6" y="293" width="13.9" height="15.0" fill="rgb(244,170,43)" rx="2" ry="2" />
<text  x="224.62" y="303.5" ></text>
</g>
<g >
<title>runtime.selectgo (1 samples, 0.07%)</title><rect x="755.4" y="437" width="0.9" height="15.0" fill="rgb(248,43,9)" rx="2" ry="2" />
<text  x="758.45" y="447.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (1 samples, 0.07%)</title><rect x="220.7" y="261" width="0.9" height="15.0" fill="rgb(205,218,31)" rx="2" ry="2" />
<text  x="223.75" y="271.5" ></text>
</g>
<g >
<title>sync.runtime_procUnpin (1 samples, 0.07%)</title><rect x="291.3" y="261" width="0.9" height="15.0" fill="rgb(247,42,21)" rx="2" ry="2" />
<text  x="294.28" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.07%)</title><rect x="313.1" y="261" width="0.8" height="15.0" fill="rgb(226,27,32)" rx="2" ry="2" />
<text  x="316.06" y="271.5" ></text>
</g>
<g >
<title>bytes.NewBuffer (4 samples, 0.30%)</title><rect x="763.3" y="405" width="3.5" height="15.0" fill="rgb(239,160,42)" rx="2" ry="2" />
<text  x="766.28" y="415.5" ></text>
</g>
<g >
<title>runtime.stopm (39 samples, 2.88%)</title><rect x="1036.7" y="389" width="34.0" height="15.0" fill="rgb(242,124,7)" rx="2" ry="2" />
<text  x="1039.73" y="399.5" >ru..</text>
</g>
<g >
<title>internal/fmtsort.Sort (6 samples, 0.44%)</title><rect x="726.7" y="357" width="5.2" height="15.0" fill="rgb(205,2,51)" rx="2" ry="2" />
<text  x="729.71" y="367.5" ></text>
</g>
<g >
<title>math/big.greaterThan (1 samples, 0.07%)</title><rect x="41.4" y="245" width="0.8" height="15.0" fill="rgb(226,176,39)" rx="2" ry="2" />
<text  x="44.35" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (19 samples, 1.40%)</title><rect x="687.5" y="405" width="16.6" height="15.0" fill="rgb(242,220,32)" rx="2" ry="2" />
<text  x="690.52" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mheap).scavengeIfNeededLocked (1 samples, 0.07%)</title><rect x="262.5" y="117" width="0.9" height="15.0" fill="rgb(248,71,49)" rx="2" ry="2" />
<text  x="265.55" y="127.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (10 samples, 0.74%)</title><rect x="691.9" y="373" width="8.7" height="15.0" fill="rgb(217,8,26)" rx="2" ry="2" />
<text  x="694.87" y="383.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.07%)</title><rect x="908.7" y="293" width="0.9" height="15.0" fill="rgb(231,147,49)" rx="2" ry="2" />
<text  x="911.72" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.22%)</title><rect x="267.8" y="341" width="2.6" height="15.0" fill="rgb(250,36,28)" rx="2" ry="2" />
<text  x="270.77" y="351.5" ></text>
</g>
<g >
<title>runtime.futexsleep (6 samples, 0.44%)</title><rect x="1183.9" y="405" width="5.2" height="15.0" fill="rgb(254,76,23)" rx="2" ry="2" />
<text  x="1186.90" y="415.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).waitRead (2 samples, 0.15%)</title><rect x="807.7" y="389" width="1.7" height="15.0" fill="rgb(250,155,29)" rx="2" ry="2" />
<text  x="810.70" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.07%)</title><rect x="860.8" y="277" width="0.9" height="15.0" fill="rgb(249,93,8)" rx="2" ry="2" />
<text  x="863.82" y="287.5" ></text>
</g>
<g >
<title>crypto/rsa.decryptAndCheck (258 samples, 19.04%)</title><rect x="28.3" y="341" width="224.7" height="15.0" fill="rgb(235,10,34)" rx="2" ry="2" />
<text  x="31.29" y="351.5" >crypto/rsa.decryptAndCheck</text>
</g>
<g >
<title>math/big.nat.expNNMontgomery (1 samples, 0.07%)</title><rect x="280.8" y="293" width="0.9" height="15.0" fill="rgb(240,1,12)" rx="2" ry="2" />
<text  x="283.83" y="303.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.07%)</title><rect x="1069.8" y="373" width="0.9" height="15.0" fill="rgb(229,178,45)" rx="2" ry="2" />
<text  x="1072.82" y="383.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (2 samples, 0.15%)</title><rect x="15.2" y="293" width="1.8" height="15.0" fill="rgb(234,53,9)" rx="2" ry="2" />
<text  x="18.23" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.07%)</title><rect x="860.8" y="309" width="0.9" height="15.0" fill="rgb(243,50,30)" rx="2" ry="2" />
<text  x="863.82" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).SendTo (21 samples, 1.55%)</title><rect x="254.7" y="405" width="18.3" height="15.0" fill="rgb(239,99,51)" rx="2" ry="2" />
<text  x="257.71" y="415.5" ></text>
</g>
<g >
<title>runtime.entersyscall (3 samples, 0.22%)</title><rect x="332.2" y="341" width="2.6" height="15.0" fill="rgb(225,223,39)" rx="2" ry="2" />
<text  x="335.21" y="351.5" ></text>
</g>
<g >
<title>runtime.sysUnused (9 samples, 0.66%)</title><rect x="893.0" y="373" width="7.9" height="15.0" fill="rgb(208,181,53)" rx="2" ry="2" />
<text  x="896.04" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.07%)</title><rect x="752.0" y="405" width="0.8" height="15.0" fill="rgb(254,167,31)" rx="2" ry="2" />
<text  x="754.96" y="415.5" ></text>
</g>
<g >
<title>net.(*conn).Read (57 samples, 4.21%)</title><rect x="805.1" y="437" width="49.6" height="15.0" fill="rgb(239,111,47)" rx="2" ry="2" />
<text  x="808.08" y="447.5" >net.(..</text>
</g>
<g >
<title>runtime.wakep (5 samples, 0.37%)</title><rect x="623.1" y="357" width="4.3" height="15.0" fill="rgb(234,88,32)" rx="2" ry="2" />
<text  x="626.08" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.07%)</title><rect x="536.0" y="229" width="0.9" height="15.0" fill="rgb(250,77,27)" rx="2" ry="2" />
<text  x="538.99" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.07%)</title><rect x="680.6" y="309" width="0.8" height="15.0" fill="rgb(211,78,45)" rx="2" ry="2" />
<text  x="683.55" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.mulAddWW (4 samples, 0.30%)</title><rect x="231.2" y="213" width="3.5" height="15.0" fill="rgb(217,170,5)" rx="2" ry="2" />
<text  x="234.20" y="223.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.07%)</title><rect x="762.4" y="405" width="0.9" height="15.0" fill="rgb(230,185,3)" rx="2" ry="2" />
<text  x="765.41" y="415.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Hash (2 samples, 0.15%)</title><rect x="306.1" y="405" width="1.7" height="15.0" fill="rgb(239,212,30)" rx="2" ry="2" />
<text  x="309.09" y="415.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.07%)</title><rect x="863.4" y="373" width="0.9" height="15.0" fill="rgb(209,64,38)" rx="2" ry="2" />
<text  x="866.43" y="383.5" ></text>
</g>
<g >
<title>runtime.greyobject (11 samples, 0.81%)</title><rect x="953.1" y="373" width="9.6" height="15.0" fill="rgb(212,117,0)" rx="2" ry="2" />
<text  x="956.13" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.07%)</title><rect x="860.8" y="293" width="0.9" height="15.0" fill="rgb(209,148,8)" rx="2" ry="2" />
<text  x="863.82" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.15%)</title><rect x="333.1" y="309" width="1.7" height="15.0" fill="rgb(237,117,7)" rx="2" ry="2" />
<text  x="336.08" y="319.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (24 samples, 1.77%)</title><rect x="282.6" y="373" width="20.9" height="15.0" fill="rgb(252,68,23)" rx="2" ry="2" />
<text  x="285.58" y="383.5" ></text>
</g>
<g >
<title>math/big.basicMul (1 samples, 0.07%)</title><rect x="570.0" y="277" width="0.8" height="15.0" fill="rgb(245,187,5)" rx="2" ry="2" />
<text  x="572.96" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="536.0" y="149" width="0.9" height="15.0" fill="rgb(245,119,13)" rx="2" ry="2" />
<text  x="538.99" y="159.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (18 samples, 1.33%)</title><rect x="556.0" y="325" width="15.7" height="15.0" fill="rgb(237,181,18)" rx="2" ry="2" />
<text  x="559.02" y="335.5" ></text>
</g>
<g >
<title>runtime.futex (6 samples, 0.44%)</title><rect x="1183.9" y="389" width="5.2" height="15.0" fill="rgb(214,209,39)" rx="2" ry="2" />
<text  x="1186.90" y="399.5" ></text>
</g>
<g >
<title>crypto/rand.(*devReader).Read (1 samples, 0.07%)</title><rect x="349.6" y="277" width="0.9" height="15.0" fill="rgb(206,218,53)" rx="2" ry="2" />
<text  x="352.63" y="287.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.07%)</title><rect x="20.5" y="389" width="0.8" height="15.0" fill="rgb(250,194,38)" rx="2" ry="2" />
<text  x="23.45" y="399.5" ></text>
</g>
<g >
<title>syscall.Syscall (9 samples, 0.66%)</title><rect x="254.7" y="293" width="7.8" height="15.0" fill="rgb(205,82,31)" rx="2" ry="2" />
<text  x="257.71" y="303.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (3 samples, 0.22%)</title><rect x="250.4" y="277" width="2.6" height="15.0" fill="rgb(216,207,47)" rx="2" ry="2" />
<text  x="253.35" y="287.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (3 samples, 0.22%)</title><rect x="533.4" y="261" width="2.6" height="15.0" fill="rgb(236,179,45)" rx="2" ry="2" />
<text  x="536.38" y="271.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (2 samples, 0.15%)</title><rect x="620.5" y="421" width="1.7" height="15.0" fill="rgb(245,152,41)" rx="2" ry="2" />
<text  x="623.46" y="431.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (2 samples, 0.15%)</title><rect x="294.8" y="261" width="1.7" height="15.0" fill="rgb(231,206,5)" rx="2" ry="2" />
<text  x="297.77" y="271.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (6 samples, 0.44%)</title><rect x="681.4" y="405" width="5.2" height="15.0" fill="rgb(248,85,34)" rx="2" ry="2" />
<text  x="684.42" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (5 samples, 0.37%)</title><rect x="865.2" y="325" width="4.3" height="15.0" fill="rgb(236,69,14)" rx="2" ry="2" />
<text  x="868.17" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.15%)</title><rect x="277.4" y="309" width="1.7" height="15.0" fill="rgb(206,118,11)" rx="2" ry="2" />
<text  x="280.35" y="319.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (9 samples, 0.66%)</title><rect x="794.6" y="405" width="7.9" height="15.0" fill="rgb(249,48,33)" rx="2" ry="2" />
<text  x="797.63" y="415.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.07%)</title><rect x="39.6" y="133" width="0.9" height="15.0" fill="rgb(214,114,29)" rx="2" ry="2" />
<text  x="42.61" y="143.5" ></text>
</g>
<g >
<title>runtime.futex (6 samples, 0.44%)</title><rect x="848.6" y="245" width="5.3" height="15.0" fill="rgb(230,104,29)" rx="2" ry="2" />
<text  x="851.63" y="255.5" ></text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.15%)</title><rect x="212.9" y="245" width="1.7" height="15.0" fill="rgb(240,202,49)" rx="2" ry="2" />
<text  x="215.91" y="255.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.07%)</title><rect x="684.0" y="373" width="0.9" height="15.0" fill="rgb(254,187,9)" rx="2" ry="2" />
<text  x="687.04" y="383.5" ></text>
</g>
<g >
<title>math/big.getNat (1 samples, 0.07%)</title><rect x="360.1" y="261" width="0.9" height="15.0" fill="rgb(211,145,27)" rx="2" ry="2" />
<text  x="363.08" y="271.5" ></text>
</g>
<g >
<title>math/big.nlz (1 samples, 0.07%)</title><rect x="45.7" y="245" width="0.9" height="15.0" fill="rgb(226,73,0)" rx="2" ry="2" />
<text  x="48.70" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="684.9" y="357" width="0.9" height="15.0" fill="rgb(244,153,43)" rx="2" ry="2" />
<text  x="687.91" y="367.5" ></text>
</g>
<g >
<title>math/big.nat.div (22 samples, 1.62%)</title><rect x="351.4" y="293" width="19.1" height="15.0" fill="rgb(221,214,46)" rx="2" ry="2" />
<text  x="354.37" y="303.5" ></text>
</g>
<g >
<title>runtime/pprof.profileWriter (1 samples, 0.07%)</title><rect x="1189.1" y="453" width="0.9" height="15.0" fill="rgb(254,30,5)" rx="2" ry="2" />
<text  x="1192.13" y="463.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.07%)</title><rect x="978.4" y="373" width="0.9" height="15.0" fill="rgb(218,222,40)" rx="2" ry="2" />
<text  x="981.38" y="383.5" ></text>
</g>
<g >
<title>syscall.write (1 samples, 0.07%)</title><rect x="12.6" y="325" width="0.9" height="15.0" fill="rgb(205,128,21)" rx="2" ry="2" />
<text  x="15.61" y="335.5" ></text>
</g>
<g >
<title>runtime.addtimer (1 samples, 0.07%)</title><rect x="271.3" y="325" width="0.8" height="15.0" fill="rgb(237,183,0)" rx="2" ry="2" />
<text  x="274.25" y="335.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (7 samples, 0.52%)</title><rect x="785.9" y="341" width="6.1" height="15.0" fill="rgb(217,19,43)" rx="2" ry="2" />
<text  x="788.93" y="351.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.15%)</title><rect x="889.6" y="373" width="1.7" height="15.0" fill="rgb(218,190,29)" rx="2" ry="2" />
<text  x="892.56" y="383.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Sum (2 samples, 0.15%)</title><rect x="628.3" y="389" width="1.7" height="15.0" fill="rgb(237,21,19)" rx="2" ry="2" />
<text  x="631.30" y="399.5" ></text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.07%)</title><rect x="704.1" y="405" width="0.8" height="15.0" fill="rgb(239,135,7)" rx="2" ry="2" />
<text  x="707.07" y="415.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (3 samples, 0.22%)</title><rect x="920.9" y="261" width="2.6" height="15.0" fill="rgb(254,60,36)" rx="2" ry="2" />
<text  x="923.91" y="271.5" ></text>
</g>
<g >
<title>runtime.findrunnable (2 samples, 0.15%)</title><rect x="978.4" y="389" width="1.7" height="15.0" fill="rgb(226,63,37)" rx="2" ry="2" />
<text  x="981.38" y="399.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (1 samples, 0.07%)</title><rect x="349.6" y="293" width="0.9" height="15.0" fill="rgb(238,127,35)" rx="2" ry="2" />
<text  x="352.63" y="303.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.07%)</title><rect x="266.9" y="213" width="0.9" height="15.0" fill="rgb(241,68,48)" rx="2" ry="2" />
<text  x="269.90" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.07%)</title><rect x="307.8" y="341" width="0.9" height="15.0" fill="rgb(234,165,35)" rx="2" ry="2" />
<text  x="310.83" y="351.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.07%)</title><rect x="303.5" y="229" width="0.8" height="15.0" fill="rgb(249,209,27)" rx="2" ry="2" />
<text  x="306.48" y="239.5" ></text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode (1 samples, 0.07%)</title><rect x="752.0" y="389" width="0.8" height="15.0" fill="rgb(211,182,14)" rx="2" ry="2" />
<text  x="754.96" y="399.5" ></text>
</g>
<g >
<title>encoding/json.encodeByteSlice (1 samples, 0.07%)</title><rect x="262.5" y="309" width="0.9" height="15.0" fill="rgb(208,102,41)" rx="2" ry="2" />
<text  x="265.55" y="319.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (1 samples, 0.07%)</title><rect x="919.2" y="245" width="0.8" height="15.0" fill="rgb(217,100,7)" rx="2" ry="2" />
<text  x="922.17" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.07%)</title><rect x="307.8" y="357" width="0.9" height="15.0" fill="rgb(214,204,8)" rx="2" ry="2" />
<text  x="310.83" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="532.5" y="229" width="0.9" height="15.0" fill="rgb(213,220,45)" rx="2" ry="2" />
<text  x="535.51" y="239.5" ></text>
</g>
<g >
<title>runtime.jmpdefer (1 samples, 0.07%)</title><rect x="810.3" y="389" width="0.9" height="15.0" fill="rgb(234,6,28)" rx="2" ry="2" />
<text  x="813.31" y="399.5" ></text>
</g>
<g >
<title>encoding/json.stateBeginString (1 samples, 0.07%)</title><rect x="337.4" y="133" width="0.9" height="15.0" fill="rgb(224,214,44)" rx="2" ry="2" />
<text  x="340.44" y="143.5" ></text>
</g>
<g >
<title>runtime.goready (2 samples, 0.15%)</title><rect x="325.2" y="389" width="1.8" height="15.0" fill="rgb(221,99,4)" rx="2" ry="2" />
<text  x="328.25" y="399.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.07%)</title><rect x="346.1" y="373" width="0.9" height="15.0" fill="rgb(210,111,28)" rx="2" ry="2" />
<text  x="349.15" y="383.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.07%)</title><rect x="582.1" y="261" width="0.9" height="15.0" fill="rgb(210,153,42)" rx="2" ry="2" />
<text  x="585.15" y="271.5" ></text>
</g>
<g >
<title>runtime.aeshashstr (1 samples, 0.07%)</title><rect x="748.5" y="421" width="0.9" height="15.0" fill="rgb(209,70,9)" rx="2" ry="2" />
<text  x="751.48" y="431.5" ></text>
</g>
<g >
<title>runtime.wakep (4 samples, 0.30%)</title><rect x="1071.6" y="389" width="3.4" height="15.0" fill="rgb(208,29,3)" rx="2" ry="2" />
<text  x="1074.56" y="399.5" ></text>
</g>
<g >
<title>reflect.Value.Call (1 samples, 0.07%)</title><rect x="275.6" y="357" width="0.9" height="15.0" fill="rgb(218,29,53)" rx="2" ry="2" />
<text  x="278.61" y="367.5" ></text>
</g>
<g >
<title>crypto/rsa.VerifyPKCS1v15 (57 samples, 4.21%)</title><rect x="630.9" y="405" width="49.7" height="15.0" fill="rgb(230,99,52)" rx="2" ry="2" />
<text  x="633.92" y="415.5" >crypt..</text>
</g>
<g >
<title>runtime.newobject (7 samples, 0.52%)</title><rect x="756.3" y="389" width="6.1" height="15.0" fill="rgb(211,191,44)" rx="2" ry="2" />
<text  x="759.32" y="399.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (9 samples, 0.66%)</title><rect x="254.7" y="341" width="7.8" height="15.0" fill="rgb(252,153,31)" rx="2" ry="2" />
<text  x="257.71" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.07%)</title><rect x="10.0" y="245" width="0.9" height="15.0" fill="rgb(240,72,45)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.07%)</title><rect x="537.7" y="261" width="0.9" height="15.0" fill="rgb(228,37,29)" rx="2" ry="2" />
<text  x="540.73" y="271.5" ></text>
</g>
<g >
<title>runtime.newproc (3 samples, 0.22%)</title><rect x="267.8" y="357" width="2.6" height="15.0" fill="rgb(247,39,5)" rx="2" ry="2" />
<text  x="270.77" y="367.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.15%)</title><rect x="545.6" y="213" width="1.7" height="15.0" fill="rgb(216,64,20)" rx="2" ry="2" />
<text  x="548.57" y="223.5" ></text>
</g>
<g >
<title>fmt.(*pp).printValue (14 samples, 1.03%)</title><rect x="707.5" y="373" width="12.2" height="15.0" fill="rgb(249,129,45)" rx="2" ry="2" />
<text  x="710.55" y="383.5" ></text>
</g>
<g >
<title>runtime.assertE2I2 (1 samples, 0.07%)</title><rect x="708.4" y="325" width="0.9" height="15.0" fill="rgb(208,161,46)" rx="2" ry="2" />
<text  x="711.42" y="335.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (3 samples, 0.22%)</title><rect x="273.0" y="405" width="2.6" height="15.0" fill="rgb(215,86,28)" rx="2" ry="2" />
<text  x="276.00" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.07%)</title><rect x="262.5" y="197" width="0.9" height="15.0" fill="rgb(213,168,17)" rx="2" ry="2" />
<text  x="265.55" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.07%)</title><rect x="308.7" y="341" width="0.9" height="15.0" fill="rgb(233,82,35)" rx="2" ry="2" />
<text  x="311.70" y="351.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (2 samples, 0.15%)</title><rect x="681.4" y="357" width="1.8" height="15.0" fill="rgb(221,90,30)" rx="2" ry="2" />
<text  x="684.42" y="367.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (4 samples, 0.30%)</title><rect x="533.4" y="293" width="3.5" height="15.0" fill="rgb(219,95,8)" rx="2" ry="2" />
<text  x="536.38" y="303.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*Bucket).spill (1 samples, 0.07%)</title><rect x="18.7" y="373" width="0.9" height="15.0" fill="rgb(209,175,32)" rx="2" ry="2" />
<text  x="21.71" y="383.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.07%)</title><rect x="804.2" y="341" width="0.9" height="15.0" fill="rgb(205,39,31)" rx="2" ry="2" />
<text  x="807.21" y="351.5" ></text>
</g>
<g >
<title>math/big.shrVU (1 samples, 0.07%)</title><rect x="567.3" y="261" width="0.9" height="15.0" fill="rgb(252,12,2)" rx="2" ry="2" />
<text  x="570.34" y="271.5" ></text>
</g>
<g >
<title>reflect.Value.Elem (1 samples, 0.07%)</title><rect x="752.0" y="373" width="0.8" height="15.0" fill="rgb(216,220,49)" rx="2" ry="2" />
<text  x="754.96" y="383.5" ></text>
</g>
<g >
<title>runtime.futexsleep (10 samples, 0.74%)</title><rect x="1082.0" y="373" width="8.7" height="15.0" fill="rgb(216,41,46)" rx="2" ry="2" />
<text  x="1085.01" y="383.5" ></text>
</g>
<g >
<title>reflect.mapassign (1 samples, 0.07%)</title><rect x="698.0" y="325" width="0.8" height="15.0" fill="rgb(243,123,51)" rx="2" ry="2" />
<text  x="700.97" y="335.5" ></text>
</g>
<g >
<title>runtime.notewakeup (4 samples, 0.30%)</title><rect x="623.1" y="325" width="3.5" height="15.0" fill="rgb(250,111,2)" rx="2" ry="2" />
<text  x="626.08" y="335.5" ></text>
</g>
<g >
<title>runtime.gosched_m (3 samples, 0.22%)</title><rect x="977.5" y="437" width="2.6" height="15.0" fill="rgb(222,31,26)" rx="2" ry="2" />
<text  x="980.51" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.07%)</title><rect x="679.7" y="309" width="0.9" height="15.0" fill="rgb(205,107,1)" rx="2" ry="2" />
<text  x="682.68" y="319.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.07%)</title><rect x="804.2" y="181" width="0.9" height="15.0" fill="rgb(207,122,39)" rx="2" ry="2" />
<text  x="807.21" y="191.5" ></text>
</g>
<g >
<title>runtime.Callers (1 samples, 0.07%)</title><rect x="264.3" y="309" width="0.9" height="15.0" fill="rgb(225,205,20)" rx="2" ry="2" />
<text  x="267.29" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (18 samples, 1.33%)</title><rect x="556.0" y="309" width="15.7" height="15.0" fill="rgb(241,169,36)" rx="2" ry="2" />
<text  x="559.02" y="319.5" ></text>
</g>
<g >
<title>runtime.send (5 samples, 0.37%)</title><rect x="854.7" y="405" width="4.4" height="15.0" fill="rgb(214,204,8)" rx="2" ry="2" />
<text  x="857.72" y="415.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.07%)</title><rect x="1095.1" y="389" width="0.8" height="15.0" fill="rgb(252,131,24)" rx="2" ry="2" />
<text  x="1098.08" y="399.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.07%)</title><rect x="1037.6" y="373" width="0.9" height="15.0" fill="rgb(224,178,40)" rx="2" ry="2" />
<text  x="1040.60" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.07%)</title><rect x="536.0" y="197" width="0.9" height="15.0" fill="rgb(235,159,3)" rx="2" ry="2" />
<text  x="538.99" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*BlockValidated).MarshalBlockValidated (2 samples, 0.15%)</title><rect x="15.2" y="373" width="1.8" height="15.0" fill="rgb(237,43,24)" rx="2" ry="2" />
<text  x="18.23" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (2 samples, 0.15%)</title><rect x="17.0" y="341" width="1.7" height="15.0" fill="rgb(217,85,18)" rx="2" ry="2" />
<text  x="19.97" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.07%)</title><rect x="27.4" y="293" width="0.9" height="15.0" fill="rgb(213,58,36)" rx="2" ry="2" />
<text  x="30.42" y="303.5" ></text>
</g>
<g >
<title>math/big.(*Int).lehmerGCD (20 samples, 1.48%)</title><rect x="538.6" y="293" width="17.4" height="15.0" fill="rgb(227,130,20)" rx="2" ry="2" />
<text  x="541.61" y="303.5" ></text>
</g>
<g >
<title>math/big.shlVU (1 samples, 0.07%)</title><rect x="47.4" y="245" width="0.9" height="15.0" fill="rgb(210,45,23)" rx="2" ry="2" />
<text  x="50.45" y="255.5" ></text>
</g>
<g >
<title>encoding/base64.assemble64 (1 samples, 0.07%)</title><rect x="780.7" y="309" width="0.9" height="15.0" fill="rgb(225,90,12)" rx="2" ry="2" />
<text  x="783.70" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.div (44 samples, 3.25%)</title><rect x="632.7" y="341" width="38.3" height="15.0" fill="rgb(250,209,47)" rx="2" ry="2" />
<text  x="635.66" y="351.5" >mat..</text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.07%)</title><rect x="718.0" y="245" width="0.9" height="15.0" fill="rgb(233,217,54)" rx="2" ry="2" />
<text  x="721.00" y="255.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (1 samples, 0.07%)</title><rect x="804.2" y="197" width="0.9" height="15.0" fill="rgb(221,214,23)" rx="2" ry="2" />
<text  x="807.21" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneNameByIndex (6 samples, 0.44%)</title><rect x="337.4" y="389" width="5.3" height="15.0" fill="rgb(234,49,41)" rx="2" ry="2" />
<text  x="340.44" y="399.5" ></text>
</g>
<g >
<title>reflect.Value.Convert (1 samples, 0.07%)</title><rect x="316.5" y="341" width="0.9" height="15.0" fill="rgb(224,83,39)" rx="2" ry="2" />
<text  x="319.54" y="351.5" ></text>
</g>
<g >
<title>math/big.(*Int).Mul (9 samples, 0.66%)</title><rect x="548.2" y="261" width="7.8" height="15.0" fill="rgb(215,33,13)" rx="2" ry="2" />
<text  x="551.18" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (4 samples, 0.30%)</title><rect x="577.8" y="309" width="3.5" height="15.0" fill="rgb(246,171,4)" rx="2" ry="2" />
<text  x="580.79" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock.func1 (2 samples, 0.15%)</title><rect x="277.4" y="373" width="1.7" height="15.0" fill="rgb(206,38,49)" rx="2" ry="2" />
<text  x="280.35" y="383.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).ValidateBlock (5 samples, 0.37%)</title><rect x="275.6" y="421" width="4.4" height="15.0" fill="rgb(229,183,18)" rx="2" ry="2" />
<text  x="278.61" y="431.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.07%)</title><rect x="680.6" y="357" width="0.8" height="15.0" fill="rgb(246,152,31)" rx="2" ry="2" />
<text  x="683.55" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.07%)</title><rect x="15.2" y="133" width="0.9" height="15.0" fill="rgb(228,154,33)" rx="2" ry="2" />
<text  x="18.23" y="143.5" ></text>
</g>
<g >
<title>runtime.nilinterhash (2 samples, 0.15%)</title><rect x="790.3" y="309" width="1.7" height="15.0" fill="rgb(217,118,25)" rx="2" ry="2" />
<text  x="793.28" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (9 samples, 0.66%)</title><rect x="312.2" y="373" width="7.8" height="15.0" fill="rgb(208,113,2)" rx="2" ry="2" />
<text  x="315.18" y="383.5" ></text>
</g>
<g >
<title>runtime.addtimer (2 samples, 0.15%)</title><rect x="889.6" y="405" width="1.7" height="15.0" fill="rgb(244,176,3)" rx="2" ry="2" />
<text  x="892.56" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.07%)</title><rect x="536.0" y="181" width="0.9" height="15.0" fill="rgb(229,63,48)" rx="2" ry="2" />
<text  x="538.99" y="191.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (6 samples, 0.44%)</title><rect x="615.2" y="421" width="5.3" height="15.0" fill="rgb(223,82,18)" rx="2" ry="2" />
<text  x="618.24" y="431.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (4 samples, 0.30%)</title><rect x="1071.6" y="341" width="3.4" height="15.0" fill="rgb(243,40,27)" rx="2" ry="2" />
<text  x="1074.56" y="351.5" ></text>
</g>
<g >
<title>runtime.systemstack (6 samples, 0.44%)</title><rect x="848.6" y="309" width="5.3" height="15.0" fill="rgb(224,170,16)" rx="2" ry="2" />
<text  x="851.63" y="319.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (7 samples, 0.52%)</title><rect x="756.3" y="357" width="6.1" height="15.0" fill="rgb(206,206,48)" rx="2" ry="2" />
<text  x="759.32" y="367.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.07%)</title><rect x="745.9" y="421" width="0.8" height="15.0" fill="rgb(236,1,36)" rx="2" ry="2" />
<text  x="748.87" y="431.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4.1 (3 samples, 0.22%)</title><rect x="907.0" y="357" width="2.6" height="15.0" fill="rgb(220,219,17)" rx="2" ry="2" />
<text  x="909.97" y="367.5" ></text>
</g>
<g >
<title>runtime.gcStart (1 samples, 0.07%)</title><rect x="862.6" y="405" width="0.8" height="15.0" fill="rgb(233,19,31)" rx="2" ry="2" />
<text  x="865.56" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="537.7" y="245" width="0.9" height="15.0" fill="rgb(229,49,15)" rx="2" ry="2" />
<text  x="540.73" y="255.5" ></text>
</g>
<g >
<title>encoding/json.stateBeginValue (1 samples, 0.07%)</title><rect x="691.0" y="357" width="0.9" height="15.0" fill="rgb(241,2,26)" rx="2" ry="2" />
<text  x="694.00" y="367.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (1 samples, 0.07%)</title><rect x="39.6" y="213" width="0.9" height="15.0" fill="rgb(229,41,8)" rx="2" ry="2" />
<text  x="42.61" y="223.5" ></text>
</g>
<g >
<title>runtime.netpoll (34 samples, 2.51%)</title><rect x="993.2" y="389" width="29.6" height="15.0" fill="rgb(216,179,43)" rx="2" ry="2" />
<text  x="996.19" y="399.5" >ru..</text>
</g>
<g >
<title>github.com/golang/snappy.Decode (2 samples, 0.15%)</title><rect x="803.3" y="421" width="1.8" height="15.0" fill="rgb(241,229,19)" rx="2" ry="2" />
<text  x="806.34" y="431.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.07%)</title><rect x="303.5" y="197" width="0.8" height="15.0" fill="rgb(206,224,35)" rx="2" ry="2" />
<text  x="306.48" y="207.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).scanWhile (1 samples, 0.07%)</title><rect x="337.4" y="149" width="0.9" height="15.0" fill="rgb(207,219,8)" rx="2" ry="2" />
<text  x="340.44" y="159.5" ></text>
</g>
<g >
<title>math/big.(*Int).SetBytes (1 samples, 0.07%)</title><rect x="679.7" y="389" width="0.9" height="15.0" fill="rgb(211,33,25)" rx="2" ry="2" />
<text  x="682.68" y="399.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalReplyMessage).VerifySignature (68 samples, 5.02%)</title><rect x="627.4" y="437" width="59.2" height="15.0" fill="rgb(249,106,46)" rx="2" ry="2" />
<text  x="630.43" y="447.5" >BCDns_..</text>
</g>
<g >
<title>math/big.subVV (2 samples, 0.15%)</title><rect x="568.2" y="261" width="1.8" height="15.0" fill="rgb(221,27,19)" rx="2" ry="2" />
<text  x="571.21" y="271.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).writeJournal (1 samples, 0.07%)</title><rect x="21.3" y="357" width="0.9" height="15.0" fill="rgb(222,44,39)" rx="2" ry="2" />
<text  x="24.32" y="367.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (10 samples, 0.74%)</title><rect x="575.2" y="373" width="8.7" height="15.0" fill="rgb(235,226,41)" rx="2" ry="2" />
<text  x="578.18" y="383.5" ></text>
</g>
<g >
<title>runtime.goroutineReady (2 samples, 0.15%)</title><rect x="1177.8" y="437" width="1.7" height="15.0" fill="rgb(252,56,25)" rx="2" ry="2" />
<text  x="1180.81" y="447.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (1 samples, 0.07%)</title><rect x="964.5" y="373" width="0.8" height="15.0" fill="rgb(238,67,0)" rx="2" ry="2" />
<text  x="967.45" y="383.5" ></text>
</g>
<g >
<title>runtime.stopm (5 samples, 0.37%)</title><rect x="972.3" y="389" width="4.3" height="15.0" fill="rgb(208,47,53)" rx="2" ry="2" />
<text  x="975.29" y="399.5" ></text>
</g>
<g >
<title>runtime.stringtoslicebyte (1 samples, 0.07%)</title><rect x="305.2" y="373" width="0.9" height="15.0" fill="rgb(207,59,33)" rx="2" ry="2" />
<text  x="308.22" y="383.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="327.0" y="389" width="0.9" height="15.0" fill="rgb(214,74,14)" rx="2" ry="2" />
<text  x="329.99" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (7 samples, 0.52%)</title><rect x="671.8" y="341" width="6.1" height="15.0" fill="rgb(243,101,38)" rx="2" ry="2" />
<text  x="674.85" y="351.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.22%)</title><rect x="334.8" y="325" width="2.6" height="15.0" fill="rgb(234,60,47)" rx="2" ry="2" />
<text  x="337.83" y="335.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="862.6" y="389" width="0.8" height="15.0" fill="rgb(212,62,2)" rx="2" ry="2" />
<text  x="865.56" y="399.5" ></text>
</g>
<g >
<title>runtime.mapassign_fast64 (1 samples, 0.07%)</title><rect x="1189.1" y="405" width="0.9" height="15.0" fill="rgb(238,194,6)" rx="2" ry="2" />
<text  x="1192.13" y="415.5" ></text>
</g>
<g >
<title>runtime.funcdata (1 samples, 0.07%)</title><rect x="266.0" y="229" width="0.9" height="15.0" fill="rgb(225,191,36)" rx="2" ry="2" />
<text  x="269.03" y="239.5" ></text>
</g>
<g >
<title>crypto/rsa.decrypt (2 samples, 0.15%)</title><rect x="280.0" y="341" width="1.7" height="15.0" fill="rgb(233,78,1)" rx="2" ry="2" />
<text  x="282.96" y="351.5" ></text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.07%)</title><rect x="319.2" y="341" width="0.8" height="15.0" fill="rgb(212,51,12)" rx="2" ry="2" />
<text  x="322.15" y="351.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.07%)</title><rect x="730.2" y="309" width="0.9" height="15.0" fill="rgb(233,38,32)" rx="2" ry="2" />
<text  x="733.19" y="319.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).Delete (2 samples, 0.15%)</title><rect x="21.3" y="405" width="1.8" height="15.0" fill="rgb(207,149,25)" rx="2" ry="2" />
<text  x="24.32" y="415.5" ></text>
</g>
<g >
<title>math/big.nat.cmp (1 samples, 0.07%)</title><rect x="55.3" y="261" width="0.9" height="15.0" fill="rgb(221,183,50)" rx="2" ry="2" />
<text  x="58.28" y="271.5" ></text>
</g>
<g >
<title>runtime.getempty (1 samples, 0.07%)</title><rect x="923.5" y="245" width="0.9" height="15.0" fill="rgb(230,79,31)" rx="2" ry="2" />
<text  x="926.52" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.07%)</title><rect x="770.3" y="421" width="0.8" height="15.0" fill="rgb(252,22,40)" rx="2" ry="2" />
<text  x="773.25" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (2 samples, 0.15%)</title><rect x="907.0" y="293" width="1.7" height="15.0" fill="rgb(237,117,24)" rx="2" ry="2" />
<text  x="909.97" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (4 samples, 0.30%)</title><rect x="312.2" y="357" width="3.5" height="15.0" fill="rgb(206,216,9)" rx="2" ry="2" />
<text  x="315.18" y="367.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Pwrite (1 samples, 0.07%)</title><rect x="19.6" y="325" width="0.9" height="15.0" fill="rgb(236,215,14)" rx="2" ry="2" />
<text  x="22.58" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mheap).scavengeLocked (1 samples, 0.07%)</title><rect x="867.8" y="277" width="0.9" height="15.0" fill="rgb(206,172,36)" rx="2" ry="2" />
<text  x="870.79" y="287.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.07%)</title><rect x="1180.4" y="357" width="0.9" height="15.0" fill="rgb(212,154,28)" rx="2" ry="2" />
<text  x="1183.42" y="367.5" ></text>
</g>
<g >
<title>os.(*File).pwrite (1 samples, 0.07%)</title><rect x="19.6" y="341" width="0.9" height="15.0" fill="rgb(223,144,19)" rx="2" ry="2" />
<text  x="22.58" y="351.5" ></text>
</g>
<g >
<title>runtime.bgscavenge.func2 (11 samples, 0.81%)</title><rect x="891.3" y="421" width="9.6" height="15.0" fill="rgb(237,78,35)" rx="2" ry="2" />
<text  x="894.30" y="431.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (1 samples, 0.07%)</title><rect x="212.0" y="101" width="0.9" height="15.0" fill="rgb(234,77,37)" rx="2" ry="2" />
<text  x="215.04" y="111.5" ></text>
</g>
<g >
<title>runtime.deltimer (1 samples, 0.07%)</title><rect x="270.4" y="325" width="0.9" height="15.0" fill="rgb(237,182,48)" rx="2" ry="2" />
<text  x="273.38" y="335.5" ></text>
</g>
<g >
<title>encoding/json.typeEncoder (1 samples, 0.07%)</title><rect x="618.7" y="357" width="0.9" height="15.0" fill="rgb(245,110,5)" rx="2" ry="2" />
<text  x="621.72" y="367.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (1 samples, 0.07%)</title><rect x="21.3" y="261" width="0.9" height="15.0" fill="rgb(236,159,37)" rx="2" ry="2" />
<text  x="24.32" y="271.5" ></text>
</g>
<g >
<title>runtime.procUnpin (1 samples, 0.07%)</title><rect x="291.3" y="245" width="0.9" height="15.0" fill="rgb(205,153,32)" rx="2" ry="2" />
<text  x="294.28" y="255.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (1 samples, 0.07%)</title><rect x="913.9" y="277" width="0.9" height="15.0" fill="rgb(249,102,34)" rx="2" ry="2" />
<text  x="916.94" y="287.5" ></text>
</g>
<g >
<title>encoding/json.typeEncoder (1 samples, 0.07%)</title><rect x="683.2" y="341" width="0.8" height="15.0" fill="rgb(245,95,45)" rx="2" ry="2" />
<text  x="686.17" y="351.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (3 samples, 0.22%)</title><rect x="746.7" y="437" width="2.7" height="15.0" fill="rgb(246,195,42)" rx="2" ry="2" />
<text  x="749.74" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="303.5" y="277" width="0.8" height="15.0" fill="rgb(244,215,35)" rx="2" ry="2" />
<text  x="306.48" y="287.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.07%)</title><rect x="760.7" y="293" width="0.8" height="15.0" fill="rgb(247,187,34)" rx="2" ry="2" />
<text  x="763.67" y="303.5" ></text>
</g>
<g >
<title>runtime.hashGrow (1 samples, 0.07%)</title><rect x="621.3" y="405" width="0.9" height="15.0" fill="rgb(254,175,19)" rx="2" ry="2" />
<text  x="624.34" y="415.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.07%)</title><rect x="1023.7" y="357" width="0.8" height="15.0" fill="rgb(211,214,24)" rx="2" ry="2" />
<text  x="1026.67" y="367.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (1 samples, 0.07%)</title><rect x="262.5" y="373" width="0.9" height="15.0" fill="rgb(247,210,14)" rx="2" ry="2" />
<text  x="265.55" y="383.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (1 samples, 0.07%)</title><rect x="680.6" y="405" width="0.8" height="15.0" fill="rgb(213,207,48)" rx="2" ry="2" />
<text  x="683.55" y="415.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (3 samples, 0.22%)</title><rect x="766.8" y="373" width="2.6" height="15.0" fill="rgb(219,45,6)" rx="2" ry="2" />
<text  x="769.77" y="383.5" ></text>
</g>
<g >
<title>runtime.epollwait (1 samples, 0.07%)</title><rect x="930.5" y="357" width="0.9" height="15.0" fill="rgb(228,35,20)" rx="2" ry="2" />
<text  x="933.49" y="367.5" ></text>
</g>
<g >
<title>runtime.startm (4 samples, 0.30%)</title><rect x="1071.6" y="373" width="3.4" height="15.0" fill="rgb(245,31,37)" rx="2" ry="2" />
<text  x="1074.56" y="383.5" ></text>
</g>
<g >
<title>runtime.send (2 samples, 0.15%)</title><rect x="325.2" y="405" width="1.8" height="15.0" fill="rgb(233,106,21)" rx="2" ry="2" />
<text  x="328.25" y="415.5" ></text>
</g>
<g >
<title>runtime.findrunnable (1 samples, 0.07%)</title><rect x="906.1" y="453" width="0.9" height="15.0" fill="rgb(222,66,42)" rx="2" ry="2" />
<text  x="909.10" y="463.5" ></text>
</g>
<g >
<title>math/big.basicMul (1 samples, 0.07%)</title><rect x="249.5" y="261" width="0.9" height="15.0" fill="rgb(231,194,18)" rx="2" ry="2" />
<text  x="252.48" y="271.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (1 samples, 0.07%)</title><rect x="744.1" y="293" width="0.9" height="15.0" fill="rgb(221,181,3)" rx="2" ry="2" />
<text  x="747.13" y="303.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (2 samples, 0.15%)</title><rect x="764.2" y="357" width="1.7" height="15.0" fill="rgb(227,11,21)" rx="2" ry="2" />
<text  x="767.15" y="367.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (3 samples, 0.22%)</title><rect x="267.8" y="325" width="2.6" height="15.0" fill="rgb(221,33,13)" rx="2" ry="2" />
<text  x="270.77" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="236.4" y="293" width="0.9" height="15.0" fill="rgb(215,188,21)" rx="2" ry="2" />
<text  x="239.42" y="303.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.07%)</title><rect x="1075.0" y="357" width="0.9" height="15.0" fill="rgb(227,15,22)" rx="2" ry="2" />
<text  x="1078.05" y="367.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.07%)</title><rect x="532.5" y="181" width="0.9" height="15.0" fill="rgb(222,207,35)" rx="2" ry="2" />
<text  x="535.51" y="191.5" ></text>
</g>
<g >
<title>math/big.nat.add (3 samples, 0.22%)</title><rect x="544.7" y="245" width="2.6" height="15.0" fill="rgb(208,170,18)" rx="2" ry="2" />
<text  x="547.70" y="255.5" ></text>
</g>
<g >
<title>runtime.retake (6 samples, 0.44%)</title><rect x="1090.7" y="405" width="5.2" height="15.0" fill="rgb(249,201,9)" rx="2" ry="2" />
<text  x="1093.72" y="415.5" ></text>
</g>
<g >
<title>reflect.Value.SetMapIndex (1 samples, 0.07%)</title><rect x="25.7" y="197" width="0.8" height="15.0" fill="rgb(239,191,25)" rx="2" ry="2" />
<text  x="28.68" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.GetPacketHeader (9 samples, 0.66%)</title><rect x="763.3" y="437" width="7.8" height="15.0" fill="rgb(240,74,8)" rx="2" ry="2" />
<text  x="766.28" y="447.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).grow (1 samples, 0.07%)</title><rect x="680.6" y="389" width="0.8" height="15.0" fill="rgb(250,217,10)" rx="2" ry="2" />
<text  x="683.55" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.15%)</title><rect x="17.0" y="309" width="1.7" height="15.0" fill="rgb(244,34,45)" rx="2" ry="2" />
<text  x="19.97" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.15%)</title><rect x="525.5" y="229" width="1.8" height="15.0" fill="rgb(237,149,33)" rx="2" ry="2" />
<text  x="528.54" y="239.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.15%)</title><rect x="1176.1" y="357" width="1.7" height="15.0" fill="rgb(247,168,0)" rx="2" ry="2" />
<text  x="1179.07" y="367.5" ></text>
</g>
<g >
<title>runtime.scanobject (40 samples, 2.95%)</title><rect x="931.4" y="389" width="34.8" height="15.0" fill="rgb(239,16,37)" rx="2" ry="2" />
<text  x="934.36" y="399.5" >ru..</text>
</g>
<g >
<title>runtime.sysmon (2 samples, 0.15%)</title><rect x="1172.6" y="453" width="1.7" height="15.0" fill="rgb(232,197,36)" rx="2" ry="2" />
<text  x="1175.58" y="463.5" ></text>
</g>
<g >
<title>runtime.forEachP (3 samples, 0.22%)</title><rect x="907.0" y="373" width="2.6" height="15.0" fill="rgb(213,192,1)" rx="2" ry="2" />
<text  x="909.97" y="383.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.07%)</title><rect x="979.3" y="373" width="0.8" height="15.0" fill="rgb(223,30,17)" rx="2" ry="2" />
<text  x="982.25" y="383.5" ></text>
</g>
<g >
<title>container/list.(*List).insertValue (1 samples, 0.07%)</title><rect x="303.5" y="309" width="0.8" height="15.0" fill="rgb(232,203,48)" rx="2" ry="2" />
<text  x="306.48" y="319.5" ></text>
</g>
<g >
<title>math/big.basicMul (1 samples, 0.07%)</title><rect x="570.8" y="277" width="0.9" height="15.0" fill="rgb(244,71,13)" rx="2" ry="2" />
<text  x="573.83" y="287.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).get (1 samples, 0.07%)</title><rect x="304.3" y="341" width="0.9" height="15.0" fill="rgb(210,177,8)" rx="2" ry="2" />
<text  x="307.35" y="351.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.07%)</title><rect x="212.0" y="149" width="0.9" height="15.0" fill="rgb(214,221,16)" rx="2" ry="2" />
<text  x="215.04" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (1 samples, 0.07%)</title><rect x="532.5" y="165" width="0.9" height="15.0" fill="rgb(249,190,25)" rx="2" ry="2" />
<text  x="535.51" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcSweepBuf).push (1 samples, 0.07%)</title><rect x="866.0" y="309" width="0.9" height="15.0" fill="rgb(223,119,12)" rx="2" ry="2" />
<text  x="869.04" y="319.5" ></text>
</g>
<g >
<title>runtime.(*_type).typeOff (1 samples, 0.07%)</title><rect x="24.8" y="85" width="0.9" height="15.0" fill="rgb(253,64,40)" rx="2" ry="2" />
<text  x="27.80" y="95.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.15%)</title><rect x="545.6" y="197" width="1.7" height="15.0" fill="rgb(210,103,30)" rx="2" ry="2" />
<text  x="548.57" y="207.5" ></text>
</g>
<g >
<title>reflect.mapassign (1 samples, 0.07%)</title><rect x="25.7" y="181" width="0.8" height="15.0" fill="rgb(206,104,23)" rx="2" ry="2" />
<text  x="28.68" y="191.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.07%)</title><rect x="572.6" y="309" width="0.8" height="15.0" fill="rgb(249,144,45)" rx="2" ry="2" />
<text  x="575.57" y="319.5" ></text>
</g>
<g >
<title>reflect.(*MapIter).Key (1 samples, 0.07%)</title><rect x="727.6" y="341" width="0.9" height="15.0" fill="rgb(218,45,8)" rx="2" ry="2" />
<text  x="730.58" y="351.5" ></text>
</g>
<g >
<title>runtime.getStackMap (4 samples, 0.30%)</title><rect x="920.0" y="277" width="3.5" height="15.0" fill="rgb(207,65,5)" rx="2" ry="2" />
<text  x="923.04" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="235.5" y="245" width="0.9" height="15.0" fill="rgb(205,43,27)" rx="2" ry="2" />
<text  x="238.55" y="255.5" ></text>
</g>
<g >
<title>runtime.makechan (7 samples, 0.52%)</title><rect x="756.3" y="405" width="6.1" height="15.0" fill="rgb(210,197,54)" rx="2" ry="2" />
<text  x="759.32" y="415.5" ></text>
</g>
<g >
<title>runtime.netpoll (4 samples, 0.30%)</title><rect x="968.8" y="389" width="3.5" height="15.0" fill="rgb(220,167,8)" rx="2" ry="2" />
<text  x="971.80" y="399.5" ></text>
</g>
<g >
<title>runtime.findrunnable (10 samples, 0.74%)</title><rect x="967.9" y="405" width="8.7" height="15.0" fill="rgb(240,178,13)" rx="2" ry="2" />
<text  x="970.93" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.07%)</title><rect x="860.8" y="373" width="0.9" height="15.0" fill="rgb(254,110,41)" rx="2" ry="2" />
<text  x="863.82" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).find (1 samples, 0.07%)</title><rect x="525.5" y="69" width="0.9" height="15.0" fill="rgb(217,12,22)" rx="2" ry="2" />
<text  x="528.54" y="79.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (4 samples, 0.30%)</title><rect x="855.6" y="357" width="3.5" height="15.0" fill="rgb(208,119,35)" rx="2" ry="2" />
<text  x="858.59" y="367.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.15%)</title><rect x="1176.1" y="325" width="1.7" height="15.0" fill="rgb(227,186,11)" rx="2" ry="2" />
<text  x="1179.07" y="335.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.15%)</title><rect x="1177.8" y="293" width="1.7" height="15.0" fill="rgb(252,147,30)" rx="2" ry="2" />
<text  x="1180.81" y="303.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (1 samples, 0.07%)</title><rect x="729.3" y="341" width="0.9" height="15.0" fill="rgb(251,24,46)" rx="2" ry="2" />
<text  x="732.32" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).BroadCast (1 samples, 0.07%)</title><rect x="12.6" y="421" width="0.9" height="15.0" fill="rgb(235,22,29)" rx="2" ry="2" />
<text  x="15.61" y="431.5" ></text>
</g>
<g >
<title>math/big.nat.make (2 samples, 0.15%)</title><rect x="525.5" y="261" width="1.8" height="15.0" fill="rgb(212,115,23)" rx="2" ry="2" />
<text  x="528.54" y="271.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (4 samples, 0.30%)</title><rect x="720.6" y="373" width="3.5" height="15.0" fill="rgb(225,212,42)" rx="2" ry="2" />
<text  x="723.61" y="383.5" ></text>
</g>
<g >
<title>runtime.scavengeSleep (2 samples, 0.15%)</title><rect x="889.6" y="437" width="1.7" height="15.0" fill="rgb(227,132,6)" rx="2" ry="2" />
<text  x="892.56" y="447.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (1 samples, 0.07%)</title><rect x="570.0" y="261" width="0.8" height="15.0" fill="rgb(226,54,11)" rx="2" ry="2" />
<text  x="572.96" y="271.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (6 samples, 0.44%)</title><rect x="786.8" y="325" width="5.2" height="15.0" fill="rgb(238,111,1)" rx="2" ry="2" />
<text  x="789.80" y="335.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.07%)</title><rect x="327.0" y="341" width="0.9" height="15.0" fill="rgb(216,121,49)" rx="2" ry="2" />
<text  x="329.99" y="351.5" ></text>
</g>
<g >
<title>encoding/json.stringEncoder (1 samples, 0.07%)</title><rect x="253.0" y="293" width="0.8" height="15.0" fill="rgb(233,220,42)" rx="2" ry="2" />
<text  x="255.97" y="303.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.07%)</title><rect x="536.0" y="261" width="0.9" height="15.0" fill="rgb(209,205,41)" rx="2" ry="2" />
<text  x="538.99" y="271.5" ></text>
</g>
<g >
<title>sync.(*Pool).getSlow (1 samples, 0.07%)</title><rect x="360.1" y="229" width="0.9" height="15.0" fill="rgb(217,159,39)" rx="2" ry="2" />
<text  x="363.08" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="308.7" y="373" width="0.9" height="15.0" fill="rgb(247,12,6)" rx="2" ry="2" />
<text  x="311.70" y="383.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.07%)</title><rect x="1075.0" y="437" width="0.9" height="15.0" fill="rgb(208,20,20)" rx="2" ry="2" />
<text  x="1078.05" y="447.5" ></text>
</g>
<g >
<title>runtime.(*treapNode).updateInvariants (1 samples, 0.07%)</title><rect x="892.2" y="373" width="0.8" height="15.0" fill="rgb(211,7,21)" rx="2" ry="2" />
<text  x="895.17" y="383.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (4 samples, 0.30%)</title><rect x="361.0" y="261" width="3.4" height="15.0" fill="rgb(213,150,2)" rx="2" ry="2" />
<text  x="363.95" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.15%)</title><rect x="17.0" y="261" width="1.7" height="15.0" fill="rgb(215,169,15)" rx="2" ry="2" />
<text  x="19.97" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.07%)</title><rect x="537.7" y="181" width="0.9" height="15.0" fill="rgb(210,32,29)" rx="2" ry="2" />
<text  x="540.73" y="191.5" ></text>
</g>
<g >
<title>encoding/json.indirect (3 samples, 0.22%)</title><rect x="692.7" y="341" width="2.7" height="15.0" fill="rgb(205,131,3)" rx="2" ry="2" />
<text  x="695.75" y="351.5" ></text>
</g>
<g >
<title>runtime.newproc (6 samples, 0.44%)</title><rect x="622.2" y="421" width="5.2" height="15.0" fill="rgb(227,186,20)" rx="2" ry="2" />
<text  x="625.21" y="431.5" ></text>
</g>
<g >
<title>runtime.Callers (3 samples, 0.22%)</title><rect x="265.2" y="309" width="2.6" height="15.0" fill="rgb(215,99,45)" rx="2" ry="2" />
<text  x="268.16" y="319.5" ></text>
</g>
<g >
<title>crypto/rsa.decrypt (238 samples, 17.56%)</title><rect x="348.8" y="341" width="207.2" height="15.0" fill="rgb(206,55,35)" rx="2" ry="2" />
<text  x="351.76" y="351.5" >crypto/rsa.decrypt</text>
</g>
<g >
<title>runtime.gentraceback (3 samples, 0.22%)</title><rect x="265.2" y="245" width="2.6" height="15.0" fill="rgb(209,221,2)" rx="2" ry="2" />
<text  x="268.16" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="15.2" y="53" width="0.9" height="15.0" fill="rgb(245,35,49)" rx="2" ry="2" />
<text  x="18.23" y="63.5" ></text>
</g>
<g >
<title>sync/atomic.(*Value).Load (1 samples, 0.07%)</title><rect x="10.9" y="245" width="0.8" height="15.0" fill="rgb(242,77,15)" rx="2" ry="2" />
<text  x="13.87" y="255.5" ></text>
</g>
<g >
<title>runtime.largeAlloc (1 samples, 0.07%)</title><rect x="14.4" y="341" width="0.8" height="15.0" fill="rgb(242,139,54)" rx="2" ry="2" />
<text  x="17.35" y="351.5" ></text>
</g>
<g >
<title>time.NewTimer (1 samples, 0.07%)</title><rect x="271.3" y="357" width="0.8" height="15.0" fill="rgb(209,122,21)" rx="2" ry="2" />
<text  x="274.25" y="367.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtS (1 samples, 0.07%)</title><rect x="725.0" y="357" width="0.8" height="15.0" fill="rgb(239,132,12)" rx="2" ry="2" />
<text  x="727.97" y="367.5" ></text>
</g>
<g >
<title>reflect.Value.call (1 samples, 0.07%)</title><rect x="275.6" y="341" width="0.9" height="15.0" fill="rgb(239,219,27)" rx="2" ry="2" />
<text  x="278.61" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.07%)</title><rect x="860.8" y="389" width="0.9" height="15.0" fill="rgb(248,142,21)" rx="2" ry="2" />
<text  x="863.82" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (2 samples, 0.15%)</title><rect x="277.4" y="325" width="1.7" height="15.0" fill="rgb(214,21,43)" rx="2" ry="2" />
<text  x="280.35" y="335.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.15%)</title><rect x="1182.2" y="309" width="1.7" height="15.0" fill="rgb(234,16,53)" rx="2" ry="2" />
<text  x="1185.16" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.15%)</title><rect x="277.4" y="245" width="1.7" height="15.0" fill="rgb(230,121,41)" rx="2" ry="2" />
<text  x="280.35" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="340.9" y="309" width="0.9" height="15.0" fill="rgb(237,12,11)" rx="2" ry="2" />
<text  x="343.92" y="319.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.07%)</title><rect x="708.4" y="293" width="0.9" height="15.0" fill="rgb(220,56,41)" rx="2" ry="2" />
<text  x="711.42" y="303.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (20 samples, 1.48%)</title><rect x="282.6" y="309" width="17.4" height="15.0" fill="rgb(237,82,20)" rx="2" ry="2" />
<text  x="285.58" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mspan).countAlloc (1 samples, 0.07%)</title><rect x="905.2" y="405" width="0.9" height="15.0" fill="rgb(205,116,0)" rx="2" ry="2" />
<text  x="908.23" y="415.5" ></text>
</g>
<g >
<title>github.com/golang/snappy.Encode (2 samples, 0.15%)</title><rect x="13.5" y="421" width="1.7" height="15.0" fill="rgb(218,215,44)" rx="2" ry="2" />
<text  x="16.48" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.07%)</title><rect x="860.8" y="357" width="0.9" height="15.0" fill="rgb(229,208,38)" rx="2" ry="2" />
<text  x="863.82" y="367.5" ></text>
</g>
<g >
<title>fmt.(*pp).handleMethods (1 samples, 0.07%)</title><rect x="708.4" y="341" width="0.9" height="15.0" fill="rgb(250,3,35)" rx="2" ry="2" />
<text  x="711.42" y="351.5" ></text>
</g>
<g >
<title>runtime.usleep (6 samples, 0.44%)</title><rect x="1031.5" y="357" width="5.2" height="15.0" fill="rgb(254,80,17)" rx="2" ry="2" />
<text  x="1034.51" y="367.5" ></text>
</g>
<g >
<title>bytes.makeSlice (1 samples, 0.07%)</title><rect x="15.2" y="181" width="0.9" height="15.0" fill="rgb(222,11,20)" rx="2" ry="2" />
<text  x="18.23" y="191.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (1 samples, 0.07%)</title><rect x="566.5" y="229" width="0.8" height="15.0" fill="rgb(208,22,10)" rx="2" ry="2" />
<text  x="569.47" y="239.5" ></text>
</g>
<g >
<title>crypto/rsa.SignPKCS1v15 (257 samples, 18.97%)</title><rect x="347.9" y="373" width="223.8" height="15.0" fill="rgb(237,173,48)" rx="2" ry="2" />
<text  x="350.89" y="383.5" >crypto/rsa.SignPKCS1v15</text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.07%)</title><rect x="574.3" y="341" width="0.9" height="15.0" fill="rgb(229,0,49)" rx="2" ry="2" />
<text  x="577.31" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mspan).treapFilter (1 samples, 0.07%)</title><rect x="892.2" y="357" width="0.8" height="15.0" fill="rgb(213,177,22)" rx="2" ry="2" />
<text  x="895.17" y="367.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (2 samples, 0.15%)</title><rect x="1177.8" y="389" width="1.7" height="15.0" fill="rgb(224,82,21)" rx="2" ry="2" />
<text  x="1180.81" y="399.5" ></text>
</g>
<g >
<title>reflect.Value.SetUint (1 samples, 0.07%)</title><rect x="783.3" y="325" width="0.9" height="15.0" fill="rgb(254,39,22)" rx="2" ry="2" />
<text  x="786.31" y="335.5" ></text>
</g>
<g >
<title>runtime.chansend.func1 (1 samples, 0.07%)</title><rect x="854.7" y="389" width="0.9" height="15.0" fill="rgb(248,84,27)" rx="2" ry="2" />
<text  x="857.72" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (6 samples, 0.44%)</title><rect x="864.3" y="341" width="5.2" height="15.0" fill="rgb(217,137,50)" rx="2" ry="2" />
<text  x="867.30" y="351.5" ></text>
</g>
<g >
<title>crypto/rand.getRandomBatch (1 samples, 0.07%)</title><rect x="348.8" y="277" width="0.8" height="15.0" fill="rgb(244,154,4)" rx="2" ry="2" />
<text  x="351.76" y="287.5" ></text>
</g>
<g >
<title>math/big.nat.mulAddWW (5 samples, 0.37%)</title><rect x="551.7" y="229" width="4.3" height="15.0" fill="rgb(212,2,16)" rx="2" ry="2" />
<text  x="554.67" y="239.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).handleConn (137 samples, 10.11%)</title><rect x="763.3" y="453" width="119.3" height="15.0" fill="rgb(206,65,50)" rx="2" ry="2" />
<text  x="766.28" y="463.5" >BCDns_0.1/netw..</text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.15%)</title><rect x="1182.2" y="341" width="1.7" height="15.0" fill="rgb(231,5,19)" rx="2" ry="2" />
<text  x="1185.16" y="351.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (4 samples, 0.30%)</title><rect x="716.3" y="277" width="3.4" height="15.0" fill="rgb(220,77,7)" rx="2" ry="2" />
<text  x="719.26" y="287.5" ></text>
</g>
<g >
<title>runtime.scanblock (2 samples, 0.15%)</title><rect x="923.5" y="277" width="1.8" height="15.0" fill="rgb(218,184,33)" rx="2" ry="2" />
<text  x="926.52" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="621.3" y="341" width="0.9" height="15.0" fill="rgb(248,65,22)" rx="2" ry="2" />
<text  x="624.34" y="351.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.07%)</title><rect x="25.7" y="117" width="0.8" height="15.0" fill="rgb(224,152,18)" rx="2" ry="2" />
<text  x="28.68" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.07%)</title><rect x="860.8" y="341" width="0.9" height="15.0" fill="rgb(245,48,37)" rx="2" ry="2" />
<text  x="863.82" y="351.5" ></text>
</g>
<g >
<title>runtime.netpollunblock (1 samples, 0.07%)</title><rect x="1021.9" y="357" width="0.9" height="15.0" fill="rgb(250,200,3)" rx="2" ry="2" />
<text  x="1024.93" y="367.5" ></text>
</g>
<g >
<title>encoding/json.encodeByteSlice (1 samples, 0.07%)</title><rect x="15.2" y="229" width="0.9" height="15.0" fill="rgb(222,1,22)" rx="2" ry="2" />
<text  x="18.23" y="239.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.15%)</title><rect x="1177.8" y="357" width="1.7" height="15.0" fill="rgb(238,65,41)" rx="2" ry="2" />
<text  x="1180.81" y="367.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.07%)</title><rect x="677.9" y="309" width="0.9" height="15.0" fill="rgb(234,148,14)" rx="2" ry="2" />
<text  x="680.94" y="319.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintln (9 samples, 0.66%)</title><rect x="724.1" y="405" width="7.8" height="15.0" fill="rgb(241,221,28)" rx="2" ry="2" />
<text  x="727.10" y="415.5" ></text>
</g>
<g >
<title>math/big.nat.setWord (1 samples, 0.07%)</title><rect x="234.7" y="245" width="0.8" height="15.0" fill="rgb(212,126,2)" rx="2" ry="2" />
<text  x="237.68" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.07%)</title><rect x="10.0" y="277" width="0.9" height="15.0" fill="rgb(206,228,3)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>math/big.greaterThan (3 samples, 0.22%)</title><rect x="656.2" y="309" width="2.6" height="15.0" fill="rgb(235,192,30)" rx="2" ry="2" />
<text  x="659.17" y="319.5" ></text>
</g>
<g >
<title>runtime.deferprocStack (1 samples, 0.07%)</title><rect x="809.4" y="389" width="0.9" height="15.0" fill="rgb(211,15,47)" rx="2" ry="2" />
<text  x="812.44" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.07%)</title><rect x="525.5" y="181" width="0.9" height="15.0" fill="rgb(253,204,3)" rx="2" ry="2" />
<text  x="528.54" y="191.5" ></text>
</g>
<g >
<title>runtime.schedule (3 samples, 0.22%)</title><rect x="977.5" y="405" width="2.6" height="15.0" fill="rgb(214,23,16)" rx="2" ry="2" />
<text  x="980.51" y="415.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).pushHead (1 samples, 0.07%)</title><rect x="46.6" y="197" width="0.8" height="15.0" fill="rgb(246,135,6)" rx="2" ry="2" />
<text  x="49.58" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.07%)</title><rect x="536.0" y="213" width="0.9" height="15.0" fill="rgb(254,63,22)" rx="2" ry="2" />
<text  x="538.99" y="223.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Sum (1 samples, 0.07%)</title><rect x="342.7" y="373" width="0.8" height="15.0" fill="rgb(246,26,30)" rx="2" ry="2" />
<text  x="345.66" y="383.5" ></text>
</g>
<g >
<title>reflect.Value.MapIndex (1 samples, 0.07%)</title><rect x="16.1" y="213" width="0.9" height="15.0" fill="rgb(238,106,21)" rx="2" ry="2" />
<text  x="19.10" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (3 samples, 0.22%)</title><rect x="907.0" y="309" width="2.6" height="15.0" fill="rgb(224,92,41)" rx="2" ry="2" />
<text  x="909.97" y="319.5" ></text>
</g>
<g >
<title>internal/syscall/unix.GetRandom (1 samples, 0.07%)</title><rect x="348.8" y="261" width="0.8" height="15.0" fill="rgb(220,74,37)" rx="2" ry="2" />
<text  x="351.76" y="271.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Hash (6 samples, 0.44%)</title><rect x="342.7" y="405" width="5.2" height="15.0" fill="rgb(251,150,44)" rx="2" ry="2" />
<text  x="345.66" y="415.5" ></text>
</g>
<g >
<title>math/big.subVV (6 samples, 0.44%)</title><rect x="665.7" y="309" width="5.3" height="15.0" fill="rgb(225,75,21)" rx="2" ry="2" />
<text  x="668.75" y="319.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (2 samples, 0.15%)</title><rect x="565.6" y="245" width="1.7" height="15.0" fill="rgb(227,86,49)" rx="2" ry="2" />
<text  x="568.60" y="255.5" ></text>
</g>
<g >
<title>syscall.Syscall (8 samples, 0.59%)</title><rect x="327.9" y="357" width="6.9" height="15.0" fill="rgb(230,96,50)" rx="2" ry="2" />
<text  x="330.86" y="367.5" ></text>
</g>
<g >
<title>math/big.nat.mul (5 samples, 0.37%)</title><rect x="230.3" y="229" width="4.4" height="15.0" fill="rgb(233,59,45)" rx="2" ry="2" />
<text  x="233.32" y="239.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.07%)</title><rect x="619.6" y="405" width="0.9" height="15.0" fill="rgb(248,25,46)" rx="2" ry="2" />
<text  x="622.59" y="415.5" ></text>
</g>
<g >
<title>time.NewTimer (8 samples, 0.59%)</title><rect x="756.3" y="421" width="7.0" height="15.0" fill="rgb(218,80,35)" rx="2" ry="2" />
<text  x="759.32" y="431.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).MineBlock (3 samples, 0.22%)</title><rect x="10.0" y="421" width="2.6" height="15.0" fill="rgb(218,21,21)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (18 samples, 1.33%)</title><rect x="556.0" y="341" width="15.7" height="15.0" fill="rgb(242,170,27)" rx="2" ry="2" />
<text  x="559.02" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.NewBlock (1 samples, 0.07%)</title><rect x="11.7" y="405" width="0.9" height="15.0" fill="rgb(248,186,25)" rx="2" ry="2" />
<text  x="14.74" y="415.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.NewProposalReplyMessage (261 samples, 19.26%)</title><rect x="27.4" y="405" width="227.3" height="15.0" fill="rgb(223,141,27)" rx="2" ry="2" />
<text  x="30.42" y="415.5" >BCDns_0.1/messages.NewProposal..</text>
</g>
<g >
<title>runtime.step (3 samples, 0.22%)</title><rect x="920.9" y="229" width="2.6" height="15.0" fill="rgb(227,166,34)" rx="2" ry="2" />
<text  x="923.91" y="239.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.07%)</title><rect x="861.7" y="421" width="0.9" height="15.0" fill="rgb(243,162,17)" rx="2" ry="2" />
<text  x="864.69" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mSpanList).remove (1 samples, 0.07%)</title><rect x="904.4" y="389" width="0.8" height="15.0" fill="rgb(228,31,1)" rx="2" ry="2" />
<text  x="907.36" y="399.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (8 samples, 0.59%)</title><rect x="918.3" y="309" width="7.0" height="15.0" fill="rgb(221,69,14)" rx="2" ry="2" />
<text  x="921.30" y="319.5" ></text>
</g>
<g >
<title>math/big.basicMul (3 samples, 0.22%)</title><rect x="533.4" y="277" width="2.6" height="15.0" fill="rgb(207,124,25)" rx="2" ry="2" />
<text  x="536.38" y="287.5" ></text>
</g>
<g >
<title>runtime.deferreturn (2 samples, 0.15%)</title><rect x="273.9" y="373" width="1.7" height="15.0" fill="rgb(216,66,37)" rx="2" ry="2" />
<text  x="276.87" y="383.5" ></text>
</g>
<g >
<title>runtime.scanobject (2 samples, 0.15%)</title><rect x="764.2" y="277" width="1.7" height="15.0" fill="rgb(252,213,19)" rx="2" ry="2" />
<text  x="767.15" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.07%)</title><rect x="679.7" y="261" width="0.9" height="15.0" fill="rgb(212,33,31)" rx="2" ry="2" />
<text  x="682.68" y="271.5" ></text>
</g>
<g >
<title>runtime.madvise (1 samples, 0.07%)</title><rect x="262.5" y="53" width="0.9" height="15.0" fill="rgb(217,187,52)" rx="2" ry="2" />
<text  x="265.55" y="63.5" ></text>
</g>
<g >
<title>runtime.selunlock (1 samples, 0.07%)</title><rect x="22.2" y="357" width="0.9" height="15.0" fill="rgb(254,142,49)" rx="2" ry="2" />
<text  x="25.19" y="367.5" ></text>
</g>
<g >
<title>runtime.runqput (1 samples, 0.07%)</title><rect x="686.6" y="325" width="0.9" height="15.0" fill="rgb(219,63,15)" rx="2" ry="2" />
<text  x="689.65" y="335.5" ></text>
</g>
<g >
<title>runtime.markroot (24 samples, 1.77%)</title><rect x="909.6" y="389" width="20.9" height="15.0" fill="rgb(214,142,0)" rx="2" ry="2" />
<text  x="912.59" y="399.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.07%)</title><rect x="930.5" y="373" width="0.9" height="15.0" fill="rgb(221,62,18)" rx="2" ry="2" />
<text  x="933.49" y="383.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).View (2 samples, 0.15%)</title><rect x="277.4" y="389" width="1.7" height="15.0" fill="rgb(248,221,30)" rx="2" ry="2" />
<text  x="280.35" y="399.5" ></text>
</g>
<g >
<title>runtime.adjustframe (3 samples, 0.22%)</title><rect x="757.2" y="293" width="2.6" height="15.0" fill="rgb(209,194,48)" rx="2" ry="2" />
<text  x="760.19" y="303.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (2 samples, 0.15%)</title><rect x="807.7" y="373" width="1.7" height="15.0" fill="rgb(217,94,41)" rx="2" ry="2" />
<text  x="810.70" y="383.5" ></text>
</g>
<g >
<title>crypto/rand.(*devReader).Read (3 samples, 0.22%)</title><rect x="28.3" y="261" width="2.6" height="15.0" fill="rgb(232,140,24)" rx="2" ry="2" />
<text  x="31.29" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.07%)</title><rect x="525.5" y="117" width="0.9" height="15.0" fill="rgb(224,162,52)" rx="2" ry="2" />
<text  x="528.54" y="127.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.07%)</title><rect x="580.4" y="293" width="0.9" height="15.0" fill="rgb(233,60,18)" rx="2" ry="2" />
<text  x="583.41" y="303.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (4 samples, 0.30%)</title><rect x="343.5" y="389" width="3.5" height="15.0" fill="rgb(212,48,53)" rx="2" ry="2" />
<text  x="346.54" y="399.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).get (2 samples, 0.15%)</title><rect x="340.1" y="341" width="1.7" height="15.0" fill="rgb(241,111,22)" rx="2" ry="2" />
<text  x="343.05" y="351.5" ></text>
</g>
<g >
<title>runtime.madvise (1 samples, 0.07%)</title><rect x="867.8" y="229" width="0.9" height="15.0" fill="rgb(231,53,32)" rx="2" ry="2" />
<text  x="870.79" y="239.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.07%)</title><rect x="976.6" y="373" width="0.9" height="15.0" fill="rgb(226,177,47)" rx="2" ry="2" />
<text  x="979.64" y="383.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (1 samples, 0.07%)</title><rect x="701.5" y="357" width="0.8" height="15.0" fill="rgb(228,156,32)" rx="2" ry="2" />
<text  x="704.45" y="367.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.07%)</title><rect x="16.1" y="165" width="0.9" height="15.0" fill="rgb(232,55,1)" rx="2" ry="2" />
<text  x="19.10" y="175.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (6 samples, 0.44%)</title><rect x="622.2" y="389" width="5.2" height="15.0" fill="rgb(253,107,6)" rx="2" ry="2" />
<text  x="625.21" y="399.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.07%)</title><rect x="966.2" y="389" width="0.9" height="15.0" fill="rgb(223,91,3)" rx="2" ry="2" />
<text  x="969.19" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mheap).scavengeLocked (11 samples, 0.81%)</title><rect x="891.3" y="405" width="9.6" height="15.0" fill="rgb(242,140,33)" rx="2" ry="2" />
<text  x="894.30" y="415.5" ></text>
</g>
<g >
<title>internal/reflectlite.Swapper (1 samples, 0.07%)</title><rect x="617.9" y="309" width="0.8" height="15.0" fill="rgb(226,149,14)" rx="2" ry="2" />
<text  x="620.85" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.07%)</title><rect x="612.6" y="245" width="0.9" height="15.0" fill="rgb(207,15,30)" rx="2" ry="2" />
<text  x="615.63" y="255.5" ></text>
</g>
<g >
<title>math/big.nat.div (1 samples, 0.07%)</title><rect x="536.9" y="293" width="0.8" height="15.0" fill="rgb(220,4,6)" rx="2" ry="2" />
<text  x="539.86" y="303.5" ></text>
</g>
<g >
<title>runtime.usleep (87 samples, 6.42%)</title><rect x="1095.9" y="405" width="75.8" height="15.0" fill="rgb(219,19,41)" rx="2" ry="2" />
<text  x="1098.95" y="415.5" >runtime...</text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (2 samples, 0.15%)</title><rect x="17.0" y="373" width="1.7" height="15.0" fill="rgb(240,116,28)" rx="2" ry="2" />
<text  x="19.97" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (3 samples, 0.22%)</title><rect x="23.9" y="229" width="2.6" height="15.0" fill="rgb(236,188,31)" rx="2" ry="2" />
<text  x="26.93" y="239.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (3 samples, 0.22%)</title><rect x="1181.3" y="421" width="2.6" height="15.0" fill="rgb(252,157,13)" rx="2" ry="2" />
<text  x="1184.29" y="431.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.07%)</title><rect x="988.8" y="389" width="0.9" height="15.0" fill="rgb(240,40,20)" rx="2" ry="2" />
<text  x="991.83" y="399.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintf (15 samples, 1.11%)</title><rect x="706.7" y="405" width="13.0" height="15.0" fill="rgb(254,199,52)" rx="2" ry="2" />
<text  x="709.68" y="415.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.07%)</title><rect x="18.7" y="293" width="0.9" height="15.0" fill="rgb(224,124,43)" rx="2" ry="2" />
<text  x="21.71" y="303.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).Get (2 samples, 0.15%)</title><rect x="303.5" y="357" width="1.7" height="15.0" fill="rgb(235,72,1)" rx="2" ry="2" />
<text  x="306.48" y="367.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.07%)</title><rect x="327.0" y="405" width="0.9" height="15.0" fill="rgb(211,136,12)" rx="2" ry="2" />
<text  x="329.99" y="415.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.30%)</title><rect x="855.6" y="373" width="3.5" height="15.0" fill="rgb(244,104,6)" rx="2" ry="2" />
<text  x="858.59" y="383.5" ></text>
</g>
<g >
<title>runtime.convT2E (1 samples, 0.07%)</title><rect x="573.4" y="373" width="0.9" height="15.0" fill="rgb(253,101,26)" rx="2" ry="2" />
<text  x="576.44" y="383.5" ></text>
</g>
<g >
<title>runtime.findObject (5 samples, 0.37%)</title><rect x="948.8" y="373" width="4.3" height="15.0" fill="rgb(210,139,11)" rx="2" ry="2" />
<text  x="951.77" y="383.5" ></text>
</g>
<g >
<title>math/big.nat.montgomery (1 samples, 0.07%)</title><rect x="280.8" y="277" width="0.9" height="15.0" fill="rgb(216,199,3)" rx="2" ry="2" />
<text  x="283.83" y="287.5" ></text>
</g>
<g >
<title>runtime.add (1 samples, 0.07%)</title><rect x="714.5" y="261" width="0.9" height="15.0" fill="rgb(253,14,42)" rx="2" ry="2" />
<text  x="717.52" y="271.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.07%)</title><rect x="1075.0" y="341" width="0.9" height="15.0" fill="rgb(242,143,44)" rx="2" ry="2" />
<text  x="1078.05" y="351.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).Get (2 samples, 0.15%)</title><rect x="340.1" y="357" width="1.7" height="15.0" fill="rgb(216,110,8)" rx="2" ry="2" />
<text  x="343.05" y="367.5" ></text>
</g>
<g >
<title>syscall.Syscall (26 samples, 1.92%)</title><rect x="589.1" y="309" width="22.7" height="15.0" fill="rgb(219,165,52)" rx="2" ry="2" />
<text  x="592.11" y="319.5" >s..</text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.07%)</title><rect x="337.4" y="229" width="0.9" height="15.0" fill="rgb(234,95,30)" rx="2" ry="2" />
<text  x="340.44" y="239.5" ></text>
</g>
<g >
<title>runtime.chansend (7 samples, 0.52%)</title><rect x="854.7" y="421" width="6.1" height="15.0" fill="rgb(206,185,12)" rx="2" ry="2" />
<text  x="857.72" y="431.5" ></text>
</g>
<g >
<title>syscall.Pwrite (1 samples, 0.07%)</title><rect x="19.6" y="309" width="0.9" height="15.0" fill="rgb(240,35,27)" rx="2" ry="2" />
<text  x="22.58" y="319.5" ></text>
</g>
<g >
<title>fmt.Println (25 samples, 1.85%)</title><rect x="724.1" y="437" width="21.8" height="15.0" fill="rgb(211,3,4)" rx="2" ry="2" />
<text  x="727.10" y="447.5" >f..</text>
</g>
<g >
<title>BCDns_0.1/messages.NewBlockConfirmMessage (2 samples, 0.15%)</title><rect x="280.0" y="421" width="1.7" height="15.0" fill="rgb(241,225,45)" rx="2" ry="2" />
<text  x="282.96" y="431.5" ></text>
</g>
<g >
<title>sort.Slice (1 samples, 0.07%)</title><rect x="617.9" y="325" width="0.8" height="15.0" fill="rgb(212,106,41)" rx="2" ry="2" />
<text  x="620.85" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mspan).scavenge (1 samples, 0.07%)</title><rect x="867.8" y="261" width="0.9" height="15.0" fill="rgb(237,104,10)" rx="2" ry="2" />
<text  x="870.79" y="271.5" ></text>
</g>
<g >
<title>math/big.basicMul (2 samples, 0.15%)</title><rect x="251.2" y="261" width="1.8" height="15.0" fill="rgb(211,151,4)" rx="2" ry="2" />
<text  x="254.23" y="271.5" ></text>
</g>
<g >
<title>runtime.handoffp (2 samples, 0.15%)</title><rect x="1179.5" y="373" width="1.8" height="15.0" fill="rgb(254,88,22)" rx="2" ry="2" />
<text  x="1182.55" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (1 samples, 0.07%)</title><rect x="337.4" y="197" width="0.9" height="15.0" fill="rgb(225,128,34)" rx="2" ry="2" />
<text  x="340.44" y="207.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.15%)</title><rect x="1176.1" y="341" width="1.7" height="15.0" fill="rgb(209,121,1)" rx="2" ry="2" />
<text  x="1179.07" y="351.5" ></text>
</g>
<g >
<title>runtime.stringtoslicebyte (1 samples, 0.07%)</title><rect x="341.8" y="373" width="0.9" height="15.0" fill="rgb(245,208,42)" rx="2" ry="2" />
<text  x="344.79" y="383.5" ></text>
</g>
<g >
<title>runtime.scanstack (17 samples, 1.25%)</title><rect x="912.2" y="341" width="14.8" height="15.0" fill="rgb(213,141,33)" rx="2" ry="2" />
<text  x="915.20" y="351.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.07%)</title><rect x="686.6" y="373" width="0.9" height="15.0" fill="rgb(230,135,6)" rx="2" ry="2" />
<text  x="689.65" y="383.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb/journal.(*Writer).Flush (1 samples, 0.07%)</title><rect x="21.3" y="341" width="0.9" height="15.0" fill="rgb(205,107,16)" rx="2" ry="2" />
<text  x="24.32" y="351.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.07%)</title><rect x="14.4" y="405" width="0.8" height="15.0" fill="rgb(216,77,41)" rx="2" ry="2" />
<text  x="17.35" y="415.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.15%)</title><rect x="784.2" y="325" width="1.7" height="15.0" fill="rgb(229,38,26)" rx="2" ry="2" />
<text  x="787.18" y="335.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (1 samples, 0.07%)</title><rect x="12.6" y="373" width="0.9" height="15.0" fill="rgb(231,196,17)" rx="2" ry="2" />
<text  x="15.61" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (2 samples, 0.15%)</title><rect x="698.8" y="357" width="1.8" height="15.0" fill="rgb(226,158,22)" rx="2" ry="2" />
<text  x="701.84" y="367.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.07%)</title><rect x="585.6" y="325" width="0.9" height="15.0" fill="rgb(216,206,10)" rx="2" ry="2" />
<text  x="588.63" y="335.5" ></text>
</g>
<g >
<title>runtime.selectgo (1 samples, 0.07%)</title><rect x="750.2" y="437" width="0.9" height="15.0" fill="rgb(221,36,37)" rx="2" ry="2" />
<text  x="753.22" y="447.5" ></text>
</g>
<g >
<title>syscall.Write (26 samples, 1.92%)</title><rect x="589.1" y="341" width="22.7" height="15.0" fill="rgb(223,222,43)" rx="2" ry="2" />
<text  x="592.11" y="351.5" >s..</text>
</g>
<g >
<title>syscall.write (1 samples, 0.07%)</title><rect x="21.3" y="229" width="0.9" height="15.0" fill="rgb(237,60,24)" rx="2" ry="2" />
<text  x="24.32" y="239.5" ></text>
</g>
<g >
<title>runtime.notewakeup (4 samples, 0.30%)</title><rect x="855.6" y="293" width="3.5" height="15.0" fill="rgb(240,139,8)" rx="2" ry="2" />
<text  x="858.59" y="303.5" ></text>
</g>
<g >
<title>reflect.typedmemmove (1 samples, 0.07%)</title><rect x="16.1" y="181" width="0.9" height="15.0" fill="rgb(242,4,35)" rx="2" ry="2" />
<text  x="19.10" y="191.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.07%)</title><rect x="303.5" y="181" width="0.8" height="15.0" fill="rgb(208,85,6)" rx="2" ry="2" />
<text  x="306.48" y="191.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.15%)</title><rect x="1177.8" y="341" width="1.7" height="15.0" fill="rgb(216,204,54)" rx="2" ry="2" />
<text  x="1180.81" y="351.5" ></text>
</g>
<g >
<title>runtime.systemstack (6 samples, 0.44%)</title><rect x="622.2" y="405" width="5.2" height="15.0" fill="rgb(230,54,24)" rx="2" ry="2" />
<text  x="625.21" y="415.5" ></text>
</g>
<g >
<title>math/big.nat.norm (1 samples, 0.07%)</title><rect x="547.3" y="229" width="0.9" height="15.0" fill="rgb(243,224,38)" rx="2" ry="2" />
<text  x="550.31" y="239.5" ></text>
</g>
<g >
<title>runtime.noteclear (1 samples, 0.07%)</title><rect x="1038.5" y="373" width="0.8" height="15.0" fill="rgb(209,101,35)" rx="2" ry="2" />
<text  x="1041.47" y="383.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (2 samples, 0.15%)</title><rect x="246.9" y="245" width="1.7" height="15.0" fill="rgb(235,44,36)" rx="2" ry="2" />
<text  x="249.87" y="255.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.07%)</title><rect x="924.4" y="261" width="0.9" height="15.0" fill="rgb(209,127,37)" rx="2" ry="2" />
<text  x="927.39" y="271.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (3 samples, 0.22%)</title><rect x="334.8" y="357" width="2.6" height="15.0" fill="rgb(224,115,3)" rx="2" ry="2" />
<text  x="337.83" y="367.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (2 samples, 0.15%)</title><rect x="571.7" y="373" width="1.7" height="15.0" fill="rgb(248,46,13)" rx="2" ry="2" />
<text  x="574.70" y="383.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Sign (261 samples, 19.26%)</title><rect x="347.9" y="405" width="227.3" height="15.0" fill="rgb(234,75,36)" rx="2" ry="2" />
<text  x="350.89" y="415.5" >BCDns_0.1/messages.(*ProposalM..</text>
</g>
<g >
<title>crypto/sha256.block (1 samples, 0.07%)</title><rect x="342.7" y="325" width="0.8" height="15.0" fill="rgb(249,96,38)" rx="2" ry="2" />
<text  x="345.66" y="335.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (4 samples, 0.30%)</title><rect x="23.9" y="357" width="3.5" height="15.0" fill="rgb(214,51,37)" rx="2" ry="2" />
<text  x="26.93" y="367.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.15%)</title><rect x="1176.1" y="389" width="1.7" height="15.0" fill="rgb(249,3,52)" rx="2" ry="2" />
<text  x="1179.07" y="399.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (1 samples, 0.07%)</title><rect x="536.9" y="261" width="0.8" height="15.0" fill="rgb(216,106,45)" rx="2" ry="2" />
<text  x="539.86" y="271.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb/journal.(*Writer).writePending (1 samples, 0.07%)</title><rect x="21.3" y="325" width="0.9" height="15.0" fill="rgb(225,142,3)" rx="2" ry="2" />
<text  x="24.32" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*scanner).pushParseState (1 samples, 0.07%)</title><rect x="323.5" y="389" width="0.9" height="15.0" fill="rgb(252,116,39)" rx="2" ry="2" />
<text  x="326.51" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (44 samples, 3.25%)</title><rect x="632.7" y="325" width="38.3" height="15.0" fill="rgb(230,66,42)" rx="2" ry="2" />
<text  x="635.66" y="335.5" >mat..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="27.4" y="309" width="0.9" height="15.0" fill="rgb(219,30,38)" rx="2" ry="2" />
<text  x="30.42" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.07%)</title><rect x="697.1" y="341" width="0.9" height="15.0" fill="rgb(230,119,3)" rx="2" ry="2" />
<text  x="700.10" y="351.5" ></text>
</g>
<g >
<title>os.(*File).Write (4 samples, 0.30%)</title><rect x="720.6" y="405" width="3.5" height="15.0" fill="rgb(242,199,16)" rx="2" ry="2" />
<text  x="723.61" y="415.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.07%)</title><rect x="1022.8" y="357" width="0.9" height="15.0" fill="rgb(211,88,27)" rx="2" ry="2" />
<text  x="1025.80" y="367.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).addObject (2 samples, 0.15%)</title><rect x="918.3" y="277" width="1.7" height="15.0" fill="rgb(219,155,40)" rx="2" ry="2" />
<text  x="921.30" y="287.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (1 samples, 0.07%)</title><rect x="862.6" y="357" width="0.8" height="15.0" fill="rgb(232,183,27)" rx="2" ry="2" />
<text  x="865.56" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.07%)</title><rect x="536.0" y="133" width="0.9" height="15.0" fill="rgb(245,217,22)" rx="2" ry="2" />
<text  x="538.99" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.07%)</title><rect x="262.5" y="245" width="0.9" height="15.0" fill="rgb(225,16,46)" rx="2" ry="2" />
<text  x="265.55" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.30%)</title><rect x="716.3" y="261" width="3.4" height="15.0" fill="rgb(252,32,34)" rx="2" ry="2" />
<text  x="719.26" y="271.5" ></text>
</g>
<g >
<title>math/big.addVV (1 samples, 0.07%)</title><rect x="544.7" y="229" width="0.9" height="15.0" fill="rgb(234,68,35)" rx="2" ry="2" />
<text  x="547.70" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="860.8" y="421" width="0.9" height="15.0" fill="rgb(240,116,43)" rx="2" ry="2" />
<text  x="863.82" y="431.5" ></text>
</g>
<g >
<title>syscall.write (3 samples, 0.22%)</title><rect x="752.8" y="341" width="2.6" height="15.0" fill="rgb(245,139,22)" rx="2" ry="2" />
<text  x="755.83" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.07%)</title><rect x="263.4" y="357" width="0.9" height="15.0" fill="rgb(209,157,48)" rx="2" ry="2" />
<text  x="266.42" y="367.5" ></text>
</g>
<g >
<title>runtime.procyield (2 samples, 0.15%)</title><rect x="909.6" y="341" width="1.7" height="15.0" fill="rgb(249,2,51)" rx="2" ry="2" />
<text  x="912.59" y="351.5" ></text>
</g>
<g >
<title>math/big.nat.div (14 samples, 1.03%)</title><rect x="237.3" y="277" width="12.2" height="15.0" fill="rgb(245,135,23)" rx="2" ry="2" />
<text  x="240.29" y="287.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).checkSum (1 samples, 0.07%)</title><rect x="342.7" y="357" width="0.8" height="15.0" fill="rgb(213,179,1)" rx="2" ry="2" />
<text  x="345.66" y="367.5" ></text>
</g>
<g >
<title>runtime/pprof.(*profileBuilder).addCPUData (1 samples, 0.07%)</title><rect x="1189.1" y="437" width="0.9" height="15.0" fill="rgb(210,33,43)" rx="2" ry="2" />
<text  x="1192.13" y="447.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (2 samples, 0.15%)</title><rect x="253.0" y="357" width="1.7" height="15.0" fill="rgb(236,148,33)" rx="2" ry="2" />
<text  x="255.97" y="367.5" ></text>
</g>
<g >
<title>math/big.greaterThan (1 samples, 0.07%)</title><rect x="292.2" y="293" width="0.8" height="15.0" fill="rgb(227,123,10)" rx="2" ry="2" />
<text  x="295.15" y="303.5" ></text>
</g>
<g >
<title>math/big.nat.bitLen (1 samples, 0.07%)</title><rect x="281.7" y="341" width="0.9" height="15.0" fill="rgb(236,44,16)" rx="2" ry="2" />
<text  x="284.70" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).AddBlock (10 samples, 0.74%)</title><rect x="15.2" y="421" width="8.7" height="15.0" fill="rgb(218,160,11)" rx="2" ry="2" />
<text  x="18.23" y="431.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.getDigest2 (4 samples, 0.30%)</title><rect x="627.4" y="405" width="3.5" height="15.0" fill="rgb(242,24,22)" rx="2" ry="2" />
<text  x="630.43" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (1 samples, 0.07%)</title><rect x="337.4" y="261" width="0.9" height="15.0" fill="rgb(251,160,48)" rx="2" ry="2" />
<text  x="340.44" y="271.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.07%)</title><rect x="728.5" y="325" width="0.8" height="15.0" fill="rgb(230,91,33)" rx="2" ry="2" />
<text  x="731.45" y="335.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (2 samples, 0.15%)</title><rect x="374.0" y="261" width="1.8" height="15.0" fill="rgb(214,172,9)" rx="2" ry="2" />
<text  x="377.01" y="271.5" ></text>
</g>
<g >
<title>runtime.startm (4 samples, 0.30%)</title><rect x="855.6" y="309" width="3.5" height="15.0" fill="rgb(207,22,54)" rx="2" ry="2" />
<text  x="858.59" y="319.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.07%)</title><rect x="212.0" y="85" width="0.9" height="15.0" fill="rgb(221,48,31)" rx="2" ry="2" />
<text  x="215.04" y="95.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.07%)</title><rect x="792.0" y="325" width="0.9" height="15.0" fill="rgb(219,150,53)" rx="2" ry="2" />
<text  x="795.02" y="335.5" ></text>
</g>
<g >
<title>math/big.subVV (3 samples, 0.22%)</title><rect x="297.4" y="293" width="2.6" height="15.0" fill="rgb(216,155,14)" rx="2" ry="2" />
<text  x="300.38" y="303.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*node).write (1 samples, 0.07%)</title><rect x="18.7" y="309" width="0.9" height="15.0" fill="rgb(243,179,6)" rx="2" ry="2" />
<text  x="21.71" y="319.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.07%)</title><rect x="1180.4" y="341" width="0.9" height="15.0" fill="rgb(249,190,33)" rx="2" ry="2" />
<text  x="1183.42" y="351.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (2 samples, 0.15%)</title><rect x="913.1" y="293" width="1.7" height="15.0" fill="rgb(220,105,16)" rx="2" ry="2" />
<text  x="916.07" y="303.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.07%)</title><rect x="680.6" y="325" width="0.8" height="15.0" fill="rgb(248,91,26)" rx="2" ry="2" />
<text  x="683.55" y="335.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).grow (1 samples, 0.07%)</title><rect x="15.2" y="197" width="0.9" height="15.0" fill="rgb(228,183,38)" rx="2" ry="2" />
<text  x="18.23" y="207.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.15%)</title><rect x="1177.8" y="325" width="1.7" height="15.0" fill="rgb(205,19,29)" rx="2" ry="2" />
<text  x="1180.81" y="335.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (2 samples, 0.15%)</title><rect x="800.7" y="389" width="1.8" height="15.0" fill="rgb(221,124,15)" rx="2" ry="2" />
<text  x="803.73" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.07%)</title><rect x="525.5" y="197" width="0.9" height="15.0" fill="rgb(206,40,20)" rx="2" ry="2" />
<text  x="528.54" y="207.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (1 samples, 0.07%)</title><rect x="924.4" y="245" width="0.9" height="15.0" fill="rgb(217,220,14)" rx="2" ry="2" />
<text  x="927.39" y="255.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (2 samples, 0.15%)</title><rect x="15.2" y="357" width="1.8" height="15.0" fill="rgb(248,13,52)" rx="2" ry="2" />
<text  x="18.23" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.07%)</title><rect x="15.2" y="37" width="0.9" height="15.0" fill="rgb(219,192,38)" rx="2" ry="2" />
<text  x="18.23" y="47.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (1 samples, 0.07%)</title><rect x="24.8" y="117" width="0.9" height="15.0" fill="rgb(244,162,50)" rx="2" ry="2" />
<text  x="27.80" y="127.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.07%)</title><rect x="686.6" y="389" width="0.9" height="15.0" fill="rgb(250,149,9)" rx="2" ry="2" />
<text  x="689.65" y="399.5" ></text>
</g>
<g >
<title>runtime.chansend1 (2 samples, 0.15%)</title><rect x="325.2" y="437" width="1.8" height="15.0" fill="rgb(224,54,31)" rx="2" ry="2" />
<text  x="328.25" y="447.5" ></text>
</g>
<g >
<title>encoding/json.unquoteBytes (1 samples, 0.07%)</title><rect x="578.7" y="293" width="0.8" height="15.0" fill="rgb(213,46,11)" rx="2" ry="2" />
<text  x="581.66" y="303.5" ></text>
</g>
<g >
<title>encoding/json.typeEncoder (1 samples, 0.07%)</title><rect x="253.8" y="293" width="0.9" height="15.0" fill="rgb(231,2,2)" rx="2" ry="2" />
<text  x="256.84" y="303.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.07%)</title><rect x="863.4" y="309" width="0.9" height="15.0" fill="rgb(239,11,33)" rx="2" ry="2" />
<text  x="866.43" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.div (16 samples, 1.18%)</title><rect x="556.0" y="293" width="14.0" height="15.0" fill="rgb(248,42,52)" rx="2" ry="2" />
<text  x="559.02" y="303.5" ></text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (2 samples, 0.15%)</title><rect x="15.2" y="277" width="1.8" height="15.0" fill="rgb(217,68,53)" rx="2" ry="2" />
<text  x="18.23" y="287.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (3 samples, 0.22%)</title><rect x="28.3" y="277" width="2.6" height="15.0" fill="rgb(254,225,10)" rx="2" ry="2" />
<text  x="31.29" y="287.5" ></text>
</g>
<g >
<title>syscall.write (4 samples, 0.30%)</title><rect x="720.6" y="341" width="3.5" height="15.0" fill="rgb(244,157,23)" rx="2" ry="2" />
<text  x="723.61" y="351.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (1 samples, 0.07%)</title><rect x="536.9" y="277" width="0.8" height="15.0" fill="rgb(237,199,4)" rx="2" ry="2" />
<text  x="539.86" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.07%)</title><rect x="532.5" y="245" width="0.9" height="15.0" fill="rgb(217,177,1)" rx="2" ry="2" />
<text  x="535.51" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).freeSpan (2 samples, 0.15%)</title><rect x="907.0" y="277" width="1.7" height="15.0" fill="rgb(229,134,16)" rx="2" ry="2" />
<text  x="909.97" y="287.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.07%)</title><rect x="40.5" y="213" width="0.9" height="15.0" fill="rgb(236,137,48)" rx="2" ry="2" />
<text  x="43.48" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.07%)</title><rect x="337.4" y="213" width="0.9" height="15.0" fill="rgb(252,35,25)" rx="2" ry="2" />
<text  x="340.44" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.15%)</title><rect x="1182.2" y="389" width="1.7" height="15.0" fill="rgb(241,8,34)" rx="2" ry="2" />
<text  x="1185.16" y="399.5" ></text>
</g>
<g >
<title>reflect.Value.MapKeys (1 samples, 0.07%)</title><rect x="571.7" y="309" width="0.9" height="15.0" fill="rgb(224,93,16)" rx="2" ry="2" />
<text  x="574.70" y="319.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.07%)</title><rect x="731.9" y="373" width="0.9" height="15.0" fill="rgb(241,18,40)" rx="2" ry="2" />
<text  x="734.93" y="383.5" ></text>
</g>
<g >
<title>internal/fmtsort.(*SortedMap).Less (1 samples, 0.07%)</title><rect x="731.1" y="293" width="0.8" height="15.0" fill="rgb(253,189,28)" rx="2" ry="2" />
<text  x="734.06" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).freeSpan (1 samples, 0.07%)</title><rect x="904.4" y="405" width="0.8" height="15.0" fill="rgb(235,153,34)" rx="2" ry="2" />
<text  x="907.36" y="415.5" ></text>
</g>
<g >
<title>runtime.trygetfull (1 samples, 0.07%)</title><rect x="327.0" y="309" width="0.9" height="15.0" fill="rgb(212,216,52)" rx="2" ry="2" />
<text  x="329.99" y="319.5" ></text>
</g>
<g >
<title>io.ReadFull (1 samples, 0.07%)</title><rect x="349.6" y="309" width="0.9" height="15.0" fill="rgb(212,129,44)" rx="2" ry="2" />
<text  x="352.63" y="319.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (2 samples, 0.15%)</title><rect x="293.0" y="293" width="1.8" height="15.0" fill="rgb(252,199,16)" rx="2" ry="2" />
<text  x="296.03" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (2 samples, 0.15%)</title><rect x="15.2" y="341" width="1.8" height="15.0" fill="rgb(217,103,51)" rx="2" ry="2" />
<text  x="18.23" y="351.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.07%)</title><rect x="792.0" y="357" width="0.9" height="15.0" fill="rgb(212,93,28)" rx="2" ry="2" />
<text  x="795.02" y="367.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (6 samples, 0.44%)</title><rect x="691.9" y="357" width="5.2" height="15.0" fill="rgb(212,140,37)" rx="2" ry="2" />
<text  x="694.87" y="367.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.07%)</title><rect x="253.8" y="277" width="0.9" height="15.0" fill="rgb(230,101,36)" rx="2" ry="2" />
<text  x="256.84" y="287.5" ></text>
</g>
</g>
</svg>

