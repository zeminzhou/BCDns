<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="630.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="613" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="613" > </text>
<g id="frames">
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Hash (3 samples, 0.49%)</title><rect x="279.7" y="517" width="5.7" height="15.0" fill="rgb(252,136,49)" rx="2" ry="2" />
<text  x="282.66" y="527.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (2 samples, 0.32%)</title><rect x="847.7" y="485" width="3.8" height="15.0" fill="rgb(239,167,19)" rx="2" ry="2" />
<text  x="850.67" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.16%)</title><rect x="887.8" y="437" width="1.9" height="15.0" fill="rgb(240,140,4)" rx="2" ry="2" />
<text  x="890.83" y="447.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteString (1 samples, 0.16%)</title><rect x="31.0" y="309" width="1.9" height="15.0" fill="rgb(228,133,12)" rx="2" ry="2" />
<text  x="34.04" y="319.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (1 samples, 0.16%)</title><rect x="52.1" y="437" width="1.9" height="15.0" fill="rgb(244,37,32)" rx="2" ry="2" />
<text  x="55.07" y="447.5" ></text>
</g>
<g >
<title>reflect.toType (1 samples, 0.16%)</title><rect x="203.2" y="373" width="1.9" height="15.0" fill="rgb(206,193,38)" rx="2" ry="2" />
<text  x="206.16" y="383.5" ></text>
</g>
<g >
<title>encoding/json.encodeByteSlice (1 samples, 0.16%)</title><rect x="23.4" y="437" width="1.9" height="15.0" fill="rgb(214,201,1)" rx="2" ry="2" />
<text  x="26.39" y="447.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (1 samples, 0.16%)</title><rect x="203.2" y="469" width="1.9" height="15.0" fill="rgb(220,142,50)" rx="2" ry="2" />
<text  x="206.16" y="479.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.DNode.Send (1 samples, 0.16%)</title><rect x="229.9" y="517" width="1.9" height="15.0" fill="rgb(241,136,16)" rx="2" ry="2" />
<text  x="232.94" y="527.5" ></text>
</g>
<g >
<title>runtime.send (4 samples, 0.65%)</title><rect x="954.8" y="517" width="7.6" height="15.0" fill="rgb(240,186,38)" rx="2" ry="2" />
<text  x="957.76" y="527.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (10 samples, 1.62%)</title><rect x="384.8" y="389" width="19.2" height="15.0" fill="rgb(223,103,1)" rx="2" ry="2" />
<text  x="387.85" y="399.5" ></text>
</g>
<g >
<title>syscall.write (1 samples, 0.16%)</title><rect x="42.5" y="341" width="1.9" height="15.0" fill="rgb(236,39,49)" rx="2" ry="2" />
<text  x="45.51" y="351.5" ></text>
</g>
<g >
<title>runtime.makechan (2 samples, 0.32%)</title><rect x="870.6" y="517" width="3.8" height="15.0" fill="rgb(208,99,3)" rx="2" ry="2" />
<text  x="873.62" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mspan).scavenge (1 samples, 0.16%)</title><rect x="964.3" y="501" width="1.9" height="15.0" fill="rgb(219,7,17)" rx="2" ry="2" />
<text  x="967.33" y="511.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (2 samples, 0.32%)</title><rect x="210.8" y="373" width="3.8" height="15.0" fill="rgb(217,116,12)" rx="2" ry="2" />
<text  x="213.81" y="383.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (1 samples, 0.16%)</title><rect x="48.2" y="245" width="2.0" height="15.0" fill="rgb(220,51,36)" rx="2" ry="2" />
<text  x="51.25" y="255.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).MineBlock (5 samples, 0.81%)</title><rect x="10.0" y="533" width="9.6" height="15.0" fill="rgb(246,115,49)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>os.(*File).Write (1 samples, 0.16%)</title><rect x="859.1" y="517" width="2.0" height="15.0" fill="rgb(238,173,28)" rx="2" ry="2" />
<text  x="862.14" y="527.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).ValidateMod (34 samples, 5.51%)</title><rect x="231.8" y="533" width="65.1" height="15.0" fill="rgb(252,9,29)" rx="2" ry="2" />
<text  x="234.85" y="543.5" >BCDns_0..</text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (3 samples, 0.49%)</title><rect x="354.2" y="453" width="5.8" height="15.0" fill="rgb(205,124,38)" rx="2" ry="2" />
<text  x="357.25" y="463.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.16%)</title><rect x="29.1" y="517" width="1.9" height="15.0" fill="rgb(211,187,40)" rx="2" ry="2" />
<text  x="32.12" y="527.5" ></text>
</g>
<g >
<title>fmt.Println (11 samples, 1.78%)</title><rect x="889.7" y="549" width="21.1" height="15.0" fill="rgb(220,110,0)" rx="2" ry="2" />
<text  x="892.74" y="559.5" ></text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode (4 samples, 0.65%)</title><rect x="784.6" y="485" width="7.6" height="15.0" fill="rgb(254,152,15)" rx="2" ry="2" />
<text  x="787.55" y="495.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Sign (201 samples, 32.58%)</title><rect x="361.9" y="517" width="384.4" height="15.0" fill="rgb(243,184,38)" rx="2" ry="2" />
<text  x="364.90" y="527.5" >BCDns_0.1/messages.(*ProposalMessage).Sign</text>
</g>
<g >
<title>all (617 samples, 100%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(223,72,11)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (2 samples, 0.32%)</title><rect x="411.6" y="373" width="3.8" height="15.0" fill="rgb(240,138,3)" rx="2" ry="2" />
<text  x="414.62" y="383.5" ></text>
</g>
<g >
<title>os.(*File).Write (2 samples, 0.32%)</title><rect x="847.7" y="517" width="3.8" height="15.0" fill="rgb(230,10,51)" rx="2" ry="2" />
<text  x="850.67" y="527.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.16%)</title><rect x="226.1" y="325" width="1.9" height="15.0" fill="rgb(206,213,15)" rx="2" ry="2" />
<text  x="229.11" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.16%)</title><rect x="828.5" y="469" width="2.0" height="15.0" fill="rgb(221,48,20)" rx="2" ry="2" />
<text  x="831.54" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.32%)</title><rect x="342.8" y="341" width="3.8" height="15.0" fill="rgb(221,48,43)" rx="2" ry="2" />
<text  x="345.77" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).Sign (78 samples, 12.64%)</title><rect x="54.0" y="485" width="149.2" height="15.0" fill="rgb(247,172,4)" rx="2" ry="2" />
<text  x="56.99" y="495.5" >BCDns_0.1/certifica..</text>
</g>
<g >
<title>math/big.subVV (2 samples, 0.32%)</title><rect x="660.2" y="373" width="3.9" height="15.0" fill="rgb(209,190,51)" rx="2" ry="2" />
<text  x="663.24" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (4 samples, 0.65%)</title><rect x="285.4" y="469" width="7.6" height="15.0" fill="rgb(209,221,19)" rx="2" ry="2" />
<text  x="288.40" y="479.5" ></text>
</g>
<g >
<title>sync.(*Pool).getSlow (1 samples, 0.16%)</title><rect x="396.3" y="341" width="1.9" height="15.0" fill="rgb(241,229,35)" rx="2" ry="2" />
<text  x="399.32" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalReplyMessage).Hash (1 samples, 0.16%)</title><rect x="203.2" y="485" width="1.9" height="15.0" fill="rgb(248,160,52)" rx="2" ry="2" />
<text  x="206.16" y="495.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.16%)</title><rect x="197.4" y="325" width="1.9" height="15.0" fill="rgb(208,189,19)" rx="2" ry="2" />
<text  x="200.42" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.16%)</title><rect x="203.2" y="453" width="1.9" height="15.0" fill="rgb(230,188,4)" rx="2" ry="2" />
<text  x="206.16" y="463.5" ></text>
</g>
<g >
<title>os.(*File).pwrite (1 samples, 0.16%)</title><rect x="38.7" y="453" width="1.9" height="15.0" fill="rgb(209,91,26)" rx="2" ry="2" />
<text  x="41.69" y="463.5" ></text>
</g>
<g >
<title>runtime.futexsleep (7 samples, 1.13%)</title><rect x="1098.2" y="485" width="13.4" height="15.0" fill="rgb(244,199,12)" rx="2" ry="2" />
<text  x="1101.20" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (4 samples, 0.65%)</title><rect x="354.2" y="469" width="7.7" height="15.0" fill="rgb(218,76,14)" rx="2" ry="2" />
<text  x="357.25" y="479.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb/comparer.bytesComparer.Compare (2 samples, 0.32%)</title><rect x="346.6" y="357" width="3.8" height="15.0" fill="rgb(241,124,25)" rx="2" ry="2" />
<text  x="349.60" y="367.5" ></text>
</g>
<g >
<title>reflect.cvtBytesString (1 samples, 0.16%)</title><rect x="48.2" y="293" width="2.0" height="15.0" fill="rgb(254,22,25)" rx="2" ry="2" />
<text  x="51.25" y="303.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Proposer).ReceiveOrder (11 samples, 1.78%)</title><rect x="319.8" y="565" width="21.1" height="15.0" fill="rgb(238,184,40)" rx="2" ry="2" />
<text  x="322.82" y="575.5" ></text>
</g>
<g >
<title>internal/fmtsort.Sort (2 samples, 0.32%)</title><rect x="843.8" y="453" width="3.9" height="15.0" fill="rgb(228,188,49)" rx="2" ry="2" />
<text  x="846.84" y="463.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (2 samples, 0.32%)</title><rect x="34.9" y="469" width="3.8" height="15.0" fill="rgb(235,223,30)" rx="2" ry="2" />
<text  x="37.86" y="479.5" ></text>
</g>
<g >
<title>sync.indexLocal (1 samples, 0.16%)</title><rect x="197.4" y="309" width="1.9" height="15.0" fill="rgb(246,98,14)" rx="2" ry="2" />
<text  x="200.42" y="319.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.16%)</title><rect x="32.9" y="261" width="2.0" height="15.0" fill="rgb(243,91,34)" rx="2" ry="2" />
<text  x="35.95" y="271.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.PostLock (2 samples, 0.32%)</title><rect x="210.8" y="469" width="3.8" height="15.0" fill="rgb(242,115,16)" rx="2" ry="2" />
<text  x="213.81" y="479.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Leader).Run (11 samples, 1.78%)</title><rect x="10.0" y="565" width="21.0" height="15.0" fill="rgb(250,45,39)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.PackMessage (1 samples, 0.16%)</title><rect x="23.4" y="517" width="1.9" height="15.0" fill="rgb(219,222,24)" rx="2" ry="2" />
<text  x="26.39" y="527.5" ></text>
</g>
<g >
<title>math/big.shrVU (1 samples, 0.16%)</title><rect x="813.2" y="421" width="2.0" height="15.0" fill="rgb(210,107,13)" rx="2" ry="2" />
<text  x="816.24" y="431.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.32%)</title><rect x="335.1" y="389" width="3.8" height="15.0" fill="rgb(214,120,28)" rx="2" ry="2" />
<text  x="338.12" y="399.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock (5 samples, 0.81%)</title><rect x="44.4" y="533" width="9.6" height="15.0" fill="rgb(248,51,18)" rx="2" ry="2" />
<text  x="47.42" y="543.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.NewProposal (223 samples, 36.14%)</title><rect x="342.8" y="533" width="426.5" height="15.0" fill="rgb(249,109,31)" rx="2" ry="2" />
<text  x="345.77" y="543.5" >BCDns_0.1/messages.NewProposal</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.16%)</title><rect x="338.9" y="485" width="2.0" height="15.0" fill="rgb(235,71,43)" rx="2" ry="2" />
<text  x="341.95" y="495.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.16%)</title><rect x="863.0" y="517" width="1.9" height="15.0" fill="rgb(211,53,40)" rx="2" ry="2" />
<text  x="865.97" y="527.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).View (5 samples, 0.81%)</title><rect x="10.0" y="501" width="9.6" height="15.0" fill="rgb(209,90,20)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.32%)</title><rect x="296.9" y="453" width="3.8" height="15.0" fill="rgb(213,49,53)" rx="2" ry="2" />
<text  x="299.87" y="463.5" ></text>
</g>
<g >
<title>runtime.mapdelete (1 samples, 0.16%)</title><rect x="218.5" y="453" width="1.9" height="15.0" fill="rgb(210,193,47)" rx="2" ry="2" />
<text  x="221.46" y="463.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Elem (1 samples, 0.16%)</title><rect x="203.2" y="389" width="1.9" height="15.0" fill="rgb(243,225,8)" rx="2" ry="2" />
<text  x="206.16" y="399.5" ></text>
</g>
<g >
<title>syscall.Pwrite (1 samples, 0.16%)</title><rect x="38.7" y="421" width="1.9" height="15.0" fill="rgb(216,69,25)" rx="2" ry="2" />
<text  x="41.69" y="431.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.16%)</title><rect x="811.3" y="421" width="1.9" height="15.0" fill="rgb(205,75,41)" rx="2" ry="2" />
<text  x="814.33" y="431.5" ></text>
</g>
<g >
<title>encoding/json.intEncoder (1 samples, 0.16%)</title><rect x="27.2" y="421" width="1.9" height="15.0" fill="rgb(221,164,40)" rx="2" ry="2" />
<text  x="30.21" y="431.5" ></text>
</g>
<g >
<title>runtime.park_m (44 samples, 7.13%)</title><rect x="1008.3" y="549" width="84.2" height="15.0" fill="rgb(232,106,14)" rx="2" ry="2" />
<text  x="1011.31" y="559.5" >runtime.p..</text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.16%)</title><rect x="740.6" y="421" width="1.9" height="15.0" fill="rgb(223,191,20)" rx="2" ry="2" />
<text  x="743.57" y="431.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DB).Get (1 samples, 0.16%)</title><rect x="275.8" y="485" width="1.9" height="15.0" fill="rgb(213,180,22)" rx="2" ry="2" />
<text  x="278.83" y="495.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*BlockMessage).Sign (1 samples, 0.16%)</title><rect x="19.6" y="517" width="1.9" height="15.0" fill="rgb(239,90,33)" rx="2" ry="2" />
<text  x="22.56" y="527.5" ></text>
</g>
<g >
<title>sync/atomic.(*Value).Load (1 samples, 0.16%)</title><rect x="279.7" y="405" width="1.9" height="15.0" fill="rgb(242,74,23)" rx="2" ry="2" />
<text  x="282.66" y="415.5" ></text>
</g>
<g >
<title>encoding/json.uintEncoder (1 samples, 0.16%)</title><rect x="360.0" y="453" width="1.9" height="15.0" fill="rgb(227,180,15)" rx="2" ry="2" />
<text  x="362.98" y="463.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.16%)</title><rect x="975.8" y="341" width="1.9" height="15.0" fill="rgb(237,183,39)" rx="2" ry="2" />
<text  x="978.80" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).BroadCast (1 samples, 0.16%)</title><rect x="23.4" y="533" width="1.9" height="15.0" fill="rgb(215,108,6)" rx="2" ry="2" />
<text  x="26.39" y="543.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.16%)</title><rect x="21.5" y="517" width="1.9" height="15.0" fill="rgb(239,214,50)" rx="2" ry="2" />
<text  x="24.47" y="527.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.16%)</title><rect x="824.7" y="421" width="1.9" height="15.0" fill="rgb(252,160,37)" rx="2" ry="2" />
<text  x="827.72" y="431.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (3 samples, 0.49%)</title><rect x="224.2" y="341" width="5.7" height="15.0" fill="rgb(210,57,26)" rx="2" ry="2" />
<text  x="227.20" y="351.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.32%)</title><rect x="335.1" y="373" width="3.8" height="15.0" fill="rgb(218,67,19)" rx="2" ry="2" />
<text  x="338.12" y="383.5" ></text>
</g>
<g >
<title>net.(*conn).Read (10 samples, 1.62%)</title><rect x="319.8" y="549" width="19.1" height="15.0" fill="rgb(206,51,37)" rx="2" ry="2" />
<text  x="322.82" y="559.5" ></text>
</g>
<g >
<title>aeshashbody (1 samples, 0.16%)</title><rect x="344.7" y="245" width="1.9" height="15.0" fill="rgb(211,73,51)" rx="2" ry="2" />
<text  x="347.68" y="255.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Iterator).Next (2 samples, 0.32%)</title><rect x="342.8" y="453" width="3.8" height="15.0" fill="rgb(246,17,50)" rx="2" ry="2" />
<text  x="345.77" y="463.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.16%)</title><rect x="1182.4" y="453" width="1.9" height="15.0" fill="rgb(232,97,53)" rx="2" ry="2" />
<text  x="1185.35" y="463.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.16%)</title><rect x="279.7" y="485" width="1.9" height="15.0" fill="rgb(242,129,40)" rx="2" ry="2" />
<text  x="282.66" y="495.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (4 samples, 0.65%)</title><rect x="671.7" y="405" width="7.7" height="15.0" fill="rgb(211,168,17)" rx="2" ry="2" />
<text  x="674.72" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.32%)</title><rect x="880.2" y="469" width="3.8" height="15.0" fill="rgb(243,156,8)" rx="2" ry="2" />
<text  x="883.18" y="479.5" ></text>
</g>
<g >
<title>runtime.newproc1 (3 samples, 0.49%)</title><rect x="792.2" y="485" width="5.7" height="15.0" fill="rgb(240,154,13)" rx="2" ry="2" />
<text  x="795.20" y="495.5" ></text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.16%)</title><rect x="40.6" y="405" width="1.9" height="15.0" fill="rgb(223,172,27)" rx="2" ry="2" />
<text  x="43.60" y="415.5" ></text>
</g>
<g >
<title>reflect.Value.Field (1 samples, 0.16%)</title><rect x="830.5" y="485" width="1.9" height="15.0" fill="rgb(241,6,36)" rx="2" ry="2" />
<text  x="833.45" y="495.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.16%)</title><rect x="1052.3" y="469" width="1.9" height="15.0" fill="rgb(239,68,6)" rx="2" ry="2" />
<text  x="1055.30" y="479.5" ></text>
</g>
<g >
<title>encoding/json.cachedTypeFields (1 samples, 0.16%)</title><rect x="302.6" y="485" width="1.9" height="15.0" fill="rgb(210,187,16)" rx="2" ry="2" />
<text  x="305.61" y="495.5" ></text>
</g>
<g >
<title>syscall.Syscall (6 samples, 0.97%)</title><rect x="769.3" y="421" width="11.4" height="15.0" fill="rgb(213,219,33)" rx="2" ry="2" />
<text  x="772.25" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).removeNode (1 samples, 0.16%)</title><rect x="50.2" y="69" width="1.9" height="15.0" fill="rgb(216,93,8)" rx="2" ry="2" />
<text  x="53.16" y="79.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.32%)</title><rect x="314.1" y="421" width="3.8" height="15.0" fill="rgb(246,148,53)" rx="2" ry="2" />
<text  x="317.08" y="431.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (1 samples, 0.16%)</title><rect x="885.9" y="501" width="1.9" height="15.0" fill="rgb(207,67,46)" rx="2" ry="2" />
<text  x="888.92" y="511.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (2 samples, 0.32%)</title><rect x="34.9" y="485" width="3.8" height="15.0" fill="rgb(254,179,5)" rx="2" ry="2" />
<text  x="37.86" y="495.5" ></text>
</g>
<g >
<title>math/big.nat.sub (2 samples, 0.32%)</title><rect x="694.7" y="357" width="3.8" height="15.0" fill="rgb(211,21,16)" rx="2" ry="2" />
<text  x="697.67" y="367.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (2 samples, 0.32%)</title><rect x="256.7" y="389" width="3.8" height="15.0" fill="rgb(216,147,29)" rx="2" ry="2" />
<text  x="259.71" y="399.5" ></text>
</g>
<g >
<title>crypto/rsa.pkcs1v15HashInfo (1 samples, 0.16%)</title><rect x="273.9" y="485" width="1.9" height="15.0" fill="rgb(215,104,25)" rx="2" ry="2" />
<text  x="276.92" y="495.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.16%)</title><rect x="855.3" y="501" width="1.9" height="15.0" fill="rgb(247,223,31)" rx="2" ry="2" />
<text  x="858.32" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (2 samples, 0.32%)</title><rect x="31.0" y="453" width="3.9" height="15.0" fill="rgb(213,1,4)" rx="2" ry="2" />
<text  x="34.04" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).mutate (1 samples, 0.16%)</title><rect x="658.3" y="181" width="1.9" height="15.0" fill="rgb(233,156,49)" rx="2" ry="2" />
<text  x="661.33" y="191.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (4 samples, 0.65%)</title><rect x="44.4" y="437" width="7.7" height="15.0" fill="rgb(208,141,6)" rx="2" ry="2" />
<text  x="47.42" y="447.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).ProcessBlockMessage (5 samples, 0.81%)</title><rect x="222.3" y="549" width="9.5" height="15.0" fill="rgb(247,185,6)" rx="2" ry="2" />
<text  x="225.29" y="559.5" ></text>
</g>
<g >
<title>runtime.scanobject (8 samples, 1.30%)</title><rect x="977.7" y="501" width="15.3" height="15.0" fill="rgb(210,168,9)" rx="2" ry="2" />
<text  x="980.71" y="511.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (1 samples, 0.16%)</title><rect x="201.2" y="389" width="2.0" height="15.0" fill="rgb(212,126,21)" rx="2" ry="2" />
<text  x="204.25" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.mulAddWW (2 samples, 0.32%)</title><rect x="184.0" y="325" width="3.9" height="15.0" fill="rgb(239,205,8)" rx="2" ry="2" />
<text  x="187.04" y="335.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.16%)</title><rect x="855.3" y="453" width="1.9" height="15.0" fill="rgb(240,41,20)" rx="2" ry="2" />
<text  x="858.32" y="463.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.16%)</title><rect x="1004.5" y="469" width="1.9" height="15.0" fill="rgb(213,76,7)" rx="2" ry="2" />
<text  x="1007.49" y="479.5" ></text>
</g>
<g >
<title>syscall.Write (6 samples, 0.97%)</title><rect x="769.3" y="453" width="11.4" height="15.0" fill="rgb(253,124,40)" rx="2" ry="2" />
<text  x="772.25" y="463.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.16%)</title><rect x="876.4" y="501" width="1.9" height="15.0" fill="rgb(243,155,13)" rx="2" ry="2" />
<text  x="879.35" y="511.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.16%)</title><rect x="989.2" y="469" width="1.9" height="15.0" fill="rgb(206,63,28)" rx="2" ry="2" />
<text  x="992.19" y="479.5" ></text>
</g>
<g >
<title>math/big.basicMul (1 samples, 0.16%)</title><rect x="272.0" y="421" width="1.9" height="15.0" fill="rgb(238,144,2)" rx="2" ry="2" />
<text  x="275.01" y="431.5" ></text>
</g>
<g >
<title>fmt.Fprintln (2 samples, 0.32%)</title><rect x="851.5" y="533" width="3.8" height="15.0" fill="rgb(245,181,52)" rx="2" ry="2" />
<text  x="854.49" y="543.5" ></text>
</g>
<g >
<title>runtime.execute (1 samples, 0.16%)</title><rect x="1092.5" y="485" width="1.9" height="15.0" fill="rgb(243,196,28)" rx="2" ry="2" />
<text  x="1095.46" y="495.5" ></text>
</g>
<g >
<title>encoding/json.encodeByteSlice (1 samples, 0.16%)</title><rect x="784.6" y="453" width="1.9" height="15.0" fill="rgb(249,32,12)" rx="2" ry="2" />
<text  x="787.55" y="463.5" ></text>
</g>
<g >
<title>fmt.Fprintln (11 samples, 1.78%)</title><rect x="889.7" y="533" width="21.1" height="15.0" fill="rgb(234,199,52)" rx="2" ry="2" />
<text  x="892.74" y="543.5" ></text>
</g>
<g >
<title>math/big.nat.norm (1 samples, 0.16%)</title><rect x="185.9" y="309" width="2.0" height="15.0" fill="rgb(230,44,13)" rx="2" ry="2" />
<text  x="188.95" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.16%)</title><rect x="15.7" y="309" width="1.9" height="15.0" fill="rgb(243,174,10)" rx="2" ry="2" />
<text  x="18.74" y="319.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (1 samples, 0.16%)</title><rect x="1092.5" y="533" width="1.9" height="15.0" fill="rgb(239,192,16)" rx="2" ry="2" />
<text  x="1095.46" y="543.5" ></text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (2 samples, 0.32%)</title><rect x="31.0" y="389" width="3.9" height="15.0" fill="rgb(208,104,31)" rx="2" ry="2" />
<text  x="34.04" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (4 samples, 0.65%)</title><rect x="44.4" y="389" width="7.7" height="15.0" fill="rgb(235,116,26)" rx="2" ry="2" />
<text  x="47.42" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.16%)</title><rect x="692.8" y="341" width="1.9" height="15.0" fill="rgb(214,201,10)" rx="2" ry="2" />
<text  x="695.76" y="351.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb/journal.(*Writer).Flush (1 samples, 0.16%)</title><rect x="42.5" y="453" width="1.9" height="15.0" fill="rgb(207,25,41)" rx="2" ry="2" />
<text  x="45.51" y="463.5" ></text>
</g>
<g >
<title>runtime.scavengeSleep (1 samples, 0.16%)</title><rect x="962.4" y="549" width="1.9" height="15.0" fill="rgb(209,140,22)" rx="2" ry="2" />
<text  x="965.41" y="559.5" ></text>
</g>
<g >
<title>runtime.newproc (1 samples, 0.16%)</title><rect x="214.6" y="469" width="1.9" height="15.0" fill="rgb(232,208,46)" rx="2" ry="2" />
<text  x="217.64" y="479.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (1 samples, 0.16%)</title><rect x="889.7" y="501" width="2.0" height="15.0" fill="rgb(211,30,14)" rx="2" ry="2" />
<text  x="892.74" y="511.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.16%)</title><rect x="1092.5" y="501" width="1.9" height="15.0" fill="rgb(219,6,8)" rx="2" ry="2" />
<text  x="1095.46" y="511.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (3 samples, 0.49%)</title><rect x="949.0" y="437" width="5.8" height="15.0" fill="rgb(211,126,41)" rx="2" ry="2" />
<text  x="952.03" y="447.5" ></text>
</g>
<g >
<title>runtime.goready (4 samples, 0.65%)</title><rect x="954.8" y="501" width="7.6" height="15.0" fill="rgb(219,192,20)" rx="2" ry="2" />
<text  x="957.76" y="511.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (1 samples, 0.16%)</title><rect x="19.6" y="453" width="1.9" height="15.0" fill="rgb(221,7,38)" rx="2" ry="2" />
<text  x="22.56" y="463.5" ></text>
</g>
<g >
<title>crypto/rsa.decryptAndCheck (1 samples, 0.16%)</title><rect x="19.6" y="469" width="1.9" height="15.0" fill="rgb(210,118,3)" rx="2" ry="2" />
<text  x="22.56" y="479.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.16%)</title><rect x="40.6" y="389" width="1.9" height="15.0" fill="rgb(214,62,42)" rx="2" ry="2" />
<text  x="43.60" y="399.5" ></text>
</g>
<g >
<title>runtime.selectgo (1 samples, 0.16%)</title><rect x="29.1" y="549" width="1.9" height="15.0" fill="rgb(220,114,34)" rx="2" ry="2" />
<text  x="32.12" y="559.5" ></text>
</g>
<g >
<title>encoding/json.stateEndValue (2 samples, 0.32%)</title><rect x="832.4" y="517" width="3.8" height="15.0" fill="rgb(248,140,50)" rx="2" ry="2" />
<text  x="835.37" y="527.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (2 samples, 0.32%)</title><rect x="731.0" y="405" width="3.8" height="15.0" fill="rgb(232,176,9)" rx="2" ry="2" />
<text  x="734.00" y="415.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.16%)</title><rect x="1090.6" y="485" width="1.9" height="15.0" fill="rgb(223,159,18)" rx="2" ry="2" />
<text  x="1093.55" y="495.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.16%)</title><rect x="281.6" y="485" width="1.9" height="15.0" fill="rgb(220,52,25)" rx="2" ry="2" />
<text  x="284.57" y="495.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (2 samples, 0.32%)</title><rect x="31.0" y="357" width="3.9" height="15.0" fill="rgb(208,29,35)" rx="2" ry="2" />
<text  x="34.04" y="367.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.16%)</title><rect x="32.9" y="293" width="2.0" height="15.0" fill="rgb(246,188,53)" rx="2" ry="2" />
<text  x="35.95" y="303.5" ></text>
</g>
<g >
<title>fmt.Printf (8 samples, 1.30%)</title><rect x="836.2" y="549" width="15.3" height="15.0" fill="rgb(208,76,20)" rx="2" ry="2" />
<text  x="839.19" y="559.5" ></text>
</g>
<g >
<title>runtime.mapiternext (1 samples, 0.16%)</title><rect x="767.3" y="501" width="2.0" height="15.0" fill="rgb(222,99,29)" rx="2" ry="2" />
<text  x="770.34" y="511.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.65%)</title><rect x="954.8" y="485" width="7.6" height="15.0" fill="rgb(227,225,51)" rx="2" ry="2" />
<text  x="957.76" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (2 samples, 0.32%)</title><rect x="342.8" y="309" width="3.8" height="15.0" fill="rgb(211,190,20)" rx="2" ry="2" />
<text  x="345.77" y="319.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Sum (2 samples, 0.32%)</title><rect x="350.4" y="485" width="3.8" height="15.0" fill="rgb(215,187,48)" rx="2" ry="2" />
<text  x="353.42" y="495.5" ></text>
</g>
<g >
<title>math/big.nat.div (4 samples, 0.65%)</title><rect x="55.9" y="389" width="7.6" height="15.0" fill="rgb(214,41,26)" rx="2" ry="2" />
<text  x="58.90" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.16%)</title><rect x="23.4" y="485" width="1.9" height="15.0" fill="rgb(230,173,5)" rx="2" ry="2" />
<text  x="26.39" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (3 samples, 0.49%)</title><rect x="224.2" y="405" width="5.7" height="15.0" fill="rgb(236,223,50)" rx="2" ry="2" />
<text  x="227.20" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="845.8" y="389" width="1.9" height="15.0" fill="rgb(231,117,29)" rx="2" ry="2" />
<text  x="848.75" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (2 samples, 0.32%)</title><rect x="679.4" y="389" width="3.8" height="15.0" fill="rgb(244,84,49)" rx="2" ry="2" />
<text  x="682.37" y="399.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Write (1 samples, 0.16%)</title><rect x="222.3" y="453" width="1.9" height="15.0" fill="rgb(236,171,37)" rx="2" ry="2" />
<text  x="225.29" y="463.5" ></text>
</g>
<g >
<title>runtime/pprof.(*profMap).lookup (1 samples, 0.16%)</title><rect x="1186.2" y="533" width="1.9" height="15.0" fill="rgb(216,22,37)" rx="2" ry="2" />
<text  x="1189.18" y="543.5" ></text>
</g>
<g >
<title>syscall.Write (3 samples, 0.49%)</title><rect x="205.1" y="437" width="5.7" height="15.0" fill="rgb(247,190,22)" rx="2" ry="2" />
<text  x="208.07" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.16%)</title><rect x="34.9" y="357" width="1.9" height="15.0" fill="rgb(227,206,16)" rx="2" ry="2" />
<text  x="37.86" y="367.5" ></text>
</g>
<g >
<title>math/big.nat.add (1 samples, 0.16%)</title><rect x="692.8" y="357" width="1.9" height="15.0" fill="rgb(226,229,34)" rx="2" ry="2" />
<text  x="695.76" y="367.5" ></text>
</g>
<g >
<title>syscall.write (6 samples, 0.97%)</title><rect x="769.3" y="437" width="11.4" height="15.0" fill="rgb(244,126,45)" rx="2" ry="2" />
<text  x="772.25" y="447.5" ></text>
</g>
<g >
<title>crypto/rand.Int (6 samples, 0.97%)</title><rect x="371.5" y="437" width="11.4" height="15.0" fill="rgb(254,49,24)" rx="2" ry="2" />
<text  x="374.46" y="447.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (6 samples, 0.97%)</title><rect x="769.3" y="485" width="11.4" height="15.0" fill="rgb(252,113,2)" rx="2" ry="2" />
<text  x="772.25" y="495.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.16%)</title><rect x="820.9" y="405" width="1.9" height="15.0" fill="rgb(250,190,50)" rx="2" ry="2" />
<text  x="823.89" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.16%)</title><rect x="50.2" y="165" width="1.9" height="15.0" fill="rgb(249,187,7)" rx="2" ry="2" />
<text  x="53.16" y="175.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.16%)</title><rect x="1004.5" y="485" width="1.9" height="15.0" fill="rgb(218,27,49)" rx="2" ry="2" />
<text  x="1007.49" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.16%)</title><rect x="34.9" y="341" width="1.9" height="15.0" fill="rgb(205,39,39)" rx="2" ry="2" />
<text  x="37.86" y="351.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Write (1 samples, 0.16%)</title><rect x="350.4" y="453" width="1.9" height="15.0" fill="rgb(207,118,2)" rx="2" ry="2" />
<text  x="353.42" y="463.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.16%)</title><rect x="740.6" y="341" width="1.9" height="15.0" fill="rgb(245,205,26)" rx="2" ry="2" />
<text  x="743.57" y="351.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (7 samples, 1.13%)</title><rect x="189.8" y="437" width="13.4" height="15.0" fill="rgb(228,55,14)" rx="2" ry="2" />
<text  x="192.77" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.16%)</title><rect x="300.7" y="469" width="1.9" height="15.0" fill="rgb(244,59,14)" rx="2" ry="2" />
<text  x="303.70" y="479.5" ></text>
</g>
<g >
<title>math/big.nat.div (1 samples, 0.16%)</title><rect x="19.6" y="405" width="1.9" height="15.0" fill="rgb(246,48,31)" rx="2" ry="2" />
<text  x="22.56" y="415.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (2 samples, 0.32%)</title><rect x="31.0" y="469" width="3.9" height="15.0" fill="rgb(212,77,31)" rx="2" ry="2" />
<text  x="34.04" y="479.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.16%)</title><rect x="991.1" y="485" width="1.9" height="15.0" fill="rgb(229,219,45)" rx="2" ry="2" />
<text  x="994.10" y="495.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.16%)</title><rect x="214.6" y="405" width="1.9" height="15.0" fill="rgb(205,151,28)" rx="2" ry="2" />
<text  x="217.64" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.16%)</title><rect x="23.4" y="469" width="1.9" height="15.0" fill="rgb(252,7,23)" rx="2" ry="2" />
<text  x="26.39" y="479.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.16%)</title><rect x="1184.3" y="533" width="1.9" height="15.0" fill="rgb(208,42,21)" rx="2" ry="2" />
<text  x="1187.26" y="543.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb/memdb.(*DB).Put (1 samples, 0.16%)</title><rect x="40.6" y="453" width="1.9" height="15.0" fill="rgb(230,85,21)" rx="2" ry="2" />
<text  x="43.60" y="463.5" ></text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (2 samples, 0.32%)</title><rect x="25.3" y="469" width="3.8" height="15.0" fill="rgb(207,180,0)" rx="2" ry="2" />
<text  x="28.30" y="479.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Write (1 samples, 0.16%)</title><rect x="233.8" y="485" width="1.9" height="15.0" fill="rgb(242,171,54)" rx="2" ry="2" />
<text  x="236.76" y="495.5" ></text>
</g>
<g >
<title>runtime.mstart (42 samples, 6.81%)</title><rect x="1094.4" y="565" width="80.3" height="15.0" fill="rgb(242,32,47)" rx="2" ry="2" />
<text  x="1097.38" y="575.5" >runtime.m..</text>
</g>
<g >
<title>math/big.(*Int).Mul (2 samples, 0.32%)</title><rect x="184.0" y="357" width="3.9" height="15.0" fill="rgb(222,196,53)" rx="2" ry="2" />
<text  x="187.04" y="367.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).Update (5 samples, 0.81%)</title><rect x="31.0" y="517" width="9.6" height="15.0" fill="rgb(236,199,20)" rx="2" ry="2" />
<text  x="34.04" y="527.5" ></text>
</g>
<g >
<title>runtime.scanobject (2 samples, 0.32%)</title><rect x="306.4" y="373" width="3.9" height="15.0" fill="rgb(249,49,29)" rx="2" ry="2" />
<text  x="309.43" y="383.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).VerifySignature (14 samples, 2.27%)</title><rect x="797.9" y="533" width="26.8" height="15.0" fill="rgb(221,83,14)" rx="2" ry="2" />
<text  x="800.94" y="543.5" >B..</text>
</g>
<g >
<title>math/big.(*Int).QuoRem (2 samples, 0.32%)</title><rect x="174.5" y="405" width="3.8" height="15.0" fill="rgb(225,132,7)" rx="2" ry="2" />
<text  x="177.47" y="415.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.16%)</title><rect x="197.4" y="341" width="1.9" height="15.0" fill="rgb(221,204,11)" rx="2" ry="2" />
<text  x="200.42" y="351.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (3 samples, 0.49%)</title><rect x="205.1" y="469" width="5.7" height="15.0" fill="rgb(212,100,43)" rx="2" ry="2" />
<text  x="208.07" y="479.5" ></text>
</g>
<g >
<title>math/big.getNat (1 samples, 0.16%)</title><rect x="396.3" y="373" width="1.9" height="15.0" fill="rgb(212,152,29)" rx="2" ry="2" />
<text  x="399.32" y="383.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (3 samples, 0.49%)</title><rect x="260.5" y="405" width="5.8" height="15.0" fill="rgb(208,52,21)" rx="2" ry="2" />
<text  x="263.53" y="415.5" ></text>
</g>
<g >
<title>crypto/rand.batched.func1 (4 samples, 0.65%)</title><rect x="371.5" y="373" width="7.6" height="15.0" fill="rgb(252,13,25)" rx="2" ry="2" />
<text  x="374.46" y="383.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*iComparer).uCompare (2 samples, 0.32%)</title><rect x="346.6" y="373" width="3.8" height="15.0" fill="rgb(227,29,36)" rx="2" ry="2" />
<text  x="349.60" y="383.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneName (4 samples, 0.65%)</title><rect x="342.8" y="517" width="7.6" height="15.0" fill="rgb(228,227,21)" rx="2" ry="2" />
<text  x="345.77" y="527.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (62 samples, 10.05%)</title><rect x="55.9" y="421" width="118.6" height="15.0" fill="rgb(205,111,7)" rx="2" ry="2" />
<text  x="58.90" y="431.5" >math/big.(*Int..</text>
</g>
<g >
<title>io.ReadAtLeast (4 samples, 0.65%)</title><rect x="371.5" y="405" width="7.6" height="15.0" fill="rgb(214,120,37)" rx="2" ry="2" />
<text  x="374.46" y="415.5" ></text>
</g>
<g >
<title>math/big.nat.expNNMontgomery (58 samples, 9.40%)</title><rect x="63.5" y="389" width="111.0" height="15.0" fill="rgb(231,191,19)" rx="2" ry="2" />
<text  x="66.55" y="399.5" >math/big.nat...</text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.16%)</title><rect x="1048.5" y="469" width="1.9" height="15.0" fill="rgb(205,110,43)" rx="2" ry="2" />
<text  x="1051.48" y="479.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (20 samples, 3.24%)</title><rect x="235.7" y="453" width="38.2" height="15.0" fill="rgb(215,162,7)" rx="2" ry="2" />
<text  x="238.67" y="463.5" >mat..</text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.16%)</title><rect x="1096.3" y="517" width="1.9" height="15.0" fill="rgb(232,159,5)" rx="2" ry="2" />
<text  x="1099.29" y="527.5" ></text>
</g>
<g >
<title>syscall.write (3 samples, 0.49%)</title><rect x="205.1" y="421" width="5.7" height="15.0" fill="rgb(223,59,46)" rx="2" ry="2" />
<text  x="208.07" y="431.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneName (2 samples, 0.32%)</title><rect x="275.8" y="517" width="3.9" height="15.0" fill="rgb(228,207,10)" rx="2" ry="2" />
<text  x="278.83" y="527.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Iterator).Next.func1 (2 samples, 0.32%)</title><rect x="342.8" y="421" width="3.8" height="15.0" fill="rgb(208,44,7)" rx="2" ry="2" />
<text  x="345.77" y="431.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.16%)</title><rect x="338.9" y="501" width="2.0" height="15.0" fill="rgb(247,19,16)" rx="2" ry="2" />
<text  x="341.95" y="511.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.16%)</title><rect x="811.3" y="373" width="1.9" height="15.0" fill="rgb(206,40,22)" rx="2" ry="2" />
<text  x="814.33" y="383.5" ></text>
</g>
<g >
<title>runtime.gosched_m (1 samples, 0.16%)</title><rect x="1006.4" y="549" width="1.9" height="15.0" fill="rgb(226,12,18)" rx="2" ry="2" />
<text  x="1009.40" y="559.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.16%)</title><rect x="344.7" y="261" width="1.9" height="15.0" fill="rgb(239,79,31)" rx="2" ry="2" />
<text  x="347.68" y="271.5" ></text>
</g>
<g >
<title>syscall.write (1 samples, 0.16%)</title><rect x="859.1" y="453" width="2.0" height="15.0" fill="rgb(244,40,38)" rx="2" ry="2" />
<text  x="862.14" y="463.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (1 samples, 0.16%)</title><rect x="312.2" y="517" width="1.9" height="15.0" fill="rgb(246,102,43)" rx="2" ry="2" />
<text  x="315.17" y="527.5" ></text>
</g>
<g >
<title>math/big.(*Int).SetInt64 (1 samples, 0.16%)</title><rect x="820.9" y="469" width="1.9" height="15.0" fill="rgb(229,81,36)" rx="2" ry="2" />
<text  x="823.89" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.16%)</title><rect x="50.2" y="229" width="1.9" height="15.0" fill="rgb(230,207,31)" rx="2" ry="2" />
<text  x="53.16" y="239.5" ></text>
</g>
<g >
<title>runtime.scang (3 samples, 0.49%)</title><rect x="972.0" y="469" width="5.7" height="15.0" fill="rgb(230,68,21)" rx="2" ry="2" />
<text  x="974.98" y="479.5" ></text>
</g>
<g >
<title>reflect.New (1 samples, 0.16%)</title><rect x="755.9" y="357" width="1.9" height="15.0" fill="rgb(207,36,16)" rx="2" ry="2" />
<text  x="758.87" y="367.5" ></text>
</g>
<g >
<title>encoding/json.stringEncoder (1 samples, 0.16%)</title><rect x="742.5" y="437" width="1.9" height="15.0" fill="rgb(216,135,36)" rx="2" ry="2" />
<text  x="745.48" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.16%)</title><rect x="298.8" y="421" width="1.9" height="15.0" fill="rgb(245,79,35)" rx="2" ry="2" />
<text  x="301.78" y="431.5" ></text>
</g>
<g >
<title>encoding/json.encodeByteSlice (1 samples, 0.16%)</title><rect x="203.2" y="421" width="1.9" height="15.0" fill="rgb(239,22,33)" rx="2" ry="2" />
<text  x="206.16" y="431.5" ></text>
</g>
<g >
<title>math/big.nat.mul (1 samples, 0.16%)</title><rect x="667.9" y="405" width="1.9" height="15.0" fill="rgb(217,121,34)" rx="2" ry="2" />
<text  x="670.89" y="415.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.16%)</title><rect x="1004.5" y="501" width="1.9" height="15.0" fill="rgb(246,164,27)" rx="2" ry="2" />
<text  x="1007.49" y="511.5" ></text>
</g>
<g >
<title>reflect.mapiterinit (1 samples, 0.16%)</title><rect x="32.9" y="309" width="2.0" height="15.0" fill="rgb(211,152,2)" rx="2" ry="2" />
<text  x="35.95" y="319.5" ></text>
</g>
<g >
<title>math/big.alias (1 samples, 0.16%)</title><rect x="667.9" y="389" width="1.9" height="15.0" fill="rgb(253,41,1)" rx="2" ry="2" />
<text  x="670.89" y="399.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="811.3" y="389" width="1.9" height="15.0" fill="rgb(227,23,16)" rx="2" ry="2" />
<text  x="814.33" y="399.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.16%)</title><rect x="1092.5" y="517" width="1.9" height="15.0" fill="rgb(233,47,2)" rx="2" ry="2" />
<text  x="1095.46" y="527.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (2 samples, 0.32%)</title><rect x="306.4" y="453" width="3.9" height="15.0" fill="rgb(232,67,18)" rx="2" ry="2" />
<text  x="309.43" y="463.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (3 samples, 0.49%)</title><rect x="224.2" y="453" width="5.7" height="15.0" fill="rgb(234,158,24)" rx="2" ry="2" />
<text  x="227.20" y="463.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.(*Mutex).Lock (4 samples, 0.65%)</title><rect x="210.8" y="501" width="7.7" height="15.0" fill="rgb(208,18,10)" rx="2" ry="2" />
<text  x="213.81" y="511.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Block).GenerateMerkelRoot (1 samples, 0.16%)</title><rect x="222.3" y="501" width="1.9" height="15.0" fill="rgb(221,114,51)" rx="2" ry="2" />
<text  x="225.29" y="511.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.DNode.Send (3 samples, 0.49%)</title><rect x="205.1" y="501" width="5.7" height="15.0" fill="rgb(211,120,11)" rx="2" ry="2" />
<text  x="208.07" y="511.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.16%)</title><rect x="964.3" y="549" width="1.9" height="15.0" fill="rgb(212,205,54)" rx="2" ry="2" />
<text  x="967.33" y="559.5" ></text>
</g>
<g >
<title>runtime.chansend (2 samples, 0.32%)</title><rect x="314.1" y="533" width="3.8" height="15.0" fill="rgb(226,125,26)" rx="2" ry="2" />
<text  x="317.08" y="543.5" ></text>
</g>
<g >
<title>math/big.nat.set (1 samples, 0.16%)</title><rect x="669.8" y="405" width="1.9" height="15.0" fill="rgb(212,115,9)" rx="2" ry="2" />
<text  x="672.81" y="415.5" ></text>
</g>
<g >
<title>runtime.futexsleep (16 samples, 2.59%)</title><rect x="1060.0" y="469" width="30.6" height="15.0" fill="rgb(209,163,50)" rx="2" ry="2" />
<text  x="1062.95" y="479.5" >ru..</text>
</g>
<g >
<title>runtime.schedule (6 samples, 0.97%)</title><rect x="994.9" y="533" width="11.5" height="15.0" fill="rgb(220,152,45)" rx="2" ry="2" />
<text  x="997.93" y="543.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.16%)</title><rect x="381.0" y="421" width="1.9" height="15.0" fill="rgb(245,186,52)" rx="2" ry="2" />
<text  x="384.02" y="431.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.16%)</title><rect x="23.4" y="453" width="1.9" height="15.0" fill="rgb(233,87,53)" rx="2" ry="2" />
<text  x="26.39" y="463.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).Sign (197 samples, 31.93%)</title><rect x="361.9" y="501" width="376.8" height="15.0" fill="rgb(213,90,50)" rx="2" ry="2" />
<text  x="364.90" y="511.5" >BCDns_0.1/certificateAuthority/service.(*CAX509).Sign</text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.16%)</title><rect x="40.6" y="325" width="1.9" height="15.0" fill="rgb(254,107,51)" rx="2" ry="2" />
<text  x="43.60" y="335.5" ></text>
</g>
<g >
<title>syscall.Syscall (7 samples, 1.13%)</title><rect x="325.6" y="469" width="13.3" height="15.0" fill="rgb(233,26,33)" rx="2" ry="2" />
<text  x="328.56" y="479.5" ></text>
</g>
<g >
<title>runtime.entersyscall_sysmon (2 samples, 0.32%)</title><rect x="335.1" y="405" width="3.8" height="15.0" fill="rgb(224,211,53)" rx="2" ry="2" />
<text  x="338.12" y="415.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (4 samples, 0.65%)</title><rect x="863.0" y="533" width="7.6" height="15.0" fill="rgb(210,106,37)" rx="2" ry="2" />
<text  x="865.97" y="543.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.16%)</title><rect x="882.1" y="453" width="1.9" height="15.0" fill="rgb(216,101,19)" rx="2" ry="2" />
<text  x="885.09" y="463.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (1 samples, 0.16%)</title><rect x="755.9" y="341" width="1.9" height="15.0" fill="rgb(246,178,47)" rx="2" ry="2" />
<text  x="758.87" y="351.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (2 samples, 0.32%)</title><rect x="314.1" y="469" width="3.8" height="15.0" fill="rgb(221,69,48)" rx="2" ry="2" />
<text  x="317.08" y="479.5" ></text>
</g>
<g >
<title>runtime.getStackMap (1 samples, 0.16%)</title><rect x="975.8" y="389" width="1.9" height="15.0" fill="rgb(228,118,17)" rx="2" ry="2" />
<text  x="978.80" y="399.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*BlockValidated).MarshalBlockValidated (2 samples, 0.32%)</title><rect x="31.0" y="485" width="3.9" height="15.0" fill="rgb(246,175,25)" rx="2" ry="2" />
<text  x="34.04" y="495.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).waitRead (1 samples, 0.16%)</title><rect x="912.7" y="501" width="1.9" height="15.0" fill="rgb(227,155,6)" rx="2" ry="2" />
<text  x="915.69" y="511.5" ></text>
</g>
<g >
<title>runtime.runqgrab (2 samples, 0.32%)</title><rect x="1050.4" y="485" width="3.8" height="15.0" fill="rgb(250,11,30)" rx="2" ry="2" />
<text  x="1053.39" y="495.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.16%)</title><rect x="279.7" y="421" width="1.9" height="15.0" fill="rgb(243,205,25)" rx="2" ry="2" />
<text  x="282.66" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="876.4" y="485" width="1.9" height="15.0" fill="rgb(228,76,17)" rx="2" ry="2" />
<text  x="879.35" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (4 samples, 0.65%)</title><rect x="10.0" y="389" width="7.6" height="15.0" fill="rgb(237,161,12)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>syscall.Syscall (3 samples, 0.49%)</title><rect x="373.4" y="325" width="5.7" height="15.0" fill="rgb(210,100,51)" rx="2" ry="2" />
<text  x="376.37" y="335.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_fast64 (1 samples, 0.16%)</title><rect x="1186.2" y="517" width="1.9" height="15.0" fill="rgb(241,210,45)" rx="2" ry="2" />
<text  x="1189.18" y="527.5" ></text>
</g>
<g >
<title>reflect.(*MapIter).Next (1 samples, 0.16%)</title><rect x="843.8" y="437" width="2.0" height="15.0" fill="rgb(250,87,46)" rx="2" ry="2" />
<text  x="846.84" y="447.5" ></text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.16%)</title><rect x="228.0" y="293" width="1.9" height="15.0" fill="rgb(219,117,53)" rx="2" ry="2" />
<text  x="231.02" y="303.5" ></text>
</g>
<g >
<title>net.(*conn).Read (23 samples, 3.73%)</title><rect x="910.8" y="549" width="44.0" height="15.0" fill="rgb(238,179,31)" rx="2" ry="2" />
<text  x="913.78" y="559.5" >net...</text>
</g>
<g >
<title>runtime.reentersyscall (1 samples, 0.16%)</title><rect x="908.9" y="405" width="1.9" height="15.0" fill="rgb(237,171,50)" rx="2" ry="2" />
<text  x="911.87" y="415.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.16%)</title><rect x="962.4" y="453" width="1.9" height="15.0" fill="rgb(230,68,0)" rx="2" ry="2" />
<text  x="965.41" y="463.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (1 samples, 0.16%)</title><rect x="857.2" y="485" width="1.9" height="15.0" fill="rgb(227,51,17)" rx="2" ry="2" />
<text  x="860.23" y="495.5" ></text>
</g>
<g >
<title>runtime.closechan (1 samples, 0.16%)</title><rect x="824.7" y="517" width="1.9" height="15.0" fill="rgb(221,172,12)" rx="2" ry="2" />
<text  x="827.72" y="527.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).grow (1 samples, 0.16%)</title><rect x="740.6" y="469" width="1.9" height="15.0" fill="rgb(215,27,38)" rx="2" ry="2" />
<text  x="743.57" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (3 samples, 0.49%)</title><rect x="10.0" y="309" width="5.7" height="15.0" fill="rgb(225,214,35)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>reflect.New (1 samples, 0.16%)</title><rect x="48.2" y="261" width="2.0" height="15.0" fill="rgb(210,102,23)" rx="2" ry="2" />
<text  x="51.25" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.16%)</title><rect x="1182.4" y="501" width="1.9" height="15.0" fill="rgb(222,183,18)" rx="2" ry="2" />
<text  x="1185.35" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.16%)</title><rect x="740.6" y="357" width="1.9" height="15.0" fill="rgb(230,141,21)" rx="2" ry="2" />
<text  x="743.57" y="367.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.32%)</title><rect x="314.1" y="405" width="3.8" height="15.0" fill="rgb(227,151,10)" rx="2" ry="2" />
<text  x="317.08" y="415.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (1 samples, 0.16%)</title><rect x="214.6" y="437" width="1.9" height="15.0" fill="rgb(232,220,16)" rx="2" ry="2" />
<text  x="217.64" y="447.5" ></text>
</g>
<g >
<title>math/big.getNat (2 samples, 0.32%)</title><rect x="256.7" y="405" width="3.8" height="15.0" fill="rgb(224,83,32)" rx="2" ry="2" />
<text  x="259.71" y="415.5" ></text>
</g>
<g >
<title>math/big.subVW (1 samples, 0.16%)</title><rect x="379.1" y="389" width="1.9" height="15.0" fill="rgb(241,93,15)" rx="2" ry="2" />
<text  x="382.11" y="399.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Pwrite (1 samples, 0.16%)</title><rect x="38.7" y="437" width="1.9" height="15.0" fill="rgb(252,95,46)" rx="2" ry="2" />
<text  x="41.69" y="447.5" ></text>
</g>
<g >
<title>encoding/json.stringEncoder (1 samples, 0.16%)</title><rect x="354.2" y="437" width="2.0" height="15.0" fill="rgb(243,113,13)" rx="2" ry="2" />
<text  x="357.25" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="820.9" y="389" width="1.9" height="15.0" fill="rgb(214,83,33)" rx="2" ry="2" />
<text  x="823.89" y="399.5" ></text>
</g>
<g >
<title>math/big.getNat (1 samples, 0.16%)</title><rect x="197.4" y="357" width="1.9" height="15.0" fill="rgb(218,72,4)" rx="2" ry="2" />
<text  x="200.42" y="367.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (1 samples, 0.16%)</title><rect x="880.2" y="389" width="1.9" height="15.0" fill="rgb(254,78,44)" rx="2" ry="2" />
<text  x="883.18" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.32%)</title><rect x="656.4" y="325" width="3.8" height="15.0" fill="rgb(229,153,17)" rx="2" ry="2" />
<text  x="659.42" y="335.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (2 samples, 0.32%)</title><rect x="342.8" y="389" width="3.8" height="15.0" fill="rgb(219,145,13)" rx="2" ry="2" />
<text  x="345.77" y="399.5" ></text>
</g>
<g >
<title>syscall.Syscall (10 samples, 1.62%)</title><rect x="891.7" y="437" width="19.1" height="15.0" fill="rgb(242,44,43)" rx="2" ry="2" />
<text  x="894.65" y="447.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.16%)</title><rect x="27.2" y="389" width="1.9" height="15.0" fill="rgb(221,116,40)" rx="2" ry="2" />
<text  x="30.21" y="399.5" ></text>
</g>
<g >
<title>runtime/pprof.profileWriter (1 samples, 0.16%)</title><rect x="1186.2" y="565" width="1.9" height="15.0" fill="rgb(213,137,24)" rx="2" ry="2" />
<text  x="1189.18" y="575.5" ></text>
</g>
<g >
<title>runtime.resetspinning (1 samples, 0.16%)</title><rect x="1090.6" y="517" width="1.9" height="15.0" fill="rgb(230,126,46)" rx="2" ry="2" />
<text  x="1093.55" y="527.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.16%)</title><rect x="780.7" y="389" width="1.9" height="15.0" fill="rgb(254,179,30)" rx="2" ry="2" />
<text  x="783.73" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).erase (1 samples, 0.16%)</title><rect x="50.2" y="85" width="1.9" height="15.0" fill="rgb(224,58,42)" rx="2" ry="2" />
<text  x="53.16" y="95.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.32%)</title><rect x="314.1" y="485" width="3.8" height="15.0" fill="rgb(219,211,35)" rx="2" ry="2" />
<text  x="317.08" y="495.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Write (1 samples, 0.16%)</title><rect x="231.8" y="453" width="2.0" height="15.0" fill="rgb(235,178,25)" rx="2" ry="2" />
<text  x="234.85" y="463.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (1 samples, 0.16%)</title><rect x="229.9" y="485" width="1.9" height="15.0" fill="rgb(211,148,40)" rx="2" ry="2" />
<text  x="232.94" y="495.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb/memdb.(*DB).Find (1 samples, 0.16%)</title><rect x="275.8" y="421" width="1.9" height="15.0" fill="rgb(245,5,15)" rx="2" ry="2" />
<text  x="278.83" y="431.5" ></text>
</g>
<g >
<title>math/big.subVV (2 samples, 0.32%)</title><rect x="815.2" y="421" width="3.8" height="15.0" fill="rgb(253,180,38)" rx="2" ry="2" />
<text  x="818.15" y="431.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (1 samples, 0.16%)</title><rect x="973.9" y="405" width="1.9" height="15.0" fill="rgb(237,53,31)" rx="2" ry="2" />
<text  x="976.89" y="415.5" ></text>
</g>
<g >
<title>os.(*File).write (10 samples, 1.62%)</title><rect x="891.7" y="501" width="19.1" height="15.0" fill="rgb(231,12,4)" rx="2" ry="2" />
<text  x="894.65" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (2 samples, 0.32%)</title><rect x="780.7" y="469" width="3.9" height="15.0" fill="rgb(218,155,7)" rx="2" ry="2" />
<text  x="783.73" y="479.5" ></text>
</g>
<g >
<title>reflect.mapassign (1 samples, 0.16%)</title><rect x="50.2" y="293" width="1.9" height="15.0" fill="rgb(221,218,31)" rx="2" ry="2" />
<text  x="53.16" y="303.5" ></text>
</g>
<g >
<title>runtime.notetsleep (7 samples, 1.13%)</title><rect x="1098.2" y="517" width="13.4" height="15.0" fill="rgb(237,125,0)" rx="2" ry="2" />
<text  x="1101.20" y="527.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.16%)</title><rect x="855.3" y="469" width="1.9" height="15.0" fill="rgb(225,50,11)" rx="2" ry="2" />
<text  x="858.32" y="479.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalReplyMessage).VerifySignature (14 samples, 2.27%)</title><rect x="797.9" y="549" width="26.8" height="15.0" fill="rgb(242,14,25)" rx="2" ry="2" />
<text  x="800.94" y="559.5" >B..</text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.16%)</title><rect x="50.2" y="117" width="1.9" height="15.0" fill="rgb(251,225,43)" rx="2" ry="2" />
<text  x="53.16" y="127.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).BroadCast (8 samples, 1.30%)</title><rect x="769.3" y="533" width="15.3" height="15.0" fill="rgb(214,13,16)" rx="2" ry="2" />
<text  x="772.25" y="543.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (1 samples, 0.16%)</title><rect x="845.8" y="405" width="1.9" height="15.0" fill="rgb(229,146,34)" rx="2" ry="2" />
<text  x="848.75" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.32%)</title><rect x="754.0" y="421" width="3.8" height="15.0" fill="rgb(233,198,19)" rx="2" ry="2" />
<text  x="756.95" y="431.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).View (3 samples, 0.49%)</title><rect x="224.2" y="501" width="5.7" height="15.0" fill="rgb(209,100,40)" rx="2" ry="2" />
<text  x="227.20" y="511.5" ></text>
</g>
<g >
<title>runtime.notewakeup (4 samples, 0.65%)</title><rect x="954.8" y="405" width="7.6" height="15.0" fill="rgb(254,220,8)" rx="2" ry="2" />
<text  x="957.76" y="415.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (1 samples, 0.16%)</title><rect x="229.9" y="469" width="1.9" height="15.0" fill="rgb(238,203,9)" rx="2" ry="2" />
<text  x="232.94" y="479.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Block).VerifyBlock (1 samples, 0.16%)</title><rect x="222.3" y="517" width="1.9" height="15.0" fill="rgb(250,219,11)" rx="2" ry="2" />
<text  x="225.29" y="527.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.16%)</title><rect x="34.9" y="405" width="1.9" height="15.0" fill="rgb(228,50,41)" rx="2" ry="2" />
<text  x="37.86" y="415.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.16%)</title><rect x="708.1" y="309" width="1.9" height="15.0" fill="rgb(223,114,38)" rx="2" ry="2" />
<text  x="711.06" y="319.5" ></text>
</g>
<g >
<title>runtime.copystack (2 samples, 0.32%)</title><rect x="866.8" y="453" width="3.8" height="15.0" fill="rgb(247,212,9)" rx="2" ry="2" />
<text  x="869.79" y="463.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).handleProposal (34 samples, 5.51%)</title><rect x="231.8" y="549" width="65.1" height="15.0" fill="rgb(230,99,6)" rx="2" ry="2" />
<text  x="234.85" y="559.5" >BCDns_0..</text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.16%)</title><rect x="755.9" y="309" width="1.9" height="15.0" fill="rgb(209,31,26)" rx="2" ry="2" />
<text  x="758.87" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc.func1 (1 samples, 0.16%)</title><rect x="887.8" y="469" width="1.9" height="15.0" fill="rgb(237,67,5)" rx="2" ry="2" />
<text  x="890.83" y="479.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb/journal.(*Writer).writePending (1 samples, 0.16%)</title><rect x="42.5" y="437" width="1.9" height="15.0" fill="rgb(244,203,12)" rx="2" ry="2" />
<text  x="45.51" y="447.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.32%)</title><rect x="656.4" y="357" width="3.8" height="15.0" fill="rgb(216,143,31)" rx="2" ry="2" />
<text  x="659.42" y="367.5" ></text>
</g>
<g >
<title>runtime.mstart1 (42 samples, 6.81%)</title><rect x="1094.4" y="549" width="80.3" height="15.0" fill="rgb(241,20,13)" rx="2" ry="2" />
<text  x="1097.38" y="559.5" >runtime.m..</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.16%)</title><rect x="50.2" y="149" width="1.9" height="15.0" fill="rgb(231,139,26)" rx="2" ry="2" />
<text  x="53.16" y="159.5" ></text>
</g>
<g >
<title>runtime.ready (4 samples, 0.65%)</title><rect x="954.8" y="453" width="7.6" height="15.0" fill="rgb(248,106,8)" rx="2" ry="2" />
<text  x="957.76" y="463.5" ></text>
</g>
<g >
<title>math/big.shlVU (1 samples, 0.16%)</title><rect x="176.4" y="357" width="1.9" height="15.0" fill="rgb(253,164,12)" rx="2" ry="2" />
<text  x="179.39" y="367.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.16%)</title><rect x="1090.6" y="453" width="1.9" height="15.0" fill="rgb(227,85,7)" rx="2" ry="2" />
<text  x="1093.55" y="463.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (3 samples, 0.49%)</title><rect x="333.2" y="437" width="5.7" height="15.0" fill="rgb(231,8,34)" rx="2" ry="2" />
<text  x="336.21" y="447.5" ></text>
</g>
<g >
<title>fmt.(*buffer).write (1 samples, 0.16%)</title><rect x="838.1" y="389" width="1.9" height="15.0" fill="rgb(221,44,12)" rx="2" ry="2" />
<text  x="841.10" y="399.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.16%)</title><rect x="841.9" y="389" width="1.9" height="15.0" fill="rgb(236,179,34)" rx="2" ry="2" />
<text  x="844.93" y="399.5" ></text>
</g>
<g >
<title>net.(*conn).Write (6 samples, 0.97%)</title><rect x="769.3" y="501" width="11.4" height="15.0" fill="rgb(208,139,40)" rx="2" ry="2" />
<text  x="772.25" y="511.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).Delete (2 samples, 0.32%)</title><rect x="40.6" y="517" width="3.8" height="15.0" fill="rgb(245,163,17)" rx="2" ry="2" />
<text  x="43.60" y="527.5" ></text>
</g>
<g >
<title>math/big.(*Int).GCD (6 samples, 0.97%)</title><rect x="178.3" y="405" width="11.5" height="15.0" fill="rgb(223,178,13)" rx="2" ry="2" />
<text  x="181.30" y="415.5" ></text>
</g>
<g >
<title>runtime.notesleep (16 samples, 2.59%)</title><rect x="1060.0" y="485" width="30.6" height="15.0" fill="rgb(244,161,13)" rx="2" ry="2" />
<text  x="1062.95" y="495.5" >ru..</text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.16%)</title><rect x="759.7" y="437" width="1.9" height="15.0" fill="rgb(222,90,27)" rx="2" ry="2" />
<text  x="762.69" y="447.5" ></text>
</g>
<g >
<title>syscall.Write (1 samples, 0.16%)</title><rect x="859.1" y="469" width="2.0" height="15.0" fill="rgb(234,39,54)" rx="2" ry="2" />
<text  x="862.14" y="479.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.16%)</title><rect x="1090.6" y="437" width="1.9" height="15.0" fill="rgb(228,118,36)" rx="2" ry="2" />
<text  x="1093.55" y="447.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.16%)</title><rect x="214.6" y="357" width="1.9" height="15.0" fill="rgb(232,223,11)" rx="2" ry="2" />
<text  x="217.64" y="367.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (1 samples, 0.16%)</title><rect x="855.3" y="421" width="1.9" height="15.0" fill="rgb(241,141,10)" rx="2" ry="2" />
<text  x="858.32" y="431.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock.func1 (5 samples, 0.81%)</title><rect x="10.0" y="485" width="9.6" height="15.0" fill="rgb(243,117,13)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>reflect.(*MapIter).Value (1 samples, 0.16%)</title><rect x="845.8" y="437" width="1.9" height="15.0" fill="rgb(231,209,50)" rx="2" ry="2" />
<text  x="848.75" y="447.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.16%)</title><rect x="214.6" y="341" width="1.9" height="15.0" fill="rgb(248,17,38)" rx="2" ry="2" />
<text  x="217.64" y="351.5" ></text>
</g>
<g >
<title>runtime.Callers (2 samples, 0.32%)</title><rect x="210.8" y="421" width="3.8" height="15.0" fill="rgb(214,173,30)" rx="2" ry="2" />
<text  x="213.81" y="431.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.(*lockOrder).PostLock (2 samples, 0.32%)</title><rect x="210.8" y="453" width="3.8" height="15.0" fill="rgb(218,75,45)" rx="2" ry="2" />
<text  x="213.81" y="463.5" ></text>
</g>
<g >
<title>runtime.futex (7 samples, 1.13%)</title><rect x="1098.2" y="469" width="13.4" height="15.0" fill="rgb(235,87,52)" rx="2" ry="2" />
<text  x="1101.20" y="479.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.16%)</title><rect x="824.7" y="485" width="1.9" height="15.0" fill="rgb(213,128,35)" rx="2" ry="2" />
<text  x="827.72" y="495.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (11 samples, 1.78%)</title><rect x="710.0" y="389" width="21.0" height="15.0" fill="rgb(209,70,19)" rx="2" ry="2" />
<text  x="712.97" y="399.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.16%)</title><rect x="828.5" y="453" width="2.0" height="15.0" fill="rgb(219,64,23)" rx="2" ry="2" />
<text  x="831.54" y="463.5" ></text>
</g>
<g >
<title>runtime.mapassign (1 samples, 0.16%)</title><rect x="50.2" y="277" width="1.9" height="15.0" fill="rgb(215,66,43)" rx="2" ry="2" />
<text  x="53.16" y="287.5" ></text>
</g>
<g >
<title>encoding/json.typeEncoder (1 samples, 0.16%)</title><rect x="279.7" y="437" width="1.9" height="15.0" fill="rgb(232,111,43)" rx="2" ry="2" />
<text  x="282.66" y="447.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.16%)</title><rect x="843.8" y="405" width="2.0" height="15.0" fill="rgb(205,172,42)" rx="2" ry="2" />
<text  x="846.84" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).freeSpan (1 samples, 0.16%)</title><rect x="966.2" y="517" width="2.0" height="15.0" fill="rgb(227,203,54)" rx="2" ry="2" />
<text  x="969.24" y="527.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.UnMarshalProposalMessage (11 samples, 1.78%)</title><rect x="746.3" y="517" width="21.0" height="15.0" fill="rgb(232,220,18)" rx="2" ry="2" />
<text  x="749.30" y="527.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (7 samples, 1.13%)</title><rect x="189.8" y="421" width="13.4" height="15.0" fill="rgb(209,109,21)" rx="2" ry="2" />
<text  x="192.77" y="431.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (3 samples, 0.49%)</title><rect x="224.2" y="421" width="5.7" height="15.0" fill="rgb(248,43,52)" rx="2" ry="2" />
<text  x="227.20" y="431.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (2 samples, 0.32%)</title><rect x="342.8" y="373" width="3.8" height="15.0" fill="rgb(247,188,23)" rx="2" ry="2" />
<text  x="345.77" y="383.5" ></text>
</g>
<g >
<title>os.(*File).write (2 samples, 0.32%)</title><rect x="851.5" y="501" width="3.8" height="15.0" fill="rgb(213,75,49)" rx="2" ry="2" />
<text  x="854.49" y="511.5" ></text>
</g>
<g >
<title>runtime.newstack (2 samples, 0.32%)</title><rect x="866.8" y="469" width="3.8" height="15.0" fill="rgb(249,37,37)" rx="2" ry="2" />
<text  x="869.79" y="479.5" ></text>
</g>
<g >
<title>math/big.subVV (2 samples, 0.32%)</title><rect x="694.7" y="341" width="3.8" height="15.0" fill="rgb(218,223,0)" rx="2" ry="2" />
<text  x="697.67" y="351.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (13 samples, 2.11%)</title><rect x="968.2" y="565" width="24.8" height="15.0" fill="rgb(235,175,4)" rx="2" ry="2" />
<text  x="971.15" y="575.5" >r..</text>
</g>
<g >
<title>math/big.shrVU (2 samples, 0.32%)</title><rect x="268.2" y="405" width="3.8" height="15.0" fill="rgb(245,117,46)" rx="2" ry="2" />
<text  x="271.18" y="415.5" ></text>
</g>
<g >
<title>math/big.nat.clear (3 samples, 0.49%)</title><rect x="166.8" y="357" width="5.8" height="15.0" fill="rgb(227,206,42)" rx="2" ry="2" />
<text  x="169.82" y="367.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (3 samples, 0.49%)</title><rect x="792.2" y="421" width="5.7" height="15.0" fill="rgb(227,50,36)" rx="2" ry="2" />
<text  x="795.20" y="431.5" ></text>
</g>
<g >
<title>math/big.nat.make (2 samples, 0.32%)</title><rect x="656.4" y="373" width="3.8" height="15.0" fill="rgb(230,185,32)" rx="2" ry="2" />
<text  x="659.42" y="383.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (6 samples, 0.97%)</title><rect x="285.4" y="501" width="11.5" height="15.0" fill="rgb(251,23,29)" rx="2" ry="2" />
<text  x="288.40" y="511.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (1 samples, 0.16%)</title><rect x="272.0" y="405" width="1.9" height="15.0" fill="rgb(252,219,28)" rx="2" ry="2" />
<text  x="275.01" y="415.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DB).Get (2 samples, 0.32%)</title><rect x="346.6" y="485" width="3.8" height="15.0" fill="rgb(223,212,9)" rx="2" ry="2" />
<text  x="349.60" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (4 samples, 0.65%)</title><rect x="10.0" y="405" width="7.6" height="15.0" fill="rgb(232,223,13)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.16%)</title><rect x="658.3" y="197" width="1.9" height="15.0" fill="rgb(224,151,45)" rx="2" ry="2" />
<text  x="661.33" y="207.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (2 samples, 0.32%)</title><rect x="742.5" y="485" width="3.8" height="15.0" fill="rgb(232,179,35)" rx="2" ry="2" />
<text  x="745.48" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.32%)</title><rect x="656.4" y="309" width="3.8" height="15.0" fill="rgb(235,143,5)" rx="2" ry="2" />
<text  x="659.42" y="319.5" ></text>
</g>
<g >
<title>crypto/rand.(*devReader).Read (4 samples, 0.65%)</title><rect x="371.5" y="389" width="7.6" height="15.0" fill="rgb(228,155,50)" rx="2" ry="2" />
<text  x="374.46" y="399.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (10 samples, 1.62%)</title><rect x="746.3" y="501" width="19.1" height="15.0" fill="rgb(250,168,32)" rx="2" ry="2" />
<text  x="749.30" y="511.5" ></text>
</g>
<g >
<title>runtime.timerproc (3 samples, 0.49%)</title><rect x="1180.4" y="565" width="5.8" height="15.0" fill="rgb(229,202,5)" rx="2" ry="2" />
<text  x="1183.44" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.16%)</title><rect x="50.2" y="101" width="1.9" height="15.0" fill="rgb(228,162,15)" rx="2" ry="2" />
<text  x="53.16" y="111.5" ></text>
</g>
<g >
<title>crypto/rand.getRandomBatch (4 samples, 0.65%)</title><rect x="371.5" y="357" width="7.6" height="15.0" fill="rgb(208,85,44)" rx="2" ry="2" />
<text  x="374.46" y="367.5" ></text>
</g>
<g >
<title>time.After (3 samples, 0.49%)</title><rect x="870.6" y="549" width="5.8" height="15.0" fill="rgb(251,137,31)" rx="2" ry="2" />
<text  x="873.62" y="559.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast.func1 (1 samples, 0.16%)</title><rect x="1182.4" y="485" width="1.9" height="15.0" fill="rgb(227,207,13)" rx="2" ry="2" />
<text  x="1185.35" y="495.5" ></text>
</g>
<g >
<title>runtime.chansend (1 samples, 0.16%)</title><rect x="338.9" y="533" width="2.0" height="15.0" fill="rgb(236,33,51)" rx="2" ry="2" />
<text  x="341.95" y="543.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.16%)</title><rect x="338.9" y="453" width="2.0" height="15.0" fill="rgb(246,220,40)" rx="2" ry="2" />
<text  x="341.95" y="463.5" ></text>
</g>
<g >
<title>fmt.Println (2 samples, 0.32%)</title><rect x="851.5" y="549" width="3.8" height="15.0" fill="rgb(205,78,9)" rx="2" ry="2" />
<text  x="854.49" y="559.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.16%)</title><rect x="962.4" y="469" width="1.9" height="15.0" fill="rgb(219,124,24)" rx="2" ry="2" />
<text  x="965.41" y="479.5" ></text>
</g>
<g >
<title>math/big.(*Int).Add (1 samples, 0.16%)</title><rect x="182.1" y="357" width="1.9" height="15.0" fill="rgb(237,76,37)" rx="2" ry="2" />
<text  x="185.12" y="367.5" ></text>
</g>
<g >
<title>math/big.putNat (1 samples, 0.16%)</title><rect x="19.6" y="373" width="1.9" height="15.0" fill="rgb(222,221,50)" rx="2" ry="2" />
<text  x="22.56" y="383.5" ></text>
</g>
<g >
<title>runtime.forEachP (1 samples, 0.16%)</title><rect x="968.2" y="501" width="1.9" height="15.0" fill="rgb(214,12,20)" rx="2" ry="2" />
<text  x="971.15" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).string (1 samples, 0.16%)</title><rect x="31.0" y="325" width="1.9" height="15.0" fill="rgb(222,208,31)" rx="2" ry="2" />
<text  x="34.04" y="335.5" ></text>
</g>
<g >
<title>runtime.notesleep (3 samples, 0.49%)</title><rect x="998.8" y="485" width="5.7" height="15.0" fill="rgb(214,51,43)" rx="2" ry="2" />
<text  x="1001.75" y="495.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.16%)</title><rect x="887.8" y="517" width="1.9" height="15.0" fill="rgb(225,37,49)" rx="2" ry="2" />
<text  x="890.83" y="527.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (1 samples, 0.16%)</title><rect x="17.6" y="437" width="2.0" height="15.0" fill="rgb(244,65,32)" rx="2" ry="2" />
<text  x="20.65" y="447.5" ></text>
</g>
<g >
<title>math/big.basicMul (1 samples, 0.16%)</title><rect x="819.0" y="437" width="1.9" height="15.0" fill="rgb(252,219,18)" rx="2" ry="2" />
<text  x="821.98" y="447.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.16%)</title><rect x="780.7" y="421" width="1.9" height="15.0" fill="rgb(206,110,29)" rx="2" ry="2" />
<text  x="783.73" y="431.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (1 samples, 0.16%)</title><rect x="830.5" y="469" width="1.9" height="15.0" fill="rgb(214,59,33)" rx="2" ry="2" />
<text  x="833.45" y="479.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock.func1 (3 samples, 0.49%)</title><rect x="224.2" y="485" width="5.7" height="15.0" fill="rgb(206,3,4)" rx="2" ry="2" />
<text  x="227.20" y="495.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (4 samples, 0.65%)</title><rect x="954.8" y="389" width="7.6" height="15.0" fill="rgb(239,159,27)" rx="2" ry="2" />
<text  x="957.76" y="399.5" ></text>
</g>
<g >
<title>time.when (1 samples, 0.16%)</title><rect x="874.4" y="517" width="2.0" height="15.0" fill="rgb(219,182,28)" rx="2" ry="2" />
<text  x="877.44" y="527.5" ></text>
</g>
<g >
<title>os.(*File).WriteAt (1 samples, 0.16%)</title><rect x="38.7" y="469" width="1.9" height="15.0" fill="rgb(216,172,8)" rx="2" ry="2" />
<text  x="41.69" y="479.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (1 samples, 0.16%)</title><rect x="312.2" y="533" width="1.9" height="15.0" fill="rgb(216,11,38)" rx="2" ry="2" />
<text  x="315.17" y="543.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.16%)</title><rect x="1048.5" y="485" width="1.9" height="15.0" fill="rgb(229,151,31)" rx="2" ry="2" />
<text  x="1051.48" y="495.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.16%)</title><rect x="229.9" y="421" width="1.9" height="15.0" fill="rgb(249,215,3)" rx="2" ry="2" />
<text  x="232.94" y="431.5" ></text>
</g>
<g >
<title>syscall.read (20 samples, 3.24%)</title><rect x="916.5" y="485" width="38.3" height="15.0" fill="rgb(215,176,47)" rx="2" ry="2" />
<text  x="919.52" y="495.5" >sys..</text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.16%)</title><rect x="289.2" y="405" width="1.9" height="15.0" fill="rgb(209,128,9)" rx="2" ry="2" />
<text  x="292.22" y="415.5" ></text>
</g>
<g >
<title>runtime.netpollinited (1 samples, 0.16%)</title><rect x="1044.7" y="501" width="1.9" height="15.0" fill="rgb(231,162,32)" rx="2" ry="2" />
<text  x="1047.65" y="511.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.16%)</title><rect x="302.6" y="453" width="1.9" height="15.0" fill="rgb(238,15,3)" rx="2" ry="2" />
<text  x="305.61" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.16%)</title><rect x="658.3" y="213" width="1.9" height="15.0" fill="rgb(242,135,30)" rx="2" ry="2" />
<text  x="661.33" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (8 samples, 1.30%)</title><rect x="296.9" y="533" width="15.3" height="15.0" fill="rgb(245,84,43)" rx="2" ry="2" />
<text  x="299.87" y="543.5" ></text>
</g>
<g >
<title>math/big.(*Int).Mul (6 samples, 0.97%)</title><rect x="698.5" y="373" width="11.5" height="15.0" fill="rgb(225,118,19)" rx="2" ry="2" />
<text  x="701.49" y="383.5" ></text>
</g>
<g >
<title>time.NewTimer (3 samples, 0.49%)</title><rect x="870.6" y="533" width="5.8" height="15.0" fill="rgb(210,226,18)" rx="2" ry="2" />
<text  x="873.62" y="543.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (2 samples, 0.32%)</title><rect x="725.3" y="373" width="3.8" height="15.0" fill="rgb(216,122,22)" rx="2" ry="2" />
<text  x="728.27" y="383.5" ></text>
</g>
<g >
<title>crypto/rsa.decrypt (181 samples, 29.34%)</title><rect x="363.8" y="453" width="346.2" height="15.0" fill="rgb(241,156,25)" rx="2" ry="2" />
<text  x="366.81" y="463.5" >crypto/rsa.decrypt</text>
</g>
<g >
<title>math/big.nat.div (2 samples, 0.32%)</title><rect x="174.5" y="389" width="3.8" height="15.0" fill="rgb(236,122,29)" rx="2" ry="2" />
<text  x="177.47" y="399.5" ></text>
</g>
<g >
<title>crypto/internal/randutil.MaybeReadByte (2 samples, 0.32%)</title><rect x="367.6" y="437" width="3.9" height="15.0" fill="rgb(222,186,43)" rx="2" ry="2" />
<text  x="370.63" y="447.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (1 samples, 0.16%)</title><rect x="19.6" y="437" width="1.9" height="15.0" fill="rgb(224,96,54)" rx="2" ry="2" />
<text  x="22.56" y="447.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.16%)</title><rect x="880.2" y="437" width="1.9" height="15.0" fill="rgb(239,66,12)" rx="2" ry="2" />
<text  x="883.18" y="447.5" ></text>
</g>
<g >
<title>runtime.epollwait (2 samples, 0.32%)</title><rect x="994.9" y="485" width="3.9" height="15.0" fill="rgb(224,22,34)" rx="2" ry="2" />
<text  x="997.93" y="495.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.16%)</title><rect x="40.6" y="341" width="1.9" height="15.0" fill="rgb(226,151,49)" rx="2" ry="2" />
<text  x="43.60" y="351.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.16%)</title><rect x="170.6" y="341" width="2.0" height="15.0" fill="rgb(246,203,35)" rx="2" ry="2" />
<text  x="173.65" y="351.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.49%)</title><rect x="864.9" y="517" width="5.7" height="15.0" fill="rgb(229,166,10)" rx="2" ry="2" />
<text  x="867.88" y="527.5" ></text>
</g>
<g >
<title>math/big.nat.montgomery (132 samples, 21.39%)</title><rect x="415.4" y="389" width="252.5" height="15.0" fill="rgb(229,165,25)" rx="2" ry="2" />
<text  x="418.45" y="399.5" >math/big.nat.montgomery</text>
</g>
<g >
<title>encoding/json.unquoteBytes (1 samples, 0.16%)</title><rect x="298.8" y="389" width="1.9" height="15.0" fill="rgb(228,54,22)" rx="2" ry="2" />
<text  x="301.78" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.16%)</title><rect x="740.6" y="373" width="1.9" height="15.0" fill="rgb(207,116,42)" rx="2" ry="2" />
<text  x="743.57" y="383.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.16%)</title><rect x="40.6" y="357" width="1.9" height="15.0" fill="rgb(209,152,24)" rx="2" ry="2" />
<text  x="43.60" y="367.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (1 samples, 0.16%)</title><rect x="857.2" y="501" width="1.9" height="15.0" fill="rgb(220,34,7)" rx="2" ry="2" />
<text  x="860.23" y="511.5" ></text>
</g>
<g >
<title>runtime.schedule (44 samples, 7.13%)</title><rect x="1008.3" y="533" width="84.2" height="15.0" fill="rgb(216,124,24)" rx="2" ry="2" />
<text  x="1011.31" y="543.5" >runtime.s..</text>
</g>
<g >
<title>runtime.(*mheap).scavengeLocked (1 samples, 0.16%)</title><rect x="964.3" y="517" width="1.9" height="15.0" fill="rgb(238,20,25)" rx="2" ry="2" />
<text  x="967.33" y="527.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (2 samples, 0.32%)</title><rect x="279.7" y="501" width="3.8" height="15.0" fill="rgb(237,30,49)" rx="2" ry="2" />
<text  x="282.66" y="511.5" ></text>
</g>
<g >
<title>bytes.Compare (2 samples, 0.32%)</title><rect x="346.6" y="341" width="3.8" height="15.0" fill="rgb(233,171,0)" rx="2" ry="2" />
<text  x="349.60" y="351.5" ></text>
</g>
<g >
<title>math/big.nat.div (18 samples, 2.92%)</title><rect x="237.6" y="437" width="34.4" height="15.0" fill="rgb(221,143,33)" rx="2" ry="2" />
<text  x="240.59" y="447.5" >ma..</text>
</g>
<g >
<title>math/big.nat.divLarge (1 samples, 0.16%)</title><rect x="19.6" y="389" width="1.9" height="15.0" fill="rgb(233,52,12)" rx="2" ry="2" />
<text  x="22.56" y="399.5" ></text>
</g>
<g >
<title>math/big.basicMul (4 samples, 0.65%)</title><rect x="671.7" y="389" width="7.7" height="15.0" fill="rgb(232,195,14)" rx="2" ry="2" />
<text  x="674.72" y="399.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.16%)</title><rect x="765.4" y="469" width="1.9" height="15.0" fill="rgb(233,96,22)" rx="2" ry="2" />
<text  x="768.43" y="479.5" ></text>
</g>
<g >
<title>crypto/rsa.pkcs1v15HashInfo (1 samples, 0.16%)</title><rect x="822.8" y="501" width="1.9" height="15.0" fill="rgb(222,82,41)" rx="2" ry="2" />
<text  x="825.80" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (2 samples, 0.32%)</title><rect x="880.2" y="517" width="3.8" height="15.0" fill="rgb(250,120,48)" rx="2" ry="2" />
<text  x="883.18" y="527.5" ></text>
</g>
<g >
<title>syscall.Syscall (2 samples, 0.32%)</title><rect x="851.5" y="437" width="3.8" height="15.0" fill="rgb(220,74,31)" rx="2" ry="2" />
<text  x="854.49" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.16%)</title><rect x="34.9" y="421" width="1.9" height="15.0" fill="rgb(226,175,19)" rx="2" ry="2" />
<text  x="37.86" y="431.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (1 samples, 0.16%)</title><rect x="400.1" y="373" width="2.0" height="15.0" fill="rgb(236,112,6)" rx="2" ry="2" />
<text  x="403.15" y="383.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.16%)</title><rect x="1182.4" y="437" width="1.9" height="15.0" fill="rgb(236,226,37)" rx="2" ry="2" />
<text  x="1185.35" y="447.5" ></text>
</g>
<g >
<title>math/big.nat.div (2 samples, 0.32%)</title><rect x="411.6" y="389" width="3.8" height="15.0" fill="rgb(241,198,49)" rx="2" ry="2" />
<text  x="414.62" y="399.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock (3 samples, 0.49%)</title><rect x="224.2" y="517" width="5.7" height="15.0" fill="rgb(228,220,41)" rx="2" ry="2" />
<text  x="227.20" y="527.5" ></text>
</g>
<g >
<title>reflect.Value.MapKeys (1 samples, 0.16%)</title><rect x="32.9" y="325" width="2.0" height="15.0" fill="rgb(222,106,42)" rx="2" ry="2" />
<text  x="35.95" y="335.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (2 samples, 0.32%)</title><rect x="25.3" y="533" width="3.8" height="15.0" fill="rgb(205,68,20)" rx="2" ry="2" />
<text  x="28.30" y="543.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.16%)</title><rect x="40.6" y="437" width="1.9" height="15.0" fill="rgb(247,216,44)" rx="2" ry="2" />
<text  x="43.60" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.49%)</title><rect x="864.9" y="501" width="5.7" height="15.0" fill="rgb(208,211,45)" rx="2" ry="2" />
<text  x="867.88" y="511.5" ></text>
</g>
<g >
<title>internal/reflectlite.ValueOf (1 samples, 0.16%)</title><rect x="356.2" y="421" width="1.9" height="15.0" fill="rgb(236,0,51)" rx="2" ry="2" />
<text  x="359.16" y="431.5" ></text>
</g>
<g >
<title>sync.(*poolChain).popHead (1 samples, 0.16%)</title><rect x="807.5" y="389" width="1.9" height="15.0" fill="rgb(209,197,20)" rx="2" ry="2" />
<text  x="810.50" y="399.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (20 samples, 3.24%)</title><rect x="235.7" y="469" width="38.2" height="15.0" fill="rgb(251,206,48)" rx="2" ry="2" />
<text  x="238.67" y="479.5" >mat..</text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (3 samples, 0.49%)</title><rect x="826.6" y="533" width="5.8" height="15.0" fill="rgb(231,187,19)" rx="2" ry="2" />
<text  x="829.63" y="543.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.memGet (2 samples, 0.32%)</title><rect x="346.6" y="437" width="3.8" height="15.0" fill="rgb(220,164,0)" rx="2" ry="2" />
<text  x="349.60" y="447.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.16%)</title><rect x="744.4" y="469" width="1.9" height="15.0" fill="rgb(251,160,53)" rx="2" ry="2" />
<text  x="747.39" y="479.5" ></text>
</g>
<g >
<title>runtime.send (2 samples, 0.32%)</title><rect x="314.1" y="517" width="3.8" height="15.0" fill="rgb(222,117,52)" rx="2" ry="2" />
<text  x="317.08" y="527.5" ></text>
</g>
<g >
<title>runtime.wakep (4 samples, 0.65%)</title><rect x="954.8" y="437" width="7.6" height="15.0" fill="rgb(231,219,15)" rx="2" ry="2" />
<text  x="957.76" y="447.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (3 samples, 0.49%)</title><rect x="792.2" y="501" width="5.7" height="15.0" fill="rgb(253,188,19)" rx="2" ry="2" />
<text  x="795.20" y="511.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.16%)</title><rect x="212.7" y="325" width="1.9" height="15.0" fill="rgb(226,196,45)" rx="2" ry="2" />
<text  x="215.72" y="335.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.16%)</title><rect x="765.4" y="501" width="1.9" height="15.0" fill="rgb(225,196,51)" rx="2" ry="2" />
<text  x="768.43" y="511.5" ></text>
</g>
<g >
<title>runtime.goexit1 (1 samples, 0.16%)</title><rect x="993.0" y="565" width="1.9" height="15.0" fill="rgb(236,52,0)" rx="2" ry="2" />
<text  x="996.01" y="575.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.16%)</title><rect x="828.5" y="485" width="2.0" height="15.0" fill="rgb(216,14,30)" rx="2" ry="2" />
<text  x="831.54" y="495.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (2 samples, 0.32%)</title><rect x="761.6" y="485" width="3.8" height="15.0" fill="rgb(209,213,19)" rx="2" ry="2" />
<text  x="764.60" y="495.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintf (6 samples, 0.97%)</title><rect x="836.2" y="517" width="11.5" height="15.0" fill="rgb(225,32,47)" rx="2" ry="2" />
<text  x="839.19" y="527.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.16%)</title><rect x="740.6" y="453" width="1.9" height="15.0" fill="rgb(252,38,35)" rx="2" ry="2" />
<text  x="743.57" y="463.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (5 samples, 0.81%)</title><rect x="10.0" y="453" width="9.6" height="15.0" fill="rgb(206,142,32)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.16%)</title><rect x="1174.7" y="565" width="1.9" height="15.0" fill="rgb(224,68,46)" rx="2" ry="2" />
<text  x="1177.70" y="575.5" ></text>
</g>
<g >
<title>crypto/rsa.VerifyPKCS1v15 (21 samples, 3.40%)</title><rect x="235.7" y="501" width="40.1" height="15.0" fill="rgb(225,225,13)" rx="2" ry="2" />
<text  x="238.67" y="511.5" >cry..</text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.16%)</title><rect x="34.9" y="325" width="1.9" height="15.0" fill="rgb(240,71,22)" rx="2" ry="2" />
<text  x="37.86" y="335.5" ></text>
</g>
<g >
<title>math/big.nat.mul (5 samples, 0.81%)</title><rect x="700.4" y="357" width="9.6" height="15.0" fill="rgb(249,110,7)" rx="2" ry="2" />
<text  x="703.41" y="367.5" ></text>
</g>
<g >
<title>syscall.Read (8 samples, 1.30%)</title><rect x="323.6" y="501" width="15.3" height="15.0" fill="rgb(219,191,45)" rx="2" ry="2" />
<text  x="326.65" y="511.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.16%)</title><rect x="352.3" y="469" width="1.9" height="15.0" fill="rgb(230,65,23)" rx="2" ry="2" />
<text  x="355.33" y="479.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (1 samples, 0.16%)</title><rect x="828.5" y="421" width="2.0" height="15.0" fill="rgb(224,210,13)" rx="2" ry="2" />
<text  x="831.54" y="431.5" ></text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.32%)</title><rect x="664.1" y="373" width="3.8" height="15.0" fill="rgb(230,188,38)" rx="2" ry="2" />
<text  x="667.07" y="383.5" ></text>
</g>
<g >
<title>math/big.nat.add (1 samples, 0.16%)</title><rect x="182.1" y="341" width="1.9" height="15.0" fill="rgb(215,227,33)" rx="2" ry="2" />
<text  x="185.12" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.getDigest2 (1 samples, 0.16%)</title><rect x="361.9" y="485" width="1.9" height="15.0" fill="rgb(248,111,51)" rx="2" ry="2" />
<text  x="364.90" y="495.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (73 samples, 11.83%)</title><rect x="511.1" y="373" width="139.6" height="15.0" fill="rgb(205,149,41)" rx="2" ry="2" />
<text  x="514.07" y="383.5" >math/big.addMulVVW</text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.getDigest2 (2 samples, 0.32%)</title><rect x="231.8" y="501" width="3.9" height="15.0" fill="rgb(209,142,48)" rx="2" ry="2" />
<text  x="234.85" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (3 samples, 0.49%)</title><rect x="826.6" y="517" width="5.8" height="15.0" fill="rgb(213,195,26)" rx="2" ry="2" />
<text  x="829.63" y="527.5" ></text>
</g>
<g >
<title>crypto/rsa.SignPKCS1v15 (196 samples, 31.77%)</title><rect x="363.8" y="485" width="374.9" height="15.0" fill="rgb(246,144,19)" rx="2" ry="2" />
<text  x="366.81" y="495.5" >crypto/rsa.SignPKCS1v15</text>
</g>
<g >
<title>math/big.getNat (1 samples, 0.16%)</title><rect x="807.5" y="421" width="1.9" height="15.0" fill="rgb(229,79,7)" rx="2" ry="2" />
<text  x="810.50" y="431.5" ></text>
</g>
<g >
<title>crypto/rsa.decryptAndCheck (78 samples, 12.64%)</title><rect x="54.0" y="453" width="149.2" height="15.0" fill="rgb(221,2,13)" rx="2" ry="2" />
<text  x="56.99" y="463.5" >crypto/rsa.decryptA..</text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.16%)</title><rect x="34.9" y="309" width="1.9" height="15.0" fill="rgb(217,68,38)" rx="2" ry="2" />
<text  x="37.86" y="319.5" ></text>
</g>
<g >
<title>runtime.send (1 samples, 0.16%)</title><rect x="338.9" y="517" width="2.0" height="15.0" fill="rgb(208,42,32)" rx="2" ry="2" />
<text  x="341.95" y="527.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).Get (2 samples, 0.32%)</title><rect x="342.8" y="469" width="3.8" height="15.0" fill="rgb(246,70,52)" rx="2" ry="2" />
<text  x="345.77" y="479.5" ></text>
</g>
<g >
<title>time.when (1 samples, 0.16%)</title><rect x="1188.1" y="565" width="1.9" height="15.0" fill="rgb(223,214,21)" rx="2" ry="2" />
<text  x="1191.09" y="575.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (1 samples, 0.16%)</title><rect x="220.4" y="517" width="1.9" height="15.0" fill="rgb(215,129,16)" rx="2" ry="2" />
<text  x="223.37" y="527.5" ></text>
</g>
<g >
<title>encoding/json.stateEndValue (2 samples, 0.32%)</title><rect x="293.0" y="469" width="3.9" height="15.0" fill="rgb(247,195,54)" rx="2" ry="2" />
<text  x="296.05" y="479.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.16%)</title><rect x="214.6" y="389" width="1.9" height="15.0" fill="rgb(251,80,43)" rx="2" ry="2" />
<text  x="217.64" y="399.5" ></text>
</g>
<g >
<title>reflect.Value.Elem (1 samples, 0.16%)</title><rect x="304.5" y="469" width="1.9" height="15.0" fill="rgb(208,217,48)" rx="2" ry="2" />
<text  x="307.52" y="479.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.16%)</title><rect x="283.5" y="469" width="1.9" height="15.0" fill="rgb(214,192,9)" rx="2" ry="2" />
<text  x="286.48" y="479.5" ></text>
</g>
<g >
<title>runtime.pidleput (1 samples, 0.16%)</title><rect x="1046.6" y="501" width="1.9" height="15.0" fill="rgb(205,79,13)" rx="2" ry="2" />
<text  x="1049.56" y="511.5" ></text>
</g>
<g >
<title>BCDns_0.1/utils.BytesToInt (2 samples, 0.32%)</title><rect x="876.4" y="533" width="3.8" height="15.0" fill="rgb(231,59,1)" rx="2" ry="2" />
<text  x="879.35" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.32%)</title><rect x="656.4" y="293" width="3.8" height="15.0" fill="rgb(245,126,37)" rx="2" ry="2" />
<text  x="659.42" y="303.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (1 samples, 0.16%)</title><rect x="819.0" y="453" width="1.9" height="15.0" fill="rgb(219,87,34)" rx="2" ry="2" />
<text  x="821.98" y="463.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtInteger (2 samples, 0.32%)</title><rect x="836.2" y="437" width="3.8" height="15.0" fill="rgb(247,158,9)" rx="2" ry="2" />
<text  x="839.19" y="447.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.49%)</title><rect x="792.2" y="437" width="5.7" height="15.0" fill="rgb(220,121,12)" rx="2" ry="2" />
<text  x="795.20" y="447.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Hash (4 samples, 0.65%)</title><rect x="738.7" y="501" width="7.6" height="15.0" fill="rgb(213,158,7)" rx="2" ry="2" />
<text  x="741.65" y="511.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (2 samples, 0.32%)</title><rect x="293.0" y="485" width="3.9" height="15.0" fill="rgb(238,202,1)" rx="2" ry="2" />
<text  x="296.05" y="495.5" ></text>
</g>
<g >
<title>runtime.futex (4 samples, 0.65%)</title><rect x="954.8" y="373" width="7.6" height="15.0" fill="rgb(212,96,6)" rx="2" ry="2" />
<text  x="957.76" y="383.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.16%)</title><rect x="291.1" y="437" width="1.9" height="15.0" fill="rgb(212,170,44)" rx="2" ry="2" />
<text  x="294.13" y="447.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.16%)</title><rect x="210.8" y="309" width="1.9" height="15.0" fill="rgb(234,119,16)" rx="2" ry="2" />
<text  x="213.81" y="319.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.PostUnlock (1 samples, 0.16%)</title><rect x="218.5" y="485" width="1.9" height="15.0" fill="rgb(253,147,11)" rx="2" ry="2" />
<text  x="221.46" y="495.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Sum (1 samples, 0.16%)</title><rect x="231.8" y="485" width="2.0" height="15.0" fill="rgb(212,155,32)" rx="2" ry="2" />
<text  x="234.85" y="495.5" ></text>
</g>
<g >
<title>syscall.Syscall (2 samples, 0.32%)</title><rect x="847.7" y="437" width="3.8" height="15.0" fill="rgb(209,64,14)" rx="2" ry="2" />
<text  x="850.67" y="447.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock (5 samples, 0.81%)</title><rect x="10.0" y="517" width="9.6" height="15.0" fill="rgb(225,221,36)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.16%)</title><rect x="338.9" y="437" width="2.0" height="15.0" fill="rgb(205,171,44)" rx="2" ry="2" />
<text  x="341.95" y="447.5" ></text>
</g>
<g >
<title>os.(*File).write (1 samples, 0.16%)</title><rect x="42.5" y="389" width="1.9" height="15.0" fill="rgb(240,29,28)" rx="2" ry="2" />
<text  x="45.51" y="399.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.32%)</title><rect x="950.9" y="389" width="3.9" height="15.0" fill="rgb(229,109,38)" rx="2" ry="2" />
<text  x="953.94" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (4 samples, 0.65%)</title><rect x="10.0" y="421" width="7.6" height="15.0" fill="rgb(214,136,2)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>runtime.netpollblock (1 samples, 0.16%)</title><rect x="912.7" y="453" width="1.9" height="15.0" fill="rgb(234,80,11)" rx="2" ry="2" />
<text  x="915.69" y="463.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (2 samples, 0.32%)</title><rect x="780.7" y="501" width="3.9" height="15.0" fill="rgb(207,28,31)" rx="2" ry="2" />
<text  x="783.73" y="511.5" ></text>
</g>
<g >
<title>runtime.runqsteal (2 samples, 0.32%)</title><rect x="1050.4" y="501" width="3.8" height="15.0" fill="rgb(220,48,34)" rx="2" ry="2" />
<text  x="1053.39" y="511.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.16%)</title><rect x="214.6" y="453" width="1.9" height="15.0" fill="rgb(221,78,5)" rx="2" ry="2" />
<text  x="217.64" y="463.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.32%)</title><rect x="287.3" y="437" width="3.8" height="15.0" fill="rgb(212,102,12)" rx="2" ry="2" />
<text  x="290.31" y="447.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.16%)</title><rect x="396.3" y="357" width="1.9" height="15.0" fill="rgb(234,16,1)" rx="2" ry="2" />
<text  x="399.32" y="367.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.16%)</title><rect x="784.6" y="437" width="1.9" height="15.0" fill="rgb(248,112,29)" rx="2" ry="2" />
<text  x="787.55" y="447.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.16%)</title><rect x="321.7" y="501" width="1.9" height="15.0" fill="rgb(252,223,43)" rx="2" ry="2" />
<text  x="324.73" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (3 samples, 0.49%)</title><rect x="224.2" y="373" width="5.7" height="15.0" fill="rgb(230,46,4)" rx="2" ry="2" />
<text  x="227.20" y="383.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (13 samples, 2.11%)</title><rect x="710.0" y="453" width="24.8" height="15.0" fill="rgb(232,76,10)" rx="2" ry="2" />
<text  x="712.97" y="463.5" >c..</text>
</g>
<g >
<title>math/big.(*Int).Exp (11 samples, 1.78%)</title><rect x="799.9" y="485" width="21.0" height="15.0" fill="rgb(245,140,10)" rx="2" ry="2" />
<text  x="802.85" y="495.5" ></text>
</g>
<g >
<title>runtime.selectgo (5 samples, 0.81%)</title><rect x="861.1" y="549" width="9.5" height="15.0" fill="rgb(208,55,25)" rx="2" ry="2" />
<text  x="864.05" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="740.6" y="437" width="1.9" height="15.0" fill="rgb(206,198,33)" rx="2" ry="2" />
<text  x="743.57" y="447.5" ></text>
</g>
<g >
<title>runtime.fastrand (1 samples, 0.16%)</title><rect x="212.7" y="309" width="1.9" height="15.0" fill="rgb(217,105,54)" rx="2" ry="2" />
<text  x="215.72" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (2 samples, 0.32%)</title><rect x="25.3" y="517" width="3.8" height="15.0" fill="rgb(250,0,22)" rx="2" ry="2" />
<text  x="28.30" y="527.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.16%)</title><rect x="824.7" y="373" width="1.9" height="15.0" fill="rgb(254,179,36)" rx="2" ry="2" />
<text  x="827.72" y="383.5" ></text>
</g>
<g >
<title>math/big.nat.setWord (1 samples, 0.16%)</title><rect x="820.9" y="437" width="1.9" height="15.0" fill="rgb(208,34,9)" rx="2" ry="2" />
<text  x="823.89" y="447.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.32%)</title><rect x="210.8" y="389" width="3.8" height="15.0" fill="rgb(250,137,15)" rx="2" ry="2" />
<text  x="213.81" y="399.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Proposer).handleOrder (238 samples, 38.57%)</title><rect x="342.8" y="549" width="455.1" height="15.0" fill="rgb(213,209,16)" rx="2" ry="2" />
<text  x="345.77" y="559.5" >BCDns_0.1/consensusMy/service.(*Proposer).handleOrder</text>
</g>
<g >
<title>math/big.(*Int).ModInverse (6 samples, 0.97%)</title><rect x="178.3" y="421" width="11.5" height="15.0" fill="rgb(211,91,48)" rx="2" ry="2" />
<text  x="181.30" y="431.5" ></text>
</g>
<g >
<title>runtime.findrunnable (42 samples, 6.81%)</title><rect x="1010.2" y="517" width="80.4" height="15.0" fill="rgb(240,90,51)" rx="2" ry="2" />
<text  x="1013.23" y="527.5" >runtime.f..</text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (3 samples, 0.49%)</title><rect x="224.2" y="469" width="5.7" height="15.0" fill="rgb(216,126,17)" rx="2" ry="2" />
<text  x="227.20" y="479.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).getPtr (1 samples, 0.16%)</title><rect x="855.3" y="373" width="1.9" height="15.0" fill="rgb(243,153,13)" rx="2" ry="2" />
<text  x="858.32" y="383.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.16%)</title><rect x="855.3" y="485" width="1.9" height="15.0" fill="rgb(219,106,0)" rx="2" ry="2" />
<text  x="858.32" y="495.5" ></text>
</g>
<g >
<title>runtime.save (1 samples, 0.16%)</title><rect x="333.2" y="421" width="1.9" height="15.0" fill="rgb(233,183,32)" rx="2" ry="2" />
<text  x="336.21" y="431.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (4 samples, 0.65%)</title><rect x="55.9" y="373" width="7.6" height="15.0" fill="rgb(249,87,29)" rx="2" ry="2" />
<text  x="58.90" y="383.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (4 samples, 0.65%)</title><rect x="880.2" y="533" width="7.6" height="15.0" fill="rgb(215,187,48)" rx="2" ry="2" />
<text  x="883.18" y="543.5" ></text>
</g>
<g >
<title>runtime.readvarint (1 samples, 0.16%)</title><rect x="210.8" y="293" width="1.9" height="15.0" fill="rgb(254,146,44)" rx="2" ry="2" />
<text  x="213.81" y="303.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (1 samples, 0.16%)</title><rect x="52.1" y="453" width="1.9" height="15.0" fill="rgb(209,122,52)" rx="2" ry="2" />
<text  x="55.07" y="463.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (1 samples, 0.16%)</title><rect x="338.9" y="469" width="2.0" height="15.0" fill="rgb(228,75,42)" rx="2" ry="2" />
<text  x="341.95" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (4 samples, 0.65%)</title><rect x="10.0" y="325" width="7.6" height="15.0" fill="rgb(250,87,44)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtInteger (2 samples, 0.32%)</title><rect x="836.2" y="421" width="3.8" height="15.0" fill="rgb(246,94,15)" rx="2" ry="2" />
<text  x="839.19" y="431.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.CheckProposals (1 samples, 0.16%)</title><rect x="21.5" y="533" width="1.9" height="15.0" fill="rgb(225,97,40)" rx="2" ry="2" />
<text  x="24.47" y="543.5" ></text>
</g>
<g >
<title>runtime.entersyscall_sysmon (3 samples, 0.49%)</title><rect x="949.0" y="405" width="5.8" height="15.0" fill="rgb(239,45,27)" rx="2" ry="2" />
<text  x="952.03" y="415.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock.func1 (5 samples, 0.81%)</title><rect x="44.4" y="501" width="9.6" height="15.0" fill="rgb(236,52,40)" rx="2" ry="2" />
<text  x="47.42" y="511.5" ></text>
</g>
<g >
<title>crypto/rsa.SignPKCS1v15 (1 samples, 0.16%)</title><rect x="19.6" y="485" width="1.9" height="15.0" fill="rgb(237,76,50)" rx="2" ry="2" />
<text  x="22.56" y="495.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).VerifySignature (23 samples, 3.73%)</title><rect x="231.8" y="517" width="44.0" height="15.0" fill="rgb(248,100,36)" rx="2" ry="2" />
<text  x="234.85" y="527.5" >BCDn..</text>
</g>
<g >
<title>github.com/golang/snappy.Decode (1 samples, 0.16%)</title><rect x="887.8" y="533" width="1.9" height="15.0" fill="rgb(217,97,54)" rx="2" ry="2" />
<text  x="890.83" y="543.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (62 samples, 10.05%)</title><rect x="55.9" y="405" width="118.6" height="15.0" fill="rgb(237,4,46)" rx="2" ry="2" />
<text  x="58.90" y="415.5" >math/big.nat.e..</text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (2 samples, 0.32%)</title><rect x="342.8" y="405" width="3.8" height="15.0" fill="rgb(244,116,45)" rx="2" ry="2" />
<text  x="345.77" y="415.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (12 samples, 1.94%)</title><rect x="970.1" y="533" width="22.9" height="15.0" fill="rgb(240,208,26)" rx="2" ry="2" />
<text  x="973.06" y="543.5" >r..</text>
</g>
<g >
<title>encoding/json.(*decodeState).array (2 samples, 0.32%)</title><rect x="296.9" y="469" width="3.8" height="15.0" fill="rgb(228,199,23)" rx="2" ry="2" />
<text  x="299.87" y="479.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (2 samples, 0.32%)</title><rect x="962.4" y="565" width="3.8" height="15.0" fill="rgb(250,208,32)" rx="2" ry="2" />
<text  x="965.41" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).rotateLeft (1 samples, 0.16%)</title><rect x="50.2" y="53" width="1.9" height="15.0" fill="rgb(223,45,45)" rx="2" ry="2" />
<text  x="53.16" y="63.5" ></text>
</g>
<g >
<title>runtime.epollwait (14 samples, 2.27%)</title><rect x="1017.9" y="485" width="26.8" height="15.0" fill="rgb(217,132,3)" rx="2" ry="2" />
<text  x="1020.88" y="495.5" >r..</text>
</g>
<g >
<title>math/big.(*Int).Exp (13 samples, 2.11%)</title><rect x="710.0" y="437" width="24.8" height="15.0" fill="rgb(216,107,44)" rx="2" ry="2" />
<text  x="712.97" y="447.5" >m..</text>
</g>
<g >
<title>encoding/json.valueEncoder (1 samples, 0.16%)</title><rect x="279.7" y="453" width="1.9" height="15.0" fill="rgb(238,106,27)" rx="2" ry="2" />
<text  x="282.66" y="463.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.16%)</title><rect x="820.9" y="421" width="1.9" height="15.0" fill="rgb(205,97,52)" rx="2" ry="2" />
<text  x="823.89" y="431.5" ></text>
</g>
<g >
<title>runtime.futexsleep (3 samples, 0.49%)</title><rect x="998.8" y="469" width="5.7" height="15.0" fill="rgb(207,36,33)" rx="2" ry="2" />
<text  x="1001.75" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="887.8" y="501" width="1.9" height="15.0" fill="rgb(254,86,13)" rx="2" ry="2" />
<text  x="890.83" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (4 samples, 0.65%)</title><rect x="44.4" y="405" width="7.7" height="15.0" fill="rgb(235,129,2)" rx="2" ry="2" />
<text  x="47.42" y="415.5" ></text>
</g>
<g >
<title>math/big.NewInt (1 samples, 0.16%)</title><rect x="820.9" y="485" width="1.9" height="15.0" fill="rgb(245,114,54)" rx="2" ry="2" />
<text  x="823.89" y="495.5" ></text>
</g>
<g >
<title>math/big.addVW (1 samples, 0.16%)</title><rect x="182.1" y="309" width="1.9" height="15.0" fill="rgb(209,212,48)" rx="2" ry="2" />
<text  x="185.12" y="319.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.16%)</title><rect x="878.3" y="501" width="1.9" height="15.0" fill="rgb(213,50,3)" rx="2" ry="2" />
<text  x="881.27" y="511.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).checkSum (1 samples, 0.16%)</title><rect x="231.8" y="469" width="2.0" height="15.0" fill="rgb(228,135,29)" rx="2" ry="2" />
<text  x="234.85" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).string (1 samples, 0.16%)</title><rect x="790.3" y="437" width="1.9" height="15.0" fill="rgb(210,161,49)" rx="2" ry="2" />
<text  x="793.29" y="447.5" ></text>
</g>
<g >
<title>runtime.sysUnused (1 samples, 0.16%)</title><rect x="964.3" y="485" width="1.9" height="15.0" fill="rgb(247,202,52)" rx="2" ry="2" />
<text  x="967.33" y="495.5" ></text>
</g>
<g >
<title>math/big.nat.div (6 samples, 0.97%)</title><rect x="189.8" y="389" width="11.4" height="15.0" fill="rgb(206,72,33)" rx="2" ry="2" />
<text  x="192.77" y="399.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.16%)</title><rect x="381.0" y="389" width="1.9" height="15.0" fill="rgb(208,1,16)" rx="2" ry="2" />
<text  x="384.02" y="399.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.16%)</title><rect x="656.4" y="245" width="1.9" height="15.0" fill="rgb(220,199,31)" rx="2" ry="2" />
<text  x="659.42" y="255.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.16%)</title><rect x="266.3" y="389" width="1.9" height="15.0" fill="rgb(219,195,40)" rx="2" ry="2" />
<text  x="269.27" y="399.5" ></text>
</g>
<g >
<title>runtime.goready (2 samples, 0.32%)</title><rect x="314.1" y="501" width="3.8" height="15.0" fill="rgb(248,72,51)" rx="2" ry="2" />
<text  x="317.08" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="765.4" y="485" width="1.9" height="15.0" fill="rgb(210,46,5)" rx="2" ry="2" />
<text  x="768.43" y="495.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.16%)</title><rect x="310.3" y="485" width="1.9" height="15.0" fill="rgb(248,187,6)" rx="2" ry="2" />
<text  x="313.26" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="32.9" y="277" width="2.0" height="15.0" fill="rgb(244,64,3)" rx="2" ry="2" />
<text  x="35.95" y="287.5" ></text>
</g>
<g >
<title>runtime.bgscavenge.func2 (1 samples, 0.16%)</title><rect x="964.3" y="533" width="1.9" height="15.0" fill="rgb(249,158,41)" rx="2" ry="2" />
<text  x="967.33" y="543.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.16%)</title><rect x="824.7" y="501" width="1.9" height="15.0" fill="rgb(236,216,31)" rx="2" ry="2" />
<text  x="827.72" y="511.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.callers (2 samples, 0.32%)</title><rect x="210.8" y="437" width="3.8" height="15.0" fill="rgb(243,97,12)" rx="2" ry="2" />
<text  x="213.81" y="447.5" ></text>
</g>
<g >
<title>math/big.(*Int).Add (6 samples, 0.97%)</title><rect x="687.0" y="373" width="11.5" height="15.0" fill="rgb(244,200,19)" rx="2" ry="2" />
<text  x="690.02" y="383.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (6 samples, 0.97%)</title><rect x="769.3" y="469" width="11.4" height="15.0" fill="rgb(235,6,16)" rx="2" ry="2" />
<text  x="772.25" y="479.5" ></text>
</g>
<g >
<title>reflect.copyVal (1 samples, 0.16%)</title><rect x="788.4" y="421" width="1.9" height="15.0" fill="rgb(252,59,39)" rx="2" ry="2" />
<text  x="791.38" y="431.5" ></text>
</g>
<g >
<title>runtime.resetspinning (1 samples, 0.16%)</title><rect x="1004.5" y="517" width="1.9" height="15.0" fill="rgb(245,125,21)" rx="2" ry="2" />
<text  x="1007.49" y="527.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (4 samples, 0.65%)</title><rect x="44.4" y="341" width="7.7" height="15.0" fill="rgb(225,122,53)" rx="2" ry="2" />
<text  x="47.42" y="351.5" ></text>
</g>
<g >
<title>reflect.makeString (1 samples, 0.16%)</title><rect x="48.2" y="277" width="2.0" height="15.0" fill="rgb(210,33,44)" rx="2" ry="2" />
<text  x="51.25" y="287.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).popHead (2 samples, 0.32%)</title><rect x="256.7" y="357" width="3.8" height="15.0" fill="rgb(227,30,41)" rx="2" ry="2" />
<text  x="259.71" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="843.8" y="389" width="2.0" height="15.0" fill="rgb(237,204,31)" rx="2" ry="2" />
<text  x="846.84" y="399.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (3 samples, 0.49%)</title><rect x="205.1" y="453" width="5.7" height="15.0" fill="rgb(254,218,49)" rx="2" ry="2" />
<text  x="208.07" y="463.5" ></text>
</g>
<g >
<title>runtime.(*treapNode).updateInvariants (1 samples, 0.16%)</title><rect x="50.2" y="37" width="1.9" height="15.0" fill="rgb(233,105,13)" rx="2" ry="2" />
<text  x="53.16" y="47.5" ></text>
</g>
<g >
<title>runtime.addtimer (1 samples, 0.16%)</title><rect x="962.4" y="517" width="1.9" height="15.0" fill="rgb(209,84,20)" rx="2" ry="2" />
<text  x="965.41" y="527.5" ></text>
</g>
<g >
<title>math/big.(*Int).QuoRem (2 samples, 0.32%)</title><rect x="679.4" y="421" width="3.8" height="15.0" fill="rgb(231,2,5)" rx="2" ry="2" />
<text  x="682.37" y="431.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.16%)</title><rect x="887.8" y="421" width="1.9" height="15.0" fill="rgb(226,17,54)" rx="2" ry="2" />
<text  x="890.83" y="431.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.16%)</title><rect x="866.8" y="437" width="1.9" height="15.0" fill="rgb(214,1,51)" rx="2" ry="2" />
<text  x="869.79" y="447.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (1 samples, 0.16%)</title><rect x="317.9" y="533" width="1.9" height="15.0" fill="rgb(219,168,6)" rx="2" ry="2" />
<text  x="320.91" y="543.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.16%)</title><rect x="34.9" y="373" width="1.9" height="15.0" fill="rgb(209,177,52)" rx="2" ry="2" />
<text  x="37.86" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.16%)</title><rect x="298.8" y="405" width="1.9" height="15.0" fill="rgb(244,125,10)" rx="2" ry="2" />
<text  x="301.78" y="415.5" ></text>
</g>
<g >
<title>runtime.mcall (51 samples, 8.27%)</title><rect x="994.9" y="565" width="97.6" height="15.0" fill="rgb(226,119,39)" rx="2" ry="2" />
<text  x="997.93" y="575.5" >runtime.mcall</text>
</g>
<g >
<title>math/big.nat.div (1 samples, 0.16%)</title><rect x="65.5" y="373" width="1.9" height="15.0" fill="rgb(254,211,48)" rx="2" ry="2" />
<text  x="68.46" y="383.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).BroadCast (1 samples, 0.16%)</title><rect x="229.9" y="533" width="1.9" height="15.0" fill="rgb(216,204,9)" rx="2" ry="2" />
<text  x="232.94" y="543.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (2 samples, 0.32%)</title><rect x="31.0" y="405" width="3.9" height="15.0" fill="rgb(208,179,20)" rx="2" ry="2" />
<text  x="34.04" y="415.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Proposer).timer (9 samples, 1.46%)</title><rect x="859.1" y="565" width="17.3" height="15.0" fill="rgb(212,216,21)" rx="2" ry="2" />
<text  x="862.14" y="575.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.16%)</title><rect x="1184.3" y="517" width="1.9" height="15.0" fill="rgb(223,15,23)" rx="2" ry="2" />
<text  x="1187.26" y="527.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (1 samples, 0.16%)</title><rect x="36.8" y="453" width="1.9" height="15.0" fill="rgb(219,167,7)" rx="2" ry="2" />
<text  x="39.77" y="463.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1.1 (1 samples, 0.16%)</title><rect x="968.2" y="485" width="1.9" height="15.0" fill="rgb(209,224,30)" rx="2" ry="2" />
<text  x="971.15" y="495.5" ></text>
</g>
<g >
<title>fmt.(*pp).printValue (6 samples, 0.97%)</title><rect x="836.2" y="469" width="11.5" height="15.0" fill="rgb(248,138,46)" rx="2" ry="2" />
<text  x="839.19" y="479.5" ></text>
</g>
<g >
<title>net.(*conn).Write (1 samples, 0.16%)</title><rect x="229.9" y="501" width="1.9" height="15.0" fill="rgb(246,46,28)" rx="2" ry="2" />
<text  x="232.94" y="511.5" ></text>
</g>
<g >
<title>crypto.Hash.New (1 samples, 0.16%)</title><rect x="361.9" y="469" width="1.9" height="15.0" fill="rgb(249,68,10)" rx="2" ry="2" />
<text  x="364.90" y="479.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.16%)</title><rect x="843.8" y="373" width="2.0" height="15.0" fill="rgb(218,0,26)" rx="2" ry="2" />
<text  x="846.84" y="383.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (2 samples, 0.32%)</title><rect x="832.4" y="533" width="3.8" height="15.0" fill="rgb(245,46,19)" rx="2" ry="2" />
<text  x="835.37" y="543.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).Run (151 samples, 24.47%)</title><rect x="31.0" y="565" width="288.8" height="15.0" fill="rgb(235,43,13)" rx="2" ry="2" />
<text  x="34.04" y="575.5" >BCDns_0.1/consensusMy/service.(*Node)...</text>
</g>
<g >
<title>math/big.(*Int).Mod (2 samples, 0.32%)</title><rect x="679.4" y="437" width="3.8" height="15.0" fill="rgb(225,108,31)" rx="2" ry="2" />
<text  x="682.37" y="447.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.16%)</title><rect x="782.6" y="421" width="2.0" height="15.0" fill="rgb(243,173,30)" rx="2" ry="2" />
<text  x="785.64" y="431.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.32%)</title><rect x="314.1" y="389" width="3.8" height="15.0" fill="rgb(210,4,5)" rx="2" ry="2" />
<text  x="317.08" y="399.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.NewProposalReplyMessage (79 samples, 12.80%)</title><rect x="54.0" y="517" width="151.1" height="15.0" fill="rgb(240,81,50)" rx="2" ry="2" />
<text  x="56.99" y="527.5" >BCDns_0.1/messages...</text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.16%)</title><rect x="962.4" y="485" width="1.9" height="15.0" fill="rgb(247,174,49)" rx="2" ry="2" />
<text  x="965.41" y="495.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (1 samples, 0.16%)</title><rect x="912.7" y="485" width="1.9" height="15.0" fill="rgb(235,20,15)" rx="2" ry="2" />
<text  x="915.69" y="495.5" ></text>
</g>
<g >
<title>runtime.newproc (3 samples, 0.49%)</title><rect x="792.2" y="533" width="5.7" height="15.0" fill="rgb(213,9,39)" rx="2" ry="2" />
<text  x="795.20" y="543.5" ></text>
</g>
<g >
<title>net.(*conn).Write (3 samples, 0.49%)</title><rect x="205.1" y="485" width="5.7" height="15.0" fill="rgb(249,93,23)" rx="2" ry="2" />
<text  x="208.07" y="495.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (2 samples, 0.32%)</title><rect x="174.5" y="373" width="3.8" height="15.0" fill="rgb(236,131,12)" rx="2" ry="2" />
<text  x="177.47" y="383.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (1 samples, 0.16%)</title><rect x="19.6" y="341" width="1.9" height="15.0" fill="rgb(206,156,28)" rx="2" ry="2" />
<text  x="22.56" y="351.5" ></text>
</g>
<g >
<title>encoding/json.encodeByteSlice (1 samples, 0.16%)</title><rect x="780.7" y="437" width="1.9" height="15.0" fill="rgb(244,122,18)" rx="2" ry="2" />
<text  x="783.73" y="447.5" ></text>
</g>
<g >
<title>math/big.nat.add (1 samples, 0.16%)</title><rect x="182.1" y="325" width="1.9" height="15.0" fill="rgb(247,23,32)" rx="2" ry="2" />
<text  x="185.12" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="381.0" y="405" width="1.9" height="15.0" fill="rgb(252,189,43)" rx="2" ry="2" />
<text  x="384.02" y="415.5" ></text>
</g>
<g >
<title>sort.quickSort_func (1 samples, 0.16%)</title><rect x="358.1" y="421" width="1.9" height="15.0" fill="rgb(227,168,53)" rx="2" ry="2" />
<text  x="361.07" y="431.5" ></text>
</g>
<g >
<title>crypto/rand.Int (1 samples, 0.16%)</title><rect x="54.0" y="421" width="1.9" height="15.0" fill="rgb(250,93,43)" rx="2" ry="2" />
<text  x="56.99" y="431.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.16%)</title><rect x="968.2" y="533" width="1.9" height="15.0" fill="rgb(234,19,12)" rx="2" ry="2" />
<text  x="971.15" y="543.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.16%)</title><rect x="228.0" y="325" width="1.9" height="15.0" fill="rgb(249,161,5)" rx="2" ry="2" />
<text  x="231.02" y="335.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (2 samples, 0.32%)</title><rect x="31.0" y="341" width="3.9" height="15.0" fill="rgb(211,50,7)" rx="2" ry="2" />
<text  x="34.04" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.16%)</title><rect x="880.2" y="453" width="1.9" height="15.0" fill="rgb(234,165,17)" rx="2" ry="2" />
<text  x="883.18" y="463.5" ></text>
</g>
<g >
<title>runtime.chansend1 (2 samples, 0.32%)</title><rect x="314.1" y="549" width="3.8" height="15.0" fill="rgb(216,22,3)" rx="2" ry="2" />
<text  x="317.08" y="559.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (8 samples, 1.30%)</title><rect x="746.3" y="485" width="15.3" height="15.0" fill="rgb(230,142,4)" rx="2" ry="2" />
<text  x="749.30" y="495.5" ></text>
</g>
<g >
<title>runtime.convT2E (1 samples, 0.16%)</title><rect x="283.5" y="501" width="1.9" height="15.0" fill="rgb(228,142,53)" rx="2" ry="2" />
<text  x="286.48" y="511.5" ></text>
</g>
<g >
<title>runtime.netpoll (16 samples, 2.59%)</title><rect x="1014.1" y="501" width="30.6" height="15.0" fill="rgb(242,79,3)" rx="2" ry="2" />
<text  x="1017.05" y="511.5" >ru..</text>
</g>
<g >
<title>math/big.nat.sub (1 samples, 0.16%)</title><rect x="379.1" y="405" width="1.9" height="15.0" fill="rgb(213,31,28)" rx="2" ry="2" />
<text  x="382.11" y="415.5" ></text>
</g>
<g >
<title>reflect.(*rtype).NumMethod (1 samples, 0.16%)</title><rect x="828.5" y="437" width="2.0" height="15.0" fill="rgb(228,178,44)" rx="2" ry="2" />
<text  x="831.54" y="447.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (6 samples, 0.97%)</title><rect x="836.2" y="501" width="11.5" height="15.0" fill="rgb(231,115,45)" rx="2" ry="2" />
<text  x="839.19" y="511.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (4 samples, 0.65%)</title><rect x="784.6" y="533" width="7.6" height="15.0" fill="rgb(228,144,1)" rx="2" ry="2" />
<text  x="787.55" y="543.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (2 samples, 0.32%)</title><rect x="31.0" y="437" width="3.9" height="15.0" fill="rgb(244,179,9)" rx="2" ry="2" />
<text  x="34.04" y="447.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.32%)</title><rect x="950.9" y="373" width="3.9" height="15.0" fill="rgb(226,161,2)" rx="2" ry="2" />
<text  x="953.94" y="383.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).handleConn (45 samples, 7.29%)</title><rect x="876.4" y="565" width="86.0" height="15.0" fill="rgb(233,110,52)" rx="2" ry="2" />
<text  x="879.35" y="575.5" >BCDns_0.1/..</text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.16%)</title><rect x="857.2" y="517" width="1.9" height="15.0" fill="rgb(243,70,41)" rx="2" ry="2" />
<text  x="860.23" y="527.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.16%)</title><rect x="989.2" y="485" width="1.9" height="15.0" fill="rgb(229,206,23)" rx="2" ry="2" />
<text  x="992.19" y="495.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.PackMessage (2 samples, 0.32%)</title><rect x="780.7" y="517" width="3.9" height="15.0" fill="rgb(232,154,47)" rx="2" ry="2" />
<text  x="783.73" y="527.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.49%)</title><rect x="949.0" y="421" width="5.8" height="15.0" fill="rgb(214,165,46)" rx="2" ry="2" />
<text  x="952.03" y="431.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.16%)</title><rect x="338.9" y="389" width="2.0" height="15.0" fill="rgb(226,46,0)" rx="2" ry="2" />
<text  x="341.95" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (2 samples, 0.32%)</title><rect x="656.4" y="277" width="3.8" height="15.0" fill="rgb(252,190,28)" rx="2" ry="2" />
<text  x="659.42" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (1 samples, 0.16%)</title><rect x="966.2" y="469" width="2.0" height="15.0" fill="rgb(207,76,23)" rx="2" ry="2" />
<text  x="969.24" y="479.5" ></text>
</g>
<g >
<title>math/big.nat.expNNMontgomery (138 samples, 22.37%)</title><rect x="404.0" y="405" width="263.9" height="15.0" fill="rgb(210,75,5)" rx="2" ry="2" />
<text  x="406.97" y="415.5" >math/big.nat.expNNMontgomery</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="755.9" y="325" width="1.9" height="15.0" fill="rgb(226,70,40)" rx="2" ry="2" />
<text  x="758.87" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (4 samples, 0.65%)</title><rect x="784.6" y="517" width="7.6" height="15.0" fill="rgb(244,81,51)" rx="2" ry="2" />
<text  x="787.55" y="527.5" ></text>
</g>
<g >
<title>math/big.(*Int).GCD (14 samples, 2.27%)</title><rect x="683.2" y="421" width="26.8" height="15.0" fill="rgb(239,190,11)" rx="2" ry="2" />
<text  x="686.19" y="431.5" >m..</text>
</g>
<g >
<title>math/big.lehmerSimulate (2 samples, 0.32%)</title><rect x="683.2" y="389" width="3.8" height="15.0" fill="rgb(225,53,36)" rx="2" ry="2" />
<text  x="686.19" y="399.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.16%)</title><rect x="788.4" y="389" width="1.9" height="15.0" fill="rgb(241,182,26)" rx="2" ry="2" />
<text  x="791.38" y="399.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).scanWhile (1 samples, 0.16%)</title><rect x="342.8" y="261" width="1.9" height="15.0" fill="rgb(237,134,29)" rx="2" ry="2" />
<text  x="345.77" y="271.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.16%)</title><rect x="304.5" y="485" width="1.9" height="15.0" fill="rgb(251,42,48)" rx="2" ry="2" />
<text  x="307.52" y="495.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast_pidle (1 samples, 0.16%)</title><rect x="1182.4" y="469" width="1.9" height="15.0" fill="rgb(248,222,24)" rx="2" ry="2" />
<text  x="1185.35" y="479.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (6 samples, 0.97%)</title><rect x="189.8" y="373" width="11.4" height="15.0" fill="rgb(236,46,21)" rx="2" ry="2" />
<text  x="192.77" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (4 samples, 0.65%)</title><rect x="354.2" y="485" width="7.7" height="15.0" fill="rgb(212,62,29)" rx="2" ry="2" />
<text  x="357.25" y="495.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.16%)</title><rect x="302.6" y="469" width="1.9" height="15.0" fill="rgb(207,113,13)" rx="2" ry="2" />
<text  x="305.61" y="479.5" ></text>
</g>
<g >
<title>syscall.Syscall (3 samples, 0.49%)</title><rect x="205.1" y="405" width="5.7" height="15.0" fill="rgb(253,179,24)" rx="2" ry="2" />
<text  x="208.07" y="415.5" ></text>
</g>
<g >
<title>runtime.madvise (1 samples, 0.16%)</title><rect x="964.3" y="469" width="1.9" height="15.0" fill="rgb(240,195,46)" rx="2" ry="2" />
<text  x="967.33" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="780.7" y="405" width="1.9" height="15.0" fill="rgb(252,17,4)" rx="2" ry="2" />
<text  x="783.73" y="415.5" ></text>
</g>
<g >
<title>runtime.putempty (1 samples, 0.16%)</title><rect x="855.3" y="357" width="1.9" height="15.0" fill="rgb(226,76,45)" rx="2" ry="2" />
<text  x="858.32" y="367.5" ></text>
</g>
<g >
<title>fmt.(*pp).printValue (4 samples, 0.65%)</title><rect x="836.2" y="453" width="7.6" height="15.0" fill="rgb(208,94,16)" rx="2" ry="2" />
<text  x="839.19" y="463.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).AddBlock.func1 (4 samples, 0.65%)</title><rect x="31.0" y="501" width="7.7" height="15.0" fill="rgb(213,111,54)" rx="2" ry="2" />
<text  x="34.04" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.32%)</title><rect x="342.8" y="325" width="3.8" height="15.0" fill="rgb(250,228,28)" rx="2" ry="2" />
<text  x="345.77" y="335.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.16%)</title><rect x="212.7" y="341" width="1.9" height="15.0" fill="rgb(229,159,42)" rx="2" ry="2" />
<text  x="215.72" y="351.5" ></text>
</g>
<g >
<title>math/big.nat.montgomery (56 samples, 9.08%)</title><rect x="67.4" y="373" width="107.1" height="15.0" fill="rgb(247,78,11)" rx="2" ry="2" />
<text  x="70.37" y="383.5" >math/big.nat...</text>
</g>
<g >
<title>runtime.scang (1 samples, 0.16%)</title><rect x="855.3" y="405" width="1.9" height="15.0" fill="rgb(236,226,47)" rx="2" ry="2" />
<text  x="858.32" y="415.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (1 samples, 0.16%)</title><rect x="975.8" y="421" width="1.9" height="15.0" fill="rgb(225,198,42)" rx="2" ry="2" />
<text  x="978.80" y="431.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.16%)</title><rect x="338.9" y="405" width="2.0" height="15.0" fill="rgb(254,12,41)" rx="2" ry="2" />
<text  x="341.95" y="415.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (5 samples, 0.81%)</title><rect x="826.6" y="549" width="9.6" height="15.0" fill="rgb(211,125,5)" rx="2" ry="2" />
<text  x="829.63" y="559.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.(*lockOrder).PostUnlock (1 samples, 0.16%)</title><rect x="218.5" y="469" width="1.9" height="15.0" fill="rgb(220,158,27)" rx="2" ry="2" />
<text  x="221.46" y="479.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (5 samples, 0.81%)</title><rect x="44.4" y="469" width="9.6" height="15.0" fill="rgb(247,176,32)" rx="2" ry="2" />
<text  x="47.42" y="479.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).Get (1 samples, 0.16%)</title><rect x="275.8" y="469" width="1.9" height="15.0" fill="rgb(206,119,44)" rx="2" ry="2" />
<text  x="278.83" y="479.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.16%)</title><rect x="40.6" y="373" width="1.9" height="15.0" fill="rgb(238,39,42)" rx="2" ry="2" />
<text  x="43.60" y="383.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.16%)</title><rect x="744.4" y="453" width="1.9" height="15.0" fill="rgb(230,185,44)" rx="2" ry="2" />
<text  x="747.39" y="463.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (23 samples, 3.73%)</title><rect x="910.8" y="517" width="44.0" height="15.0" fill="rgb(231,67,39)" rx="2" ry="2" />
<text  x="913.78" y="527.5" >inte..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="277.7" y="453" width="2.0" height="15.0" fill="rgb(214,191,44)" rx="2" ry="2" />
<text  x="280.75" y="463.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (1 samples, 0.16%)</title><rect x="763.5" y="469" width="1.9" height="15.0" fill="rgb(219,198,5)" rx="2" ry="2" />
<text  x="766.52" y="479.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (2 samples, 0.32%)</title><rect x="31.0" y="373" width="3.9" height="15.0" fill="rgb(216,43,25)" rx="2" ry="2" />
<text  x="34.04" y="383.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).get (1 samples, 0.16%)</title><rect x="275.8" y="453" width="1.9" height="15.0" fill="rgb(214,143,20)" rx="2" ry="2" />
<text  x="278.83" y="463.5" ></text>
</g>
<g >
<title>runtime.usleep (32 samples, 5.19%)</title><rect x="1113.5" y="517" width="61.2" height="15.0" fill="rgb(207,137,47)" rx="2" ry="2" />
<text  x="1116.50" y="527.5" >runtim..</text>
</g>
<g >
<title>runtime.sweepone (1 samples, 0.16%)</title><rect x="966.2" y="549" width="2.0" height="15.0" fill="rgb(221,42,1)" rx="2" ry="2" />
<text  x="969.24" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.16%)</title><rect x="740.6" y="405" width="1.9" height="15.0" fill="rgb(232,144,15)" rx="2" ry="2" />
<text  x="743.57" y="415.5" ></text>
</g>
<g >
<title>reflect.resolveTypeOff (1 samples, 0.16%)</title><rect x="880.2" y="373" width="1.9" height="15.0" fill="rgb(217,130,49)" rx="2" ry="2" />
<text  x="883.18" y="383.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 0.49%)</title><rect x="792.2" y="405" width="5.7" height="15.0" fill="rgb(208,141,52)" rx="2" ry="2" />
<text  x="795.20" y="415.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).pushHead (1 samples, 0.16%)</title><rect x="19.6" y="325" width="1.9" height="15.0" fill="rgb(252,88,28)" rx="2" ry="2" />
<text  x="22.56" y="335.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (1 samples, 0.16%)</title><rect x="23.4" y="501" width="1.9" height="15.0" fill="rgb(254,46,40)" rx="2" ry="2" />
<text  x="26.39" y="511.5" ></text>
</g>
<g >
<title>fmt.(*fmt).pad (1 samples, 0.16%)</title><rect x="838.1" y="405" width="1.9" height="15.0" fill="rgb(229,24,44)" rx="2" ry="2" />
<text  x="841.10" y="415.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.UnpackMessage (5 samples, 0.81%)</title><rect x="880.2" y="549" width="9.5" height="15.0" fill="rgb(229,210,2)" rx="2" ry="2" />
<text  x="883.18" y="559.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.32%)</title><rect x="314.1" y="437" width="3.8" height="15.0" fill="rgb(236,121,3)" rx="2" ry="2" />
<text  x="317.08" y="447.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Proposer).Run (271 samples, 43.92%)</title><rect x="340.9" y="565" width="518.2" height="15.0" fill="rgb(206,121,34)" rx="2" ry="2" />
<text  x="343.86" y="575.5" >BCDns_0.1/consensusMy/service.(*Proposer).Run</text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).ValidateBlock (4 samples, 0.65%)</title><rect x="222.3" y="533" width="7.6" height="15.0" fill="rgb(214,136,44)" rx="2" ry="2" />
<text  x="225.29" y="543.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.16%)</title><rect x="681.3" y="373" width="1.9" height="15.0" fill="rgb(246,5,19)" rx="2" ry="2" />
<text  x="684.28" y="383.5" ></text>
</g>
<g >
<title>runtime.gentraceback (2 samples, 0.32%)</title><rect x="210.8" y="357" width="3.8" height="15.0" fill="rgb(230,4,53)" rx="2" ry="2" />
<text  x="213.81" y="367.5" ></text>
</g>
<g >
<title>os.(*File).Write (1 samples, 0.16%)</title><rect x="42.5" y="405" width="1.9" height="15.0" fill="rgb(236,2,20)" rx="2" ry="2" />
<text  x="45.51" y="415.5" ></text>
</g>
<g >
<title>runtime.(*treapNode).updateInvariants (1 samples, 0.16%)</title><rect x="658.3" y="165" width="1.9" height="15.0" fill="rgb(245,172,1)" rx="2" ry="2" />
<text  x="661.33" y="175.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.16%)</title><rect x="975.8" y="437" width="1.9" height="15.0" fill="rgb(247,143,54)" rx="2" ry="2" />
<text  x="978.80" y="447.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.16%)</title><rect x="65.5" y="341" width="1.9" height="15.0" fill="rgb(218,160,27)" rx="2" ry="2" />
<text  x="68.46" y="351.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (2 samples, 0.32%)</title><rect x="851.5" y="485" width="3.8" height="15.0" fill="rgb(221,145,10)" rx="2" ry="2" />
<text  x="854.49" y="495.5" ></text>
</g>
<g >
<title>reflect.Value.Convert (1 samples, 0.16%)</title><rect x="755.9" y="405" width="1.9" height="15.0" fill="rgb(230,116,47)" rx="2" ry="2" />
<text  x="758.87" y="415.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Block).GenerateMerkelRoot.func1 (1 samples, 0.16%)</title><rect x="222.3" y="485" width="1.9" height="15.0" fill="rgb(254,221,45)" rx="2" ry="2" />
<text  x="225.29" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.16%)</title><rect x="50.2" y="197" width="1.9" height="15.0" fill="rgb(206,162,1)" rx="2" ry="2" />
<text  x="53.16" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (12 samples, 1.94%)</title><rect x="970.1" y="549" width="22.9" height="15.0" fill="rgb(230,189,14)" rx="2" ry="2" />
<text  x="973.06" y="559.5" >r..</text>
</g>
<g >
<title>crypto/rsa.VerifyPKCS1v15 (14 samples, 2.27%)</title><rect x="797.9" y="517" width="26.8" height="15.0" fill="rgb(237,84,43)" rx="2" ry="2" />
<text  x="800.94" y="527.5" >c..</text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.16%)</title><rect x="1012.1" y="501" width="2.0" height="15.0" fill="rgb(216,95,32)" rx="2" ry="2" />
<text  x="1015.14" y="511.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.16%)</title><rect x="1182.4" y="421" width="1.9" height="15.0" fill="rgb(233,166,25)" rx="2" ry="2" />
<text  x="1185.35" y="431.5" ></text>
</g>
<g >
<title>crypto/sha256.block (1 samples, 0.16%)</title><rect x="231.8" y="437" width="2.0" height="15.0" fill="rgb(245,42,50)" rx="2" ry="2" />
<text  x="234.85" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (4 samples, 0.65%)</title><rect x="10.0" y="357" width="7.6" height="15.0" fill="rgb(229,156,16)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*iComparer).Compare (2 samples, 0.32%)</title><rect x="346.6" y="389" width="3.8" height="15.0" fill="rgb(237,140,22)" rx="2" ry="2" />
<text  x="349.60" y="399.5" ></text>
</g>
<g >
<title>runtime.stringtoslicebyte (1 samples, 0.16%)</title><rect x="277.7" y="485" width="2.0" height="15.0" fill="rgb(219,80,49)" rx="2" ry="2" />
<text  x="280.75" y="495.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (2 samples, 0.32%)</title><rect x="786.5" y="453" width="3.8" height="15.0" fill="rgb(211,81,0)" rx="2" ry="2" />
<text  x="789.47" y="463.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (4 samples, 0.65%)</title><rect x="354.2" y="501" width="7.7" height="15.0" fill="rgb(223,32,0)" rx="2" ry="2" />
<text  x="357.25" y="511.5" ></text>
</g>
<g >
<title>crypto/sha256.block (1 samples, 0.16%)</title><rect x="350.4" y="437" width="1.9" height="15.0" fill="rgb(252,158,30)" rx="2" ry="2" />
<text  x="353.42" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.16%)</title><rect x="203.2" y="437" width="1.9" height="15.0" fill="rgb(209,48,34)" rx="2" ry="2" />
<text  x="206.16" y="447.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (1 samples, 0.16%)</title><rect x="38.7" y="405" width="1.9" height="15.0" fill="rgb(246,180,20)" rx="2" ry="2" />
<text  x="41.69" y="415.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).AddBlock (7 samples, 1.13%)</title><rect x="31.0" y="533" width="13.4" height="15.0" fill="rgb(225,208,40)" rx="2" ry="2" />
<text  x="34.04" y="543.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.16%)</title><rect x="1058.0" y="485" width="2.0" height="15.0" fill="rgb(244,93,47)" rx="2" ry="2" />
<text  x="1061.04" y="495.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.(*Mutex).Unlock (1 samples, 0.16%)</title><rect x="218.5" y="501" width="1.9" height="15.0" fill="rgb(237,112,10)" rx="2" ry="2" />
<text  x="221.46" y="511.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Leader).generateBlock (10 samples, 1.62%)</title><rect x="10.0" y="549" width="19.1" height="15.0" fill="rgb(212,19,15)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>sync.(*poolChain).popHead (2 samples, 0.32%)</title><rect x="256.7" y="373" width="3.8" height="15.0" fill="rgb(219,211,27)" rx="2" ry="2" />
<text  x="259.71" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (8 samples, 1.30%)</title><rect x="746.3" y="469" width="15.3" height="15.0" fill="rgb(217,109,32)" rx="2" ry="2" />
<text  x="749.30" y="479.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (1 samples, 0.16%)</title><rect x="272.0" y="437" width="1.9" height="15.0" fill="rgb(212,214,29)" rx="2" ry="2" />
<text  x="275.01" y="447.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.16%)</title><rect x="210.8" y="325" width="1.9" height="15.0" fill="rgb(231,86,15)" rx="2" ry="2" />
<text  x="213.81" y="335.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.16%)</title><rect x="855.3" y="437" width="1.9" height="15.0" fill="rgb(244,178,12)" rx="2" ry="2" />
<text  x="858.32" y="447.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (10 samples, 1.62%)</title><rect x="891.7" y="485" width="19.1" height="15.0" fill="rgb(249,43,25)" rx="2" ry="2" />
<text  x="894.65" y="495.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.16%)</title><rect x="402.1" y="373" width="1.9" height="15.0" fill="rgb(217,210,40)" rx="2" ry="2" />
<text  x="405.06" y="383.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.16%)</title><rect x="1111.6" y="501" width="1.9" height="15.0" fill="rgb(219,47,50)" rx="2" ry="2" />
<text  x="1114.59" y="511.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.16%)</title><rect x="1004.5" y="437" width="1.9" height="15.0" fill="rgb(213,19,1)" rx="2" ry="2" />
<text  x="1007.49" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="708.1" y="293" width="1.9" height="15.0" fill="rgb(220,169,38)" rx="2" ry="2" />
<text  x="711.06" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="784.6" y="421" width="1.9" height="15.0" fill="rgb(217,119,15)" rx="2" ry="2" />
<text  x="787.55" y="431.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).View (5 samples, 0.81%)</title><rect x="44.4" y="517" width="9.6" height="15.0" fill="rgb(230,166,2)" rx="2" ry="2" />
<text  x="47.42" y="527.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (1 samples, 0.16%)</title><rect x="968.2" y="517" width="1.9" height="15.0" fill="rgb(247,46,36)" rx="2" ry="2" />
<text  x="971.15" y="527.5" ></text>
</g>
<g >
<title>time.NewTimer (1 samples, 0.16%)</title><rect x="216.5" y="469" width="2.0" height="15.0" fill="rgb(238,48,40)" rx="2" ry="2" />
<text  x="219.55" y="479.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (2 samples, 0.32%)</title><rect x="675.5" y="373" width="3.9" height="15.0" fill="rgb(236,22,36)" rx="2" ry="2" />
<text  x="678.54" y="383.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (12 samples, 1.94%)</title><rect x="799.9" y="501" width="22.9" height="15.0" fill="rgb(252,141,22)" rx="2" ry="2" />
<text  x="802.85" y="511.5" >c..</text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (2 samples, 0.32%)</title><rect x="780.7" y="485" width="3.9" height="15.0" fill="rgb(211,11,3)" rx="2" ry="2" />
<text  x="783.73" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (4 samples, 0.65%)</title><rect x="285.4" y="485" width="7.6" height="15.0" fill="rgb(225,68,37)" rx="2" ry="2" />
<text  x="288.40" y="495.5" ></text>
</g>
<g >
<title>math/big.(*Int).ModInverse (14 samples, 2.27%)</title><rect x="683.2" y="437" width="26.8" height="15.0" fill="rgb(221,113,36)" rx="2" ry="2" />
<text  x="686.19" y="447.5" >m..</text>
</g>
<g >
<title>encoding/json.(*decodeState).object (3 samples, 0.49%)</title><rect x="46.3" y="325" width="5.8" height="15.0" fill="rgb(218,210,19)" rx="2" ry="2" />
<text  x="49.34" y="335.5" ></text>
</g>
<g >
<title>syscall.write (2 samples, 0.32%)</title><rect x="851.5" y="453" width="3.8" height="15.0" fill="rgb(221,133,16)" rx="2" ry="2" />
<text  x="854.49" y="463.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (2 samples, 0.32%)</title><rect x="25.3" y="453" width="3.8" height="15.0" fill="rgb(223,45,2)" rx="2" ry="2" />
<text  x="28.30" y="463.5" ></text>
</g>
<g >
<title>fmt.(*pp).printValue (6 samples, 0.97%)</title><rect x="836.2" y="485" width="11.5" height="15.0" fill="rgb(234,42,15)" rx="2" ry="2" />
<text  x="839.19" y="495.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).get (2 samples, 0.32%)</title><rect x="346.6" y="453" width="3.8" height="15.0" fill="rgb(213,170,36)" rx="2" ry="2" />
<text  x="349.60" y="463.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (1 samples, 0.16%)</title><rect x="34.9" y="453" width="1.9" height="15.0" fill="rgb(213,152,21)" rx="2" ry="2" />
<text  x="37.86" y="463.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (10 samples, 1.62%)</title><rect x="799.9" y="437" width="19.1" height="15.0" fill="rgb(219,61,52)" rx="2" ry="2" />
<text  x="802.85" y="447.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.16%)</title><rect x="338.9" y="421" width="2.0" height="15.0" fill="rgb(219,84,26)" rx="2" ry="2" />
<text  x="341.95" y="431.5" ></text>
</g>
<g >
<title>reflect.Value.Addr (1 samples, 0.16%)</title><rect x="880.2" y="421" width="1.9" height="15.0" fill="rgb(218,182,15)" rx="2" ry="2" />
<text  x="883.18" y="431.5" ></text>
</g>
<g >
<title>os.(*File).Write (2 samples, 0.32%)</title><rect x="851.5" y="517" width="3.8" height="15.0" fill="rgb(214,56,34)" rx="2" ry="2" />
<text  x="854.49" y="527.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (3 samples, 0.49%)</title><rect x="748.2" y="421" width="5.8" height="15.0" fill="rgb(224,18,40)" rx="2" ry="2" />
<text  x="751.22" y="431.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (1 samples, 0.16%)</title><rect x="809.4" y="421" width="1.9" height="15.0" fill="rgb(215,179,10)" rx="2" ry="2" />
<text  x="812.42" y="431.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (5 samples, 0.81%)</title><rect x="44.4" y="485" width="9.6" height="15.0" fill="rgb(229,205,31)" rx="2" ry="2" />
<text  x="47.42" y="495.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (4 samples, 0.65%)</title><rect x="784.6" y="469" width="7.6" height="15.0" fill="rgb(230,109,22)" rx="2" ry="2" />
<text  x="787.55" y="479.5" ></text>
</g>
<g >
<title>runtime.rawbyteslice (1 samples, 0.16%)</title><rect x="277.7" y="469" width="2.0" height="15.0" fill="rgb(207,98,34)" rx="2" ry="2" />
<text  x="280.75" y="479.5" ></text>
</g>
<g >
<title>math/big.(*Int).lehmerGCD (14 samples, 2.27%)</title><rect x="683.2" y="405" width="26.8" height="15.0" fill="rgb(208,211,25)" rx="2" ry="2" />
<text  x="686.19" y="415.5" >m..</text>
</g>
<g >
<title>bytes.(*Buffer).Write (1 samples, 0.16%)</title><rect x="27.2" y="405" width="1.9" height="15.0" fill="rgb(215,157,54)" rx="2" ry="2" />
<text  x="30.21" y="415.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb/memdb.(*DB).findGE (2 samples, 0.32%)</title><rect x="346.6" y="405" width="3.8" height="15.0" fill="rgb(244,128,24)" rx="2" ry="2" />
<text  x="349.60" y="415.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (1 samples, 0.16%)</title><rect x="968.2" y="549" width="1.9" height="15.0" fill="rgb(253,130,50)" rx="2" ry="2" />
<text  x="971.15" y="559.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.16%)</title><rect x="658.3" y="245" width="1.9" height="15.0" fill="rgb(244,46,40)" rx="2" ry="2" />
<text  x="661.33" y="255.5" ></text>
</g>
<g >
<title>encoding/base64.(*Encoding).Decode (1 samples, 0.16%)</title><rect x="287.3" y="405" width="1.9" height="15.0" fill="rgb(237,131,36)" rx="2" ry="2" />
<text  x="290.31" y="415.5" ></text>
</g>
<g >
<title>runtime.newproc1 (1 samples, 0.16%)</title><rect x="214.6" y="421" width="1.9" height="15.0" fill="rgb(254,98,11)" rx="2" ry="2" />
<text  x="217.64" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (1 samples, 0.16%)</title><rect x="966.2" y="533" width="2.0" height="15.0" fill="rgb(236,114,50)" rx="2" ry="2" />
<text  x="969.24" y="543.5" ></text>
</g>
<g >
<title>math/big.nat.div (2 samples, 0.32%)</title><rect x="679.4" y="405" width="3.8" height="15.0" fill="rgb(208,214,27)" rx="2" ry="2" />
<text  x="682.37" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (4 samples, 0.65%)</title><rect x="285.4" y="453" width="7.6" height="15.0" fill="rgb(224,105,43)" rx="2" ry="2" />
<text  x="288.40" y="463.5" ></text>
</g>
<g >
<title>crypto/rsa.decrypt (71 samples, 11.51%)</title><rect x="54.0" y="437" width="135.8" height="15.0" fill="rgb(229,74,28)" rx="2" ry="2" />
<text  x="56.99" y="447.5" >crypto/rsa.decrypt</text>
</g>
<g >
<title>BCDns_0.1/utils.CoverMap (1 samples, 0.16%)</title><rect x="767.3" y="517" width="2.0" height="15.0" fill="rgb(249,224,47)" rx="2" ry="2" />
<text  x="770.34" y="527.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.16%)</title><rect x="859.1" y="437" width="2.0" height="15.0" fill="rgb(239,11,53)" rx="2" ry="2" />
<text  x="862.14" y="447.5" ></text>
</g>
<g >
<title>syscall.Syscall (20 samples, 3.24%)</title><rect x="916.5" y="469" width="38.3" height="15.0" fill="rgb(213,122,1)" rx="2" ry="2" />
<text  x="919.52" y="479.5" >sys..</text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.16%)</title><rect x="61.6" y="357" width="1.9" height="15.0" fill="rgb(242,69,9)" rx="2" ry="2" />
<text  x="64.64" y="367.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (4 samples, 0.65%)</title><rect x="10.0" y="373" width="7.6" height="15.0" fill="rgb(212,204,47)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>internal/syscall/unix.GetRandom (4 samples, 0.65%)</title><rect x="371.5" y="341" width="7.6" height="15.0" fill="rgb(218,178,32)" rx="2" ry="2" />
<text  x="374.46" y="351.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollWait (1 samples, 0.16%)</title><rect x="912.7" y="469" width="1.9" height="15.0" fill="rgb(227,191,30)" rx="2" ry="2" />
<text  x="915.69" y="479.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.16%)</title><rect x="968.2" y="469" width="1.9" height="15.0" fill="rgb(241,25,26)" rx="2" ry="2" />
<text  x="971.15" y="479.5" ></text>
</g>
<g >
<title>cmpbody (2 samples, 0.32%)</title><rect x="346.6" y="325" width="3.8" height="15.0" fill="rgb(226,54,28)" rx="2" ry="2" />
<text  x="349.60" y="335.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.16%)</title><rect x="10.0" y="293" width="1.9" height="15.0" fill="rgb(217,53,11)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>reflect.Value.Uint (1 samples, 0.16%)</title><rect x="360.0" y="437" width="1.9" height="15.0" fill="rgb(223,161,53)" rx="2" ry="2" />
<text  x="362.98" y="447.5" ></text>
</g>
<g >
<title>math/big.nat.div (10 samples, 1.62%)</title><rect x="799.9" y="453" width="19.1" height="15.0" fill="rgb(221,7,32)" rx="2" ry="2" />
<text  x="802.85" y="463.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*Tx).write (1 samples, 0.16%)</title><rect x="38.7" y="485" width="1.9" height="15.0" fill="rgb(214,179,5)" rx="2" ry="2" />
<text  x="41.69" y="495.5" ></text>
</g>
<g >
<title>runtime.selectgo (1 samples, 0.16%)</title><rect x="317.9" y="549" width="1.9" height="15.0" fill="rgb(251,9,50)" rx="2" ry="2" />
<text  x="320.91" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="13.8" y="277" width="1.9" height="15.0" fill="rgb(227,28,25)" rx="2" ry="2" />
<text  x="16.82" y="287.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (1 samples, 0.16%)</title><rect x="740.6" y="485" width="1.9" height="15.0" fill="rgb(250,150,31)" rx="2" ry="2" />
<text  x="743.57" y="495.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.16%)</title><rect x="811.3" y="405" width="1.9" height="15.0" fill="rgb(219,58,4)" rx="2" ry="2" />
<text  x="814.33" y="415.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.16%)</title><rect x="968.2" y="453" width="1.9" height="15.0" fill="rgb(253,52,28)" rx="2" ry="2" />
<text  x="971.15" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.32%)</title><rect x="855.3" y="533" width="3.8" height="15.0" fill="rgb(221,161,45)" rx="2" ry="2" />
<text  x="858.32" y="543.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (3 samples, 0.49%)</title><rect x="826.6" y="501" width="5.8" height="15.0" fill="rgb(214,15,23)" rx="2" ry="2" />
<text  x="829.63" y="511.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.lock (4 samples, 0.65%)</title><rect x="210.8" y="485" width="7.7" height="15.0" fill="rgb(227,22,0)" rx="2" ry="2" />
<text  x="213.81" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (3 samples, 0.49%)</title><rect x="224.2" y="437" width="5.7" height="15.0" fill="rgb(247,55,38)" rx="2" ry="2" />
<text  x="227.20" y="447.5" ></text>
</g>
<g >
<title>syscall.write (10 samples, 1.62%)</title><rect x="891.7" y="453" width="19.1" height="15.0" fill="rgb(206,167,20)" rx="2" ry="2" />
<text  x="894.65" y="463.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (23 samples, 3.73%)</title><rect x="910.8" y="533" width="44.0" height="15.0" fill="rgb(250,93,24)" rx="2" ry="2" />
<text  x="913.78" y="543.5" >net...</text>
</g>
<g >
<title>runtime.notetsleepg (2 samples, 0.32%)</title><rect x="1182.4" y="549" width="3.8" height="15.0" fill="rgb(242,34,42)" rx="2" ry="2" />
<text  x="1185.35" y="559.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (1 samples, 0.16%)</title><rect x="824.7" y="469" width="1.9" height="15.0" fill="rgb(215,98,10)" rx="2" ry="2" />
<text  x="827.72" y="479.5" ></text>
</g>
<g >
<title>math/big.greaterThan (1 samples, 0.16%)</title><rect x="398.2" y="373" width="1.9" height="15.0" fill="rgb(251,109,1)" rx="2" ry="2" />
<text  x="401.23" y="383.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (2 samples, 0.32%)</title><rect x="306.4" y="421" width="3.9" height="15.0" fill="rgb(241,165,0)" rx="2" ry="2" />
<text  x="309.43" y="431.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (9 samples, 1.46%)</title><rect x="321.7" y="517" width="17.2" height="15.0" fill="rgb(206,26,30)" rx="2" ry="2" />
<text  x="324.73" y="527.5" ></text>
</g>
<g >
<title>syscall.Write (1 samples, 0.16%)</title><rect x="42.5" y="357" width="1.9" height="15.0" fill="rgb(252,26,31)" rx="2" ry="2" />
<text  x="45.51" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.16%)</title><rect x="50.2" y="213" width="1.9" height="15.0" fill="rgb(234,108,28)" rx="2" ry="2" />
<text  x="53.16" y="223.5" ></text>
</g>
<g >
<title>math/big.lehmerUpdate (12 samples, 1.94%)</title><rect x="687.0" y="389" width="23.0" height="15.0" fill="rgb(252,72,49)" rx="2" ry="2" />
<text  x="690.02" y="399.5" >m..</text>
</g>
<g >
<title>reflect.Value.MapKeys (1 samples, 0.16%)</title><rect x="788.4" y="437" width="1.9" height="15.0" fill="rgb(252,44,1)" rx="2" ry="2" />
<text  x="791.38" y="447.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.16%)</title><rect x="338.9" y="373" width="2.0" height="15.0" fill="rgb(210,196,43)" rx="2" ry="2" />
<text  x="341.95" y="383.5" ></text>
</g>
<g >
<title>context.WithCancel.func1 (1 samples, 0.16%)</title><rect x="824.7" y="549" width="1.9" height="15.0" fill="rgb(234,170,25)" rx="2" ry="2" />
<text  x="827.72" y="559.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).writeJournal (1 samples, 0.16%)</title><rect x="42.5" y="469" width="1.9" height="15.0" fill="rgb(214,215,11)" rx="2" ry="2" />
<text  x="45.51" y="479.5" ></text>
</g>
<g >
<title>encoding/base64.(*Encoding).Encode (1 samples, 0.16%)</title><rect x="23.4" y="405" width="1.9" height="15.0" fill="rgb(221,228,25)" rx="2" ry="2" />
<text  x="26.39" y="415.5" ></text>
</g>
<g >
<title>os.(*File).Write (10 samples, 1.62%)</title><rect x="891.7" y="517" width="19.1" height="15.0" fill="rgb(237,119,13)" rx="2" ry="2" />
<text  x="894.65" y="527.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.16%)</title><rect x="991.1" y="469" width="1.9" height="15.0" fill="rgb(227,118,34)" rx="2" ry="2" />
<text  x="994.10" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (4 samples, 0.65%)</title><rect x="44.4" y="357" width="7.7" height="15.0" fill="rgb(218,205,2)" rx="2" ry="2" />
<text  x="47.42" y="367.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.16%)</title><rect x="868.7" y="437" width="1.9" height="15.0" fill="rgb(235,103,16)" rx="2" ry="2" />
<text  x="871.70" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (7 samples, 1.13%)</title><rect x="748.2" y="453" width="13.4" height="15.0" fill="rgb(215,25,13)" rx="2" ry="2" />
<text  x="751.22" y="463.5" ></text>
</g>
<g >
<title>BCDns_0.1/utils.SHA256 (2 samples, 0.32%)</title><rect x="350.4" y="501" width="3.8" height="15.0" fill="rgb(243,18,5)" rx="2" ry="2" />
<text  x="353.42" y="511.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).writeLocked (2 samples, 0.32%)</title><rect x="40.6" y="485" width="3.8" height="15.0" fill="rgb(245,170,6)" rx="2" ry="2" />
<text  x="43.60" y="495.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).buildIndex (2 samples, 0.32%)</title><rect x="972.0" y="437" width="3.8" height="15.0" fill="rgb(214,189,53)" rx="2" ry="2" />
<text  x="974.98" y="447.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.16%)</title><rect x="887.8" y="485" width="1.9" height="15.0" fill="rgb(254,34,21)" rx="2" ry="2" />
<text  x="890.83" y="495.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.32%)</title><rect x="855.3" y="549" width="3.8" height="15.0" fill="rgb(215,160,7)" rx="2" ry="2" />
<text  x="858.32" y="559.5" ></text>
</g>
<g >
<title>runtime.startm (4 samples, 0.65%)</title><rect x="954.8" y="421" width="7.6" height="15.0" fill="rgb(244,163,44)" rx="2" ry="2" />
<text  x="957.76" y="431.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (3 samples, 0.49%)</title><rect x="224.2" y="357" width="5.7" height="15.0" fill="rgb(219,88,18)" rx="2" ry="2" />
<text  x="227.20" y="367.5" ></text>
</g>
<g >
<title>runtime.scanstack (3 samples, 0.49%)</title><rect x="972.0" y="453" width="5.7" height="15.0" fill="rgb(236,148,15)" rx="2" ry="2" />
<text  x="974.98" y="463.5" ></text>
</g>
<g >
<title>math/big.nat.setWord (1 samples, 0.16%)</title><rect x="187.9" y="357" width="1.9" height="15.0" fill="rgb(220,11,50)" rx="2" ry="2" />
<text  x="190.86" y="367.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (2 samples, 0.32%)</title><rect x="972.0" y="421" width="3.8" height="15.0" fill="rgb(214,50,44)" rx="2" ry="2" />
<text  x="974.98" y="431.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.16%)</title><rect x="742.5" y="453" width="1.9" height="15.0" fill="rgb(235,19,42)" rx="2" ry="2" />
<text  x="745.48" y="463.5" ></text>
</g>
<g >
<title>syscall.write (2 samples, 0.32%)</title><rect x="847.7" y="453" width="3.8" height="15.0" fill="rgb(234,110,33)" rx="2" ry="2" />
<text  x="850.67" y="463.5" ></text>
</g>
<g >
<title>runtime.ready (2 samples, 0.32%)</title><rect x="314.1" y="453" width="3.8" height="15.0" fill="rgb(231,51,22)" rx="2" ry="2" />
<text  x="317.08" y="463.5" ></text>
</g>
<g >
<title>runtime.findrunnable (5 samples, 0.81%)</title><rect x="994.9" y="517" width="9.6" height="15.0" fill="rgb(248,199,32)" rx="2" ry="2" />
<text  x="997.93" y="527.5" ></text>
</g>
<g >
<title>runtime.(*timersBucket).addtimerLocked (1 samples, 0.16%)</title><rect x="962.4" y="501" width="1.9" height="15.0" fill="rgb(210,216,41)" rx="2" ry="2" />
<text  x="965.41" y="511.5" ></text>
</g>
<g >
<title>math/big.putNat (1 samples, 0.16%)</title><rect x="266.3" y="405" width="1.9" height="15.0" fill="rgb(245,162,22)" rx="2" ry="2" />
<text  x="269.27" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (8 samples, 1.30%)</title><rect x="296.9" y="517" width="15.3" height="15.0" fill="rgb(242,103,33)" rx="2" ry="2" />
<text  x="299.87" y="527.5" ></text>
</g>
<g >
<title>reflect.makeString (1 samples, 0.16%)</title><rect x="755.9" y="373" width="1.9" height="15.0" fill="rgb(216,23,14)" rx="2" ry="2" />
<text  x="758.87" y="383.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.32%)</title><rect x="335.1" y="357" width="3.8" height="15.0" fill="rgb(245,169,30)" rx="2" ry="2" />
<text  x="338.12" y="367.5" ></text>
</g>
<g >
<title>encoding/json.typeEncoder (1 samples, 0.16%)</title><rect x="782.6" y="437" width="2.0" height="15.0" fill="rgb(215,41,27)" rx="2" ry="2" />
<text  x="785.64" y="447.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (3 samples, 0.49%)</title><rect x="224.2" y="389" width="5.7" height="15.0" fill="rgb(230,67,39)" rx="2" ry="2" />
<text  x="227.20" y="399.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.16%)</title><rect x="1048.5" y="453" width="1.9" height="15.0" fill="rgb(220,13,5)" rx="2" ry="2" />
<text  x="1051.48" y="463.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.16%)</title><rect x="172.6" y="357" width="1.9" height="15.0" fill="rgb(212,131,23)" rx="2" ry="2" />
<text  x="175.56" y="367.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneNameByIndex (2 samples, 0.32%)</title><rect x="275.8" y="501" width="3.9" height="15.0" fill="rgb(213,38,22)" rx="2" ry="2" />
<text  x="278.83" y="511.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (9 samples, 1.46%)</title><rect x="296.9" y="549" width="17.2" height="15.0" fill="rgb(207,164,7)" rx="2" ry="2" />
<text  x="299.87" y="559.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (9 samples, 1.46%)</title><rect x="321.7" y="533" width="17.2" height="15.0" fill="rgb(215,159,23)" rx="2" ry="2" />
<text  x="324.73" y="543.5" ></text>
</g>
<g >
<title>reflect.Value.Bytes (1 samples, 0.16%)</title><rect x="203.2" y="405" width="1.9" height="15.0" fill="rgb(225,99,45)" rx="2" ry="2" />
<text  x="206.16" y="415.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.49%)</title><rect x="792.2" y="517" width="5.7" height="15.0" fill="rgb(249,41,30)" rx="2" ry="2" />
<text  x="795.20" y="527.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*iStorageWriter).Write (1 samples, 0.16%)</title><rect x="42.5" y="421" width="1.9" height="15.0" fill="rgb(254,148,29)" rx="2" ry="2" />
<text  x="45.51" y="431.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb/memdb.(*DB).findGE (1 samples, 0.16%)</title><rect x="275.8" y="405" width="1.9" height="15.0" fill="rgb(236,123,0)" rx="2" ry="2" />
<text  x="278.83" y="415.5" ></text>
</g>
<g >
<title>runtime.resolveTypeOff (1 samples, 0.16%)</title><rect x="880.2" y="341" width="1.9" height="15.0" fill="rgb(228,17,42)" rx="2" ry="2" />
<text  x="883.18" y="351.5" ></text>
</g>
<g >
<title>runtime.stopm (19 samples, 3.08%)</title><rect x="1054.2" y="501" width="36.4" height="15.0" fill="rgb(230,112,46)" rx="2" ry="2" />
<text  x="1057.21" y="511.5" >run..</text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.32%)</title><rect x="342.8" y="293" width="3.8" height="15.0" fill="rgb(236,134,37)" rx="2" ry="2" />
<text  x="345.77" y="303.5" ></text>
</g>
<g >
<title>fmt.Println (1 samples, 0.16%)</title><rect x="859.1" y="549" width="2.0" height="15.0" fill="rgb(252,43,1)" rx="2" ry="2" />
<text  x="862.14" y="559.5" ></text>
</g>
<g >
<title>runtime.stopm (3 samples, 0.49%)</title><rect x="998.8" y="501" width="5.7" height="15.0" fill="rgb(224,116,33)" rx="2" ry="2" />
<text  x="1001.75" y="511.5" ></text>
</g>
<g >
<title>runtime.gcDrain (12 samples, 1.94%)</title><rect x="970.1" y="517" width="22.9" height="15.0" fill="rgb(242,14,46)" rx="2" ry="2" />
<text  x="973.06" y="527.5" >r..</text>
</g>
<g >
<title>syscall.Write (2 samples, 0.32%)</title><rect x="847.7" y="469" width="3.8" height="15.0" fill="rgb(252,38,20)" rx="2" ry="2" />
<text  x="850.67" y="479.5" ></text>
</g>
<g >
<title>runtime.retake (1 samples, 0.16%)</title><rect x="1111.6" y="517" width="1.9" height="15.0" fill="rgb(206,119,21)" rx="2" ry="2" />
<text  x="1114.59" y="527.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.16%)</title><rect x="708.1" y="325" width="1.9" height="15.0" fill="rgb(222,209,21)" rx="2" ry="2" />
<text  x="711.06" y="335.5" ></text>
</g>
<g >
<title>syscall.Write (1 samples, 0.16%)</title><rect x="229.9" y="453" width="1.9" height="15.0" fill="rgb(238,118,7)" rx="2" ry="2" />
<text  x="232.94" y="463.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.16%)</title><rect x="1092.5" y="549" width="1.9" height="15.0" fill="rgb(236,141,27)" rx="2" ry="2" />
<text  x="1095.46" y="559.5" ></text>
</g>
<g >
<title>encoding/json.unquoteBytes (1 samples, 0.16%)</title><rect x="11.9" y="293" width="1.9" height="15.0" fill="rgb(232,120,26)" rx="2" ry="2" />
<text  x="14.91" y="303.5" ></text>
</g>
<g >
<title>runtime.goexit0 (6 samples, 0.97%)</title><rect x="994.9" y="549" width="11.5" height="15.0" fill="rgb(245,169,32)" rx="2" ry="2" />
<text  x="997.93" y="559.5" ></text>
</g>
<g >
<title>reflect.(*rtype).ptrTo (1 samples, 0.16%)</title><rect x="880.2" y="405" width="1.9" height="15.0" fill="rgb(228,27,1)" rx="2" ry="2" />
<text  x="883.18" y="415.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).SendReply (88 samples, 14.26%)</title><rect x="54.0" y="533" width="168.3" height="15.0" fill="rgb(221,121,15)" rx="2" ry="2" />
<text  x="56.99" y="543.5" >BCDns_0.1/consensusMy..</text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode (2 samples, 0.32%)</title><rect x="31.0" y="421" width="3.9" height="15.0" fill="rgb(249,100,46)" rx="2" ry="2" />
<text  x="34.04" y="431.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.32%)</title><rect x="342.8" y="357" width="3.8" height="15.0" fill="rgb(225,228,45)" rx="2" ry="2" />
<text  x="345.77" y="367.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (13 samples, 2.11%)</title><rect x="710.0" y="421" width="24.8" height="15.0" fill="rgb(208,133,7)" rx="2" ry="2" />
<text  x="712.97" y="431.5" >m..</text>
</g>
<g >
<title>reflect.typedmemmove (1 samples, 0.16%)</title><rect x="788.4" y="405" width="1.9" height="15.0" fill="rgb(239,138,29)" rx="2" ry="2" />
<text  x="791.38" y="415.5" ></text>
</g>
<g >
<title>math/big.lehmerUpdate (5 samples, 0.81%)</title><rect x="180.2" y="373" width="9.6" height="15.0" fill="rgb(237,38,39)" rx="2" ry="2" />
<text  x="183.21" y="383.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.16%)</title><rect x="729.1" y="373" width="1.9" height="15.0" fill="rgb(245,191,35)" rx="2" ry="2" />
<text  x="732.09" y="383.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (1 samples, 0.16%)</title><rect x="679.4" y="373" width="1.9" height="15.0" fill="rgb(218,118,29)" rx="2" ry="2" />
<text  x="682.37" y="383.5" ></text>
</g>
<g >
<title>syscall.read (7 samples, 1.13%)</title><rect x="325.6" y="485" width="13.3" height="15.0" fill="rgb(240,81,8)" rx="2" ry="2" />
<text  x="328.56" y="495.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).Get (2 samples, 0.32%)</title><rect x="346.6" y="469" width="3.8" height="15.0" fill="rgb(211,209,25)" rx="2" ry="2" />
<text  x="349.60" y="479.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.49%)</title><rect x="792.2" y="453" width="5.7" height="15.0" fill="rgb(230,170,13)" rx="2" ry="2" />
<text  x="795.20" y="463.5" ></text>
</g>
<g >
<title>math/big.basicMul (2 samples, 0.32%)</title><rect x="731.0" y="389" width="3.8" height="15.0" fill="rgb(225,130,45)" rx="2" ry="2" />
<text  x="734.00" y="399.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (20 samples, 3.24%)</title><rect x="235.7" y="485" width="38.2" height="15.0" fill="rgb(244,190,11)" rx="2" ry="2" />
<text  x="238.67" y="495.5" >cry..</text>
</g>
<g >
<title>math/big.nat.setUint64 (1 samples, 0.16%)</title><rect x="820.9" y="453" width="1.9" height="15.0" fill="rgb(244,155,47)" rx="2" ry="2" />
<text  x="823.89" y="463.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.32%)</title><rect x="314.1" y="373" width="3.8" height="15.0" fill="rgb(208,229,43)" rx="2" ry="2" />
<text  x="317.08" y="383.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (3 samples, 0.49%)</title><rect x="972.0" y="485" width="5.7" height="15.0" fill="rgb(208,94,53)" rx="2" ry="2" />
<text  x="974.98" y="495.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).checkSum (1 samples, 0.16%)</title><rect x="350.4" y="469" width="1.9" height="15.0" fill="rgb(209,190,34)" rx="2" ry="2" />
<text  x="353.42" y="479.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (30 samples, 4.86%)</title><rect x="109.4" y="357" width="57.4" height="15.0" fill="rgb(244,57,46)" rx="2" ry="2" />
<text  x="112.45" y="367.5" >math/b..</text>
</g>
<g >
<title>crypto.Hash.Size (1 samples, 0.16%)</title><rect x="273.9" y="469" width="1.9" height="15.0" fill="rgb(238,88,38)" rx="2" ry="2" />
<text  x="276.92" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.16%)</title><rect x="50.2" y="133" width="1.9" height="15.0" fill="rgb(229,214,44)" rx="2" ry="2" />
<text  x="53.16" y="143.5" ></text>
</g>
<g >
<title>syscall.Write (10 samples, 1.62%)</title><rect x="891.7" y="469" width="19.1" height="15.0" fill="rgb(222,21,44)" rx="2" ry="2" />
<text  x="894.65" y="479.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneNameByIndex (2 samples, 0.32%)</title><rect x="342.8" y="485" width="3.8" height="15.0" fill="rgb(226,57,39)" rx="2" ry="2" />
<text  x="345.77" y="495.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.32%)</title><rect x="306.4" y="437" width="3.9" height="15.0" fill="rgb(251,171,42)" rx="2" ry="2" />
<text  x="309.43" y="447.5" ></text>
</g>
<g >
<title>encoding/base64.(*encoder).Write (1 samples, 0.16%)</title><rect x="23.4" y="421" width="1.9" height="15.0" fill="rgb(229,169,24)" rx="2" ry="2" />
<text  x="26.39" y="431.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).putRec (2 samples, 0.32%)</title><rect x="40.6" y="501" width="3.8" height="15.0" fill="rgb(245,119,6)" rx="2" ry="2" />
<text  x="43.60" y="511.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (3 samples, 0.49%)</title><rect x="864.9" y="485" width="5.7" height="15.0" fill="rgb(236,37,46)" rx="2" ry="2" />
<text  x="867.88" y="495.5" ></text>
</g>
<g >
<title>runtime.sellock (1 samples, 0.16%)</title><rect x="29.1" y="533" width="1.9" height="15.0" fill="rgb(213,69,39)" rx="2" ry="2" />
<text  x="32.12" y="543.5" ></text>
</g>
<g >
<title>sort.Slice (2 samples, 0.32%)</title><rect x="356.2" y="437" width="3.8" height="15.0" fill="rgb(215,153,52)" rx="2" ry="2" />
<text  x="359.16" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.32%)</title><rect x="870.6" y="501" width="3.8" height="15.0" fill="rgb(249,144,21)" rx="2" ry="2" />
<text  x="873.62" y="511.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.16%)</title><rect x="754.0" y="405" width="1.9" height="15.0" fill="rgb(247,25,46)" rx="2" ry="2" />
<text  x="756.95" y="415.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).Sign (1 samples, 0.16%)</title><rect x="19.6" y="501" width="1.9" height="15.0" fill="rgb(219,113,35)" rx="2" ry="2" />
<text  x="22.56" y="511.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.16%)</title><rect x="210.8" y="341" width="1.9" height="15.0" fill="rgb(229,51,20)" rx="2" ry="2" />
<text  x="213.81" y="351.5" ></text>
</g>
<g >
<title>runtime.netpollcheckerr (1 samples, 0.16%)</title><rect x="912.7" y="437" width="1.9" height="15.0" fill="rgb(206,220,3)" rx="2" ry="2" />
<text  x="915.69" y="447.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.16%)</title><rect x="1182.4" y="533" width="1.9" height="15.0" fill="rgb(244,56,42)" rx="2" ry="2" />
<text  x="1185.35" y="543.5" ></text>
</g>
<g >
<title>runtime.sysmon (2 samples, 0.32%)</title><rect x="1176.6" y="565" width="3.8" height="15.0" fill="rgb(230,54,45)" rx="2" ry="2" />
<text  x="1179.61" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.16%)</title><rect x="966.2" y="501" width="2.0" height="15.0" fill="rgb(234,46,8)" rx="2" ry="2" />
<text  x="969.24" y="511.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.16%)</title><rect x="975.8" y="357" width="1.9" height="15.0" fill="rgb(226,138,28)" rx="2" ry="2" />
<text  x="978.80" y="367.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.16%)</title><rect x="44.4" y="325" width="1.9" height="15.0" fill="rgb(249,41,50)" rx="2" ry="2" />
<text  x="47.42" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (4 samples, 0.65%)</title><rect x="44.4" y="453" width="7.7" height="15.0" fill="rgb(206,60,9)" rx="2" ry="2" />
<text  x="47.42" y="463.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).View (2 samples, 0.32%)</title><rect x="342.8" y="437" width="3.8" height="15.0" fill="rgb(233,19,46)" rx="2" ry="2" />
<text  x="345.77" y="447.5" ></text>
</g>
<g >
<title>time.startTimer (1 samples, 0.16%)</title><rect x="962.4" y="533" width="1.9" height="15.0" fill="rgb(227,10,15)" rx="2" ry="2" />
<text  x="965.41" y="543.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (1 samples, 0.16%)</title><rect x="283.5" y="453" width="1.9" height="15.0" fill="rgb(214,218,20)" rx="2" ry="2" />
<text  x="286.48" y="463.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.16%)</title><rect x="214.6" y="373" width="1.9" height="15.0" fill="rgb(212,13,26)" rx="2" ry="2" />
<text  x="217.64" y="383.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.16%)</title><rect x="1090.6" y="501" width="1.9" height="15.0" fill="rgb(253,179,42)" rx="2" ry="2" />
<text  x="1093.55" y="511.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.16%)</title><rect x="824.7" y="437" width="1.9" height="15.0" fill="rgb(252,102,16)" rx="2" ry="2" />
<text  x="827.72" y="447.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.DNode.Send (6 samples, 0.97%)</title><rect x="769.3" y="517" width="11.4" height="15.0" fill="rgb(211,50,19)" rx="2" ry="2" />
<text  x="772.25" y="527.5" ></text>
</g>
<g >
<title>math/big.nat.mul (2 samples, 0.32%)</title><rect x="184.0" y="341" width="3.9" height="15.0" fill="rgb(213,3,34)" rx="2" ry="2" />
<text  x="187.04" y="351.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (7 samples, 1.13%)</title><rect x="189.8" y="405" width="13.4" height="15.0" fill="rgb(246,27,53)" rx="2" ry="2" />
<text  x="192.77" y="415.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.16%)</title><rect x="48.2" y="213" width="2.0" height="15.0" fill="rgb(216,81,11)" rx="2" ry="2" />
<text  x="51.25" y="223.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (2 samples, 0.32%)</title><rect x="306.4" y="389" width="3.9" height="15.0" fill="rgb(234,227,54)" rx="2" ry="2" />
<text  x="309.43" y="399.5" ></text>
</g>
<g >
<title>runtime.(*_type).typeOff (1 samples, 0.16%)</title><rect x="880.2" y="357" width="1.9" height="15.0" fill="rgb(233,156,14)" rx="2" ry="2" />
<text  x="883.18" y="367.5" ></text>
</g>
<g >
<title>runtime.largeAlloc (1 samples, 0.16%)</title><rect x="887.8" y="453" width="1.9" height="15.0" fill="rgb(243,177,37)" rx="2" ry="2" />
<text  x="890.83" y="463.5" ></text>
</g>
<g >
<title>runtime.chansend1 (1 samples, 0.16%)</title><rect x="338.9" y="549" width="2.0" height="15.0" fill="rgb(229,57,33)" rx="2" ry="2" />
<text  x="341.95" y="559.5" ></text>
</g>
<g >
<title>crypto.Hash.Size (1 samples, 0.16%)</title><rect x="736.7" y="453" width="2.0" height="15.0" fill="rgb(228,127,46)" rx="2" ry="2" />
<text  x="739.74" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.32%)</title><rect x="306.4" y="469" width="3.9" height="15.0" fill="rgb(237,0,18)" rx="2" ry="2" />
<text  x="309.43" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="283.5" y="485" width="1.9" height="15.0" fill="rgb(219,132,6)" rx="2" ry="2" />
<text  x="286.48" y="495.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.16%)</title><rect x="807.5" y="405" width="1.9" height="15.0" fill="rgb(237,104,12)" rx="2" ry="2" />
<text  x="810.50" y="415.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (1 samples, 0.16%)</title><rect x="861.1" y="533" width="1.9" height="15.0" fill="rgb(245,29,19)" rx="2" ry="2" />
<text  x="864.05" y="543.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.16%)</title><rect x="220.4" y="501" width="1.9" height="15.0" fill="rgb(216,111,18)" rx="2" ry="2" />
<text  x="223.37" y="511.5" ></text>
</g>
<g >
<title>syscall.Write (2 samples, 0.32%)</title><rect x="851.5" y="469" width="3.8" height="15.0" fill="rgb(210,100,15)" rx="2" ry="2" />
<text  x="854.49" y="479.5" ></text>
</g>
<g >
<title>runtime.chansend (4 samples, 0.65%)</title><rect x="954.8" y="533" width="7.6" height="15.0" fill="rgb(254,115,4)" rx="2" ry="2" />
<text  x="957.76" y="543.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*Batch).putMem (1 samples, 0.16%)</title><rect x="40.6" y="469" width="1.9" height="15.0" fill="rgb(206,54,48)" rx="2" ry="2" />
<text  x="43.60" y="479.5" ></text>
</g>
<g >
<title>crypto/rsa.decryptAndCheck (194 samples, 31.44%)</title><rect x="363.8" y="469" width="371.0" height="15.0" fill="rgb(206,130,50)" rx="2" ry="2" />
<text  x="366.81" y="479.5" >crypto/rsa.decryptAndCheck</text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.16%)</title><rect x="46.3" y="309" width="1.9" height="15.0" fill="rgb(249,52,16)" rx="2" ry="2" />
<text  x="49.34" y="319.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (1 samples, 0.16%)</title><rect x="859.1" y="485" width="2.0" height="15.0" fill="rgb(211,186,14)" rx="2" ry="2" />
<text  x="862.14" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (8 samples, 1.30%)</title><rect x="296.9" y="501" width="15.3" height="15.0" fill="rgb(234,7,7)" rx="2" ry="2" />
<text  x="299.87" y="511.5" ></text>
</g>
<g >
<title>encoding/json.stringEncoder (1 samples, 0.16%)</title><rect x="790.3" y="453" width="1.9" height="15.0" fill="rgb(206,124,19)" rx="2" ry="2" />
<text  x="793.29" y="463.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.32%)</title><rect x="335.1" y="421" width="3.8" height="15.0" fill="rgb(228,68,19)" rx="2" ry="2" />
<text  x="338.12" y="431.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb/memdb.(*DB).Find (2 samples, 0.32%)</title><rect x="346.6" y="421" width="3.8" height="15.0" fill="rgb(229,192,13)" rx="2" ry="2" />
<text  x="349.60" y="431.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.16%)</title><rect x="44.4" y="309" width="1.9" height="15.0" fill="rgb(242,187,4)" rx="2" ry="2" />
<text  x="47.42" y="319.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.16%)</title><rect x="1184.3" y="501" width="1.9" height="15.0" fill="rgb(208,138,18)" rx="2" ry="2" />
<text  x="1187.26" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (4 samples, 0.65%)</title><rect x="784.6" y="501" width="7.6" height="15.0" fill="rgb(218,54,39)" rx="2" ry="2" />
<text  x="787.55" y="511.5" ></text>
</g>
<g >
<title>runtime.scanstack (1 samples, 0.16%)</title><rect x="855.3" y="389" width="1.9" height="15.0" fill="rgb(214,73,30)" rx="2" ry="2" />
<text  x="858.32" y="399.5" ></text>
</g>
<g >
<title>runtime.bgsweep (1 samples, 0.16%)</title><rect x="966.2" y="565" width="2.0" height="15.0" fill="rgb(206,214,32)" rx="2" ry="2" />
<text  x="969.24" y="575.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (6 samples, 0.97%)</title><rect x="748.2" y="437" width="11.5" height="15.0" fill="rgb(250,126,37)" rx="2" ry="2" />
<text  x="751.22" y="447.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (1 samples, 0.16%)</title><rect x="19.6" y="421" width="1.9" height="15.0" fill="rgb(240,21,14)" rx="2" ry="2" />
<text  x="22.56" y="431.5" ></text>
</g>
<g >
<title>crypto/rand.(*devReader).Read (1 samples, 0.16%)</title><rect x="369.5" y="421" width="2.0" height="15.0" fill="rgb(238,2,53)" rx="2" ry="2" />
<text  x="372.55" y="431.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneNameByIndex (4 samples, 0.65%)</title><rect x="342.8" y="501" width="7.6" height="15.0" fill="rgb(246,139,17)" rx="2" ry="2" />
<text  x="345.77" y="511.5" ></text>
</g>
<g >
<title>encoding/json.valueEncoder (1 samples, 0.16%)</title><rect x="782.6" y="453" width="2.0" height="15.0" fill="rgb(216,3,49)" rx="2" ry="2" />
<text  x="785.64" y="463.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (2 samples, 0.32%)</title><rect x="306.4" y="405" width="3.9" height="15.0" fill="rgb(213,75,46)" rx="2" ry="2" />
<text  x="309.43" y="415.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.32%)</title><rect x="950.9" y="357" width="3.9" height="15.0" fill="rgb(249,78,18)" rx="2" ry="2" />
<text  x="953.94" y="367.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (2 samples, 0.32%)</title><rect x="884.0" y="517" width="3.8" height="15.0" fill="rgb(227,152,20)" rx="2" ry="2" />
<text  x="887.00" y="527.5" ></text>
</g>
<g >
<title>reflect.mapiterinit (1 samples, 0.16%)</title><rect x="843.8" y="421" width="2.0" height="15.0" fill="rgb(211,71,13)" rx="2" ry="2" />
<text  x="846.84" y="431.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.16%)</title><rect x="19.6" y="357" width="1.9" height="15.0" fill="rgb(226,124,32)" rx="2" ry="2" />
<text  x="22.56" y="367.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (1 samples, 0.16%)</title><rect x="1048.5" y="501" width="1.9" height="15.0" fill="rgb(223,228,51)" rx="2" ry="2" />
<text  x="1051.48" y="511.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (4 samples, 0.65%)</title><rect x="954.8" y="469" width="7.6" height="15.0" fill="rgb(232,10,2)" rx="2" ry="2" />
<text  x="957.76" y="479.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (4 samples, 0.65%)</title><rect x="44.4" y="373" width="7.7" height="15.0" fill="rgb(212,6,52)" rx="2" ry="2" />
<text  x="47.42" y="383.5" ></text>
</g>
<g >
<title>reflect.Value.Elem (1 samples, 0.16%)</title><rect x="10.0" y="277" width="1.9" height="15.0" fill="rgb(246,121,12)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Hash (6 samples, 0.97%)</title><rect x="350.4" y="517" width="11.5" height="15.0" fill="rgb(241,20,34)" rx="2" ry="2" />
<text  x="353.42" y="527.5" ></text>
</g>
<g >
<title>runtime.bgscavenge.func1 (1 samples, 0.16%)</title><rect x="1180.4" y="549" width="2.0" height="15.0" fill="rgb(245,27,13)" rx="2" ry="2" />
<text  x="1183.44" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.32%)</title><rect x="656.4" y="341" width="3.8" height="15.0" fill="rgb(243,41,28)" rx="2" ry="2" />
<text  x="659.42" y="351.5" ></text>
</g>
<g >
<title>math/big.(*Int).Sub (1 samples, 0.16%)</title><rect x="379.1" y="421" width="1.9" height="15.0" fill="rgb(228,154,47)" rx="2" ry="2" />
<text  x="382.11" y="431.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (2 samples, 0.32%)</title><rect x="287.3" y="421" width="3.8" height="15.0" fill="rgb(226,51,37)" rx="2" ry="2" />
<text  x="290.31" y="431.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).SendTo (8 samples, 1.30%)</title><rect x="205.1" y="517" width="15.3" height="15.0" fill="rgb(224,119,23)" rx="2" ry="2" />
<text  x="208.07" y="527.5" ></text>
</g>
<g >
<title>fmt.(*pp).handleMethods (2 samples, 0.32%)</title><rect x="840.0" y="437" width="3.8" height="15.0" fill="rgb(248,96,1)" rx="2" ry="2" />
<text  x="843.02" y="447.5" ></text>
</g>
<g >
<title>syscall.Read (21 samples, 3.40%)</title><rect x="914.6" y="501" width="40.2" height="15.0" fill="rgb(250,66,35)" rx="2" ry="2" />
<text  x="917.60" y="511.5" >sys..</text>
</g>
<g >
<title>runtime.entersyscall (4 samples, 0.65%)</title><rect x="947.1" y="453" width="7.7" height="15.0" fill="rgb(227,127,31)" rx="2" ry="2" />
<text  x="950.12" y="463.5" ></text>
</g>
<g >
<title>fmt.Fprintf (8 samples, 1.30%)</title><rect x="836.2" y="533" width="15.3" height="15.0" fill="rgb(232,227,27)" rx="2" ry="2" />
<text  x="839.19" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.16%)</title><rect x="50.2" y="181" width="1.9" height="15.0" fill="rgb(233,133,33)" rx="2" ry="2" />
<text  x="53.16" y="191.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (2 samples, 0.32%)</title><rect x="25.3" y="501" width="3.8" height="15.0" fill="rgb(238,93,53)" rx="2" ry="2" />
<text  x="28.30" y="511.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (2 samples, 0.32%)</title><rect x="25.3" y="437" width="3.8" height="15.0" fill="rgb(236,32,40)" rx="2" ry="2" />
<text  x="28.30" y="447.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.GetPacketHeader (2 samples, 0.32%)</title><rect x="876.4" y="549" width="3.8" height="15.0" fill="rgb(239,206,21)" rx="2" ry="2" />
<text  x="879.35" y="559.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (2 samples, 0.32%)</title><rect x="731.0" y="373" width="3.8" height="15.0" fill="rgb(240,30,42)" rx="2" ry="2" />
<text  x="734.00" y="383.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.16%)</title><rect x="778.8" y="405" width="1.9" height="15.0" fill="rgb(252,100,40)" rx="2" ry="2" />
<text  x="781.82" y="415.5" ></text>
</g>
<g >
<title>runtime.getitab (2 samples, 0.32%)</title><rect x="840.0" y="405" width="3.8" height="15.0" fill="rgb(219,79,23)" rx="2" ry="2" />
<text  x="843.02" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="50.2" y="245" width="1.9" height="15.0" fill="rgb(230,89,31)" rx="2" ry="2" />
<text  x="53.16" y="255.5" ></text>
</g>
<g >
<title>BCDns_0.1/utils.SHA256 (1 samples, 0.16%)</title><rect x="222.3" y="469" width="1.9" height="15.0" fill="rgb(231,114,39)" rx="2" ry="2" />
<text  x="225.29" y="479.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.16%)</title><rect x="975.8" y="373" width="1.9" height="15.0" fill="rgb(233,87,11)" rx="2" ry="2" />
<text  x="978.80" y="383.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).cancel (1 samples, 0.16%)</title><rect x="824.7" y="533" width="1.9" height="15.0" fill="rgb(235,139,30)" rx="2" ry="2" />
<text  x="827.72" y="543.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.49%)</title><rect x="792.2" y="469" width="5.7" height="15.0" fill="rgb(246,35,37)" rx="2" ry="2" />
<text  x="795.20" y="479.5" ></text>
</g>
<g >
<title>math/big.lehmerSimulate (1 samples, 0.16%)</title><rect x="178.3" y="373" width="1.9" height="15.0" fill="rgb(208,214,41)" rx="2" ry="2" />
<text  x="181.30" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (4 samples, 0.65%)</title><rect x="10.0" y="341" width="7.6" height="15.0" fill="rgb(205,100,29)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>runtime.growslice (2 samples, 0.32%)</title><rect x="306.4" y="485" width="3.9" height="15.0" fill="rgb(232,190,37)" rx="2" ry="2" />
<text  x="309.43" y="495.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (1 samples, 0.16%)</title><rect x="855.3" y="341" width="1.9" height="15.0" fill="rgb(220,214,45)" rx="2" ry="2" />
<text  x="858.32" y="351.5" ></text>
</g>
<g >
<title>runtime.markroot (3 samples, 0.49%)</title><rect x="972.0" y="501" width="5.7" height="15.0" fill="rgb(214,55,43)" rx="2" ry="2" />
<text  x="974.98" y="511.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (1 samples, 0.16%)</title><rect x="283.5" y="437" width="1.9" height="15.0" fill="rgb(250,90,37)" rx="2" ry="2" />
<text  x="286.48" y="447.5" ></text>
</g>
<g >
<title>runtime.entersyscall (1 samples, 0.16%)</title><rect x="908.9" y="421" width="1.9" height="15.0" fill="rgb(249,91,33)" rx="2" ry="2" />
<text  x="911.87" y="431.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.16%)</title><rect x="780.7" y="453" width="1.9" height="15.0" fill="rgb(221,65,33)" rx="2" ry="2" />
<text  x="783.73" y="463.5" ></text>
</g>
<g >
<title>runtime.chansend1 (4 samples, 0.65%)</title><rect x="954.8" y="549" width="7.6" height="15.0" fill="rgb(249,2,31)" rx="2" ry="2" />
<text  x="957.76" y="559.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).scanNext (1 samples, 0.16%)</title><rect x="757.8" y="421" width="1.9" height="15.0" fill="rgb(230,200,9)" rx="2" ry="2" />
<text  x="760.78" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="281.6" y="469" width="1.9" height="15.0" fill="rgb(231,106,21)" rx="2" ry="2" />
<text  x="284.57" y="479.5" ></text>
</g>
<g >
<title>math/big.(*Int).Sub (1 samples, 0.16%)</title><rect x="54.0" y="405" width="1.9" height="15.0" fill="rgb(237,199,46)" rx="2" ry="2" />
<text  x="56.99" y="415.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.NewBlockMessage (1 samples, 0.16%)</title><rect x="19.6" y="533" width="1.9" height="15.0" fill="rgb(213,140,12)" rx="2" ry="2" />
<text  x="22.56" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.16%)</title><rect x="740.6" y="389" width="1.9" height="15.0" fill="rgb(220,37,1)" rx="2" ry="2" />
<text  x="743.57" y="399.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.16%)</title><rect x="966.2" y="485" width="2.0" height="15.0" fill="rgb(239,226,43)" rx="2" ry="2" />
<text  x="969.24" y="495.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.16%)</title><rect x="50.2" y="261" width="1.9" height="15.0" fill="rgb(205,61,43)" rx="2" ry="2" />
<text  x="53.16" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.16%)</title><rect x="742.5" y="469" width="1.9" height="15.0" fill="rgb(230,140,21)" rx="2" ry="2" />
<text  x="745.48" y="479.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.16%)</title><rect x="1004.5" y="453" width="1.9" height="15.0" fill="rgb(214,181,50)" rx="2" ry="2" />
<text  x="1007.49" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.16%)</title><rect x="658.3" y="229" width="1.9" height="15.0" fill="rgb(222,160,3)" rx="2" ry="2" />
<text  x="661.33" y="239.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (5 samples, 0.81%)</title><rect x="10.0" y="469" width="9.6" height="15.0" fill="rgb(235,201,15)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (3 samples, 0.49%)</title><rect x="702.3" y="325" width="5.8" height="15.0" fill="rgb(209,216,30)" rx="2" ry="2" />
<text  x="705.32" y="335.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalReplyMessage).Sign (79 samples, 12.80%)</title><rect x="54.0" y="501" width="151.1" height="15.0" fill="rgb(242,207,19)" rx="2" ry="2" />
<text  x="56.99" y="511.5" >BCDns_0.1/messages...</text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).ExecuteBlock (100 samples, 16.21%)</title><rect x="31.0" y="549" width="191.3" height="15.0" fill="rgb(254,148,51)" rx="2" ry="2" />
<text  x="34.04" y="559.5" >BCDns_0.1/consensusMy/ser..</text>
</g>
<g >
<title>crypto/sha256.block (1 samples, 0.16%)</title><rect x="222.3" y="437" width="1.9" height="15.0" fill="rgb(222,150,12)" rx="2" ry="2" />
<text  x="225.29" y="447.5" ></text>
</g>
<g >
<title>runtime.ifaceeq (1 samples, 0.16%)</title><rect x="354.2" y="421" width="2.0" height="15.0" fill="rgb(220,11,23)" rx="2" ry="2" />
<text  x="357.25" y="431.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.16%)</title><rect x="820.9" y="373" width="1.9" height="15.0" fill="rgb(208,119,26)" rx="2" ry="2" />
<text  x="823.89" y="383.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.UnMarshalProposalMessage (6 samples, 0.97%)</title><rect x="285.4" y="517" width="11.5" height="15.0" fill="rgb(239,166,16)" rx="2" ry="2" />
<text  x="288.40" y="527.5" ></text>
</g>
<g >
<title>math/big.nat.clear (3 samples, 0.49%)</title><rect x="650.7" y="373" width="5.7" height="15.0" fill="rgb(207,106,53)" rx="2" ry="2" />
<text  x="653.68" y="383.5" ></text>
</g>
<g >
<title>crypto/rsa.SignPKCS1v15 (78 samples, 12.64%)</title><rect x="54.0" y="469" width="149.2" height="15.0" fill="rgb(214,41,27)" rx="2" ry="2" />
<text  x="56.99" y="479.5" >crypto/rsa.SignPKCS..</text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.16%)</title><rect x="199.3" y="357" width="1.9" height="15.0" fill="rgb(249,69,15)" rx="2" ry="2" />
<text  x="202.34" y="367.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (3 samples, 0.49%)</title><rect x="296.9" y="485" width="5.7" height="15.0" fill="rgb(208,113,29)" rx="2" ry="2" />
<text  x="299.87" y="495.5" ></text>
</g>
<g >
<title>encoding/binary.Read (1 samples, 0.16%)</title><rect x="878.3" y="517" width="1.9" height="15.0" fill="rgb(245,46,51)" rx="2" ry="2" />
<text  x="881.27" y="527.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.16%)</title><rect x="228.0" y="309" width="1.9" height="15.0" fill="rgb(253,100,11)" rx="2" ry="2" />
<text  x="231.02" y="319.5" ></text>
</g>
<g >
<title>runtime/pprof.(*profileBuilder).addCPUData (1 samples, 0.16%)</title><rect x="1186.2" y="549" width="1.9" height="15.0" fill="rgb(228,65,40)" rx="2" ry="2" />
<text  x="1189.18" y="559.5" ></text>
</g>
<g >
<title>math/big.(*Int).Mod (2 samples, 0.32%)</title><rect x="174.5" y="421" width="3.8" height="15.0" fill="rgb(219,70,39)" rx="2" ry="2" />
<text  x="177.47" y="431.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.16%)</title><rect x="824.7" y="453" width="1.9" height="15.0" fill="rgb(247,12,38)" rx="2" ry="2" />
<text  x="827.72" y="463.5" ></text>
</g>
<g >
<title>runtime.netpoll (2 samples, 0.32%)</title><rect x="994.9" y="501" width="3.9" height="15.0" fill="rgb(248,137,26)" rx="2" ry="2" />
<text  x="997.93" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (4 samples, 0.65%)</title><rect x="44.4" y="421" width="7.7" height="15.0" fill="rgb(252,24,0)" rx="2" ry="2" />
<text  x="47.42" y="431.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.16%)</title><rect x="669.8" y="389" width="1.9" height="15.0" fill="rgb(208,92,43)" rx="2" ry="2" />
<text  x="672.81" y="399.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.16%)</title><rect x="1090.6" y="469" width="1.9" height="15.0" fill="rgb(219,1,6)" rx="2" ry="2" />
<text  x="1093.55" y="479.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.16%)</title><rect x="824.7" y="405" width="1.9" height="15.0" fill="rgb(238,162,20)" rx="2" ry="2" />
<text  x="827.72" y="415.5" ></text>
</g>
<g >
<title>math/big.(*Int).lehmerGCD (6 samples, 0.97%)</title><rect x="178.3" y="389" width="11.5" height="15.0" fill="rgb(230,62,9)" rx="2" ry="2" />
<text  x="181.30" y="399.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (1 samples, 0.16%)</title><rect x="184.0" y="309" width="1.9" height="15.0" fill="rgb(254,71,52)" rx="2" ry="2" />
<text  x="187.04" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.div (10 samples, 1.62%)</title><rect x="384.8" y="405" width="19.2" height="15.0" fill="rgb(209,80,36)" rx="2" ry="2" />
<text  x="387.85" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.16%)</title><rect x="279.7" y="469" width="1.9" height="15.0" fill="rgb(222,33,17)" rx="2" ry="2" />
<text  x="282.66" y="479.5" ></text>
</g>
<g >
<title>reflect.copyVal (1 samples, 0.16%)</title><rect x="845.8" y="421" width="1.9" height="15.0" fill="rgb(245,6,8)" rx="2" ry="2" />
<text  x="848.75" y="431.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (3 samples, 0.49%)</title><rect x="650.7" y="357" width="5.7" height="15.0" fill="rgb(217,122,49)" rx="2" ry="2" />
<text  x="653.68" y="367.5" ></text>
</g>
<g >
<title>os.(*File).write (2 samples, 0.32%)</title><rect x="847.7" y="501" width="3.8" height="15.0" fill="rgb(218,110,47)" rx="2" ry="2" />
<text  x="850.67" y="511.5" ></text>
</g>
<g >
<title>fmt.Fprintln (1 samples, 0.16%)</title><rect x="859.1" y="533" width="2.0" height="15.0" fill="rgb(246,105,51)" rx="2" ry="2" />
<text  x="862.14" y="543.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (155 samples, 25.12%)</title><rect x="382.9" y="437" width="296.5" height="15.0" fill="rgb(239,84,52)" rx="2" ry="2" />
<text  x="385.93" y="447.5" >math/big.(*Int).Exp</text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.16%)</title><rect x="34.9" y="437" width="1.9" height="15.0" fill="rgb(236,190,40)" rx="2" ry="2" />
<text  x="37.86" y="447.5" ></text>
</g>
<g >
<title>reflect.Value.SetMapIndex (1 samples, 0.16%)</title><rect x="50.2" y="309" width="1.9" height="15.0" fill="rgb(228,220,42)" rx="2" ry="2" />
<text  x="53.16" y="319.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*Tx).Commit (1 samples, 0.16%)</title><rect x="38.7" y="501" width="1.9" height="15.0" fill="rgb(209,2,51)" rx="2" ry="2" />
<text  x="41.69" y="511.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.32%)</title><rect x="1000.7" y="453" width="3.8" height="15.0" fill="rgb(231,72,45)" rx="2" ry="2" />
<text  x="1003.66" y="463.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (1 samples, 0.16%)</title><rect x="42.5" y="373" width="1.9" height="15.0" fill="rgb(242,56,13)" rx="2" ry="2" />
<text  x="45.51" y="383.5" ></text>
</g>
<g >
<title>math/big.nat.mulAddWW (5 samples, 0.81%)</title><rect x="700.4" y="341" width="9.6" height="15.0" fill="rgb(233,217,40)" rx="2" ry="2" />
<text  x="703.41" y="351.5" ></text>
</g>
<g >
<title>math/big.nat.div (11 samples, 1.78%)</title><rect x="710.0" y="405" width="21.0" height="15.0" fill="rgb(224,89,39)" rx="2" ry="2" />
<text  x="712.97" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (1 samples, 0.16%)</title><rect x="34.9" y="389" width="1.9" height="15.0" fill="rgb(226,202,20)" rx="2" ry="2" />
<text  x="37.86" y="399.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintln (1 samples, 0.16%)</title><rect x="889.7" y="517" width="2.0" height="15.0" fill="rgb(246,169,1)" rx="2" ry="2" />
<text  x="892.74" y="527.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (1 samples, 0.16%)</title><rect x="1182.4" y="517" width="1.9" height="15.0" fill="rgb(242,210,10)" rx="2" ry="2" />
<text  x="1185.35" y="527.5" ></text>
</g>
<g >
<title>reflect.cvtBytesString (1 samples, 0.16%)</title><rect x="755.9" y="389" width="1.9" height="15.0" fill="rgb(227,56,47)" rx="2" ry="2" />
<text  x="758.87" y="399.5" ></text>
</g>
<g >
<title>reflect.Value.Convert (1 samples, 0.16%)</title><rect x="48.2" y="309" width="2.0" height="15.0" fill="rgb(247,48,50)" rx="2" ry="2" />
<text  x="51.25" y="319.5" ></text>
</g>
<g >
<title>runtime.futex (16 samples, 2.59%)</title><rect x="1060.0" y="453" width="30.6" height="15.0" fill="rgb(232,42,11)" rx="2" ry="2" />
<text  x="1062.95" y="463.5" >ru..</text>
</g>
<g >
<title>runtime.(*mheap).alloc (2 samples, 0.32%)</title><rect x="656.4" y="261" width="3.8" height="15.0" fill="rgb(215,111,7)" rx="2" ry="2" />
<text  x="659.42" y="271.5" ></text>
</g>
<g >
<title>runtime.assertE2I2 (2 samples, 0.32%)</title><rect x="840.0" y="421" width="3.8" height="15.0" fill="rgb(208,186,42)" rx="2" ry="2" />
<text  x="843.02" y="431.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.32%)</title><rect x="880.2" y="501" width="3.8" height="15.0" fill="rgb(249,137,52)" rx="2" ry="2" />
<text  x="883.18" y="511.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.32%)</title><rect x="342.8" y="277" width="3.8" height="15.0" fill="rgb(235,34,47)" rx="2" ry="2" />
<text  x="345.77" y="287.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.memGet (1 samples, 0.16%)</title><rect x="275.8" y="437" width="1.9" height="15.0" fill="rgb(247,67,13)" rx="2" ry="2" />
<text  x="278.83" y="447.5" ></text>
</g>
<g >
<title>bytes.NewBuffer (1 samples, 0.16%)</title><rect x="876.4" y="517" width="1.9" height="15.0" fill="rgb(231,177,38)" rx="2" ry="2" />
<text  x="879.35" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="48.2" y="229" width="2.0" height="15.0" fill="rgb(228,18,19)" rx="2" ry="2" />
<text  x="51.25" y="239.5" ></text>
</g>
<g >
<title>io.ReadFull (4 samples, 0.65%)</title><rect x="371.5" y="421" width="7.6" height="15.0" fill="rgb(229,204,0)" rx="2" ry="2" />
<text  x="374.46" y="431.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.32%)</title><rect x="296.9" y="437" width="3.8" height="15.0" fill="rgb(226,98,54)" rx="2" ry="2" />
<text  x="299.87" y="447.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.16%)</title><rect x="42.5" y="325" width="1.9" height="15.0" fill="rgb(215,6,16)" rx="2" ry="2" />
<text  x="45.51" y="335.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (16 samples, 2.59%)</title><rect x="241.4" y="421" width="30.6" height="15.0" fill="rgb(209,115,45)" rx="2" ry="2" />
<text  x="244.41" y="431.5" >ma..</text>
</g>
<g >
<title>runtime.callers (2 samples, 0.32%)</title><rect x="210.8" y="405" width="3.8" height="15.0" fill="rgb(208,153,18)" rx="2" ry="2" />
<text  x="213.81" y="415.5" ></text>
</g>
<g >
<title>reflect.Value.Addr (1 samples, 0.16%)</title><rect x="289.2" y="389" width="1.9" height="15.0" fill="rgb(234,217,4)" rx="2" ry="2" />
<text  x="292.22" y="399.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.16%)</title><rect x="13.8" y="293" width="1.9" height="15.0" fill="rgb(227,66,29)" rx="2" ry="2" />
<text  x="16.82" y="303.5" ></text>
</g>
<g >
<title>os.(*File).write (1 samples, 0.16%)</title><rect x="859.1" y="501" width="2.0" height="15.0" fill="rgb(227,103,48)" rx="2" ry="2" />
<text  x="862.14" y="511.5" ></text>
</g>
<g >
<title>crypto/rsa.pkcs1v15HashInfo (2 samples, 0.32%)</title><rect x="734.8" y="469" width="3.9" height="15.0" fill="rgb(223,176,42)" rx="2" ry="2" />
<text  x="737.83" y="479.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (1 samples, 0.16%)</title><rect x="65.5" y="357" width="1.9" height="15.0" fill="rgb(247,220,8)" rx="2" ry="2" />
<text  x="68.46" y="367.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (2 samples, 0.32%)</title><rect x="25.3" y="485" width="3.8" height="15.0" fill="rgb(209,6,7)" rx="2" ry="2" />
<text  x="28.30" y="495.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.16%)</title><rect x="233.8" y="469" width="1.9" height="15.0" fill="rgb(246,30,15)" rx="2" ry="2" />
<text  x="236.76" y="479.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.16%)</title><rect x="855.3" y="517" width="1.9" height="15.0" fill="rgb(214,75,35)" rx="2" ry="2" />
<text  x="858.32" y="527.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (155 samples, 25.12%)</title><rect x="382.9" y="421" width="296.5" height="15.0" fill="rgb(249,65,36)" rx="2" ry="2" />
<text  x="385.93" y="431.5" >math/big.nat.expNN</text>
</g>
<g >
<title>runtime.scanframeworker (1 samples, 0.16%)</title><rect x="975.8" y="405" width="1.9" height="15.0" fill="rgb(218,32,45)" rx="2" ry="2" />
<text  x="978.80" y="415.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (4 samples, 0.65%)</title><rect x="10.0" y="437" width="7.6" height="15.0" fill="rgb(222,95,8)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.16%)</title><rect x="824.7" y="389" width="1.9" height="15.0" fill="rgb(228,43,14)" rx="2" ry="2" />
<text  x="827.72" y="399.5" ></text>
</g>
<g >
<title>runtime.morestack (1 samples, 0.16%)</title><rect x="1092.5" y="565" width="1.9" height="15.0" fill="rgb(217,6,23)" rx="2" ry="2" />
<text  x="1095.46" y="575.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (11 samples, 1.78%)</title><rect x="799.9" y="469" width="21.0" height="15.0" fill="rgb(254,34,4)" rx="2" ry="2" />
<text  x="802.85" y="479.5" ></text>
</g>
<g >
<title>encoding/json.stateBeginValue (1 samples, 0.16%)</title><rect x="17.6" y="421" width="2.0" height="15.0" fill="rgb(224,37,46)" rx="2" ry="2" />
<text  x="20.65" y="431.5" ></text>
</g>
<g >
<title>runtime.entersyscall (3 samples, 0.49%)</title><rect x="333.2" y="453" width="5.7" height="15.0" fill="rgb(225,36,26)" rx="2" ry="2" />
<text  x="336.21" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.16%)</title><rect x="40.6" y="421" width="1.9" height="15.0" fill="rgb(224,190,9)" rx="2" ry="2" />
<text  x="43.60" y="431.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (7 samples, 1.13%)</title><rect x="1098.2" y="501" width="13.4" height="15.0" fill="rgb(237,53,8)" rx="2" ry="2" />
<text  x="1101.20" y="511.5" ></text>
</g>
<g >
<title>runtime.sysmon (42 samples, 6.81%)</title><rect x="1094.4" y="533" width="80.3" height="15.0" fill="rgb(251,32,39)" rx="2" ry="2" />
<text  x="1097.38" y="543.5" >runtime.s..</text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.32%)</title><rect x="880.2" y="485" width="3.8" height="15.0" fill="rgb(249,102,10)" rx="2" ry="2" />
<text  x="883.18" y="495.5" ></text>
</g>
<g >
<title>syscall.write (1 samples, 0.16%)</title><rect x="229.9" y="437" width="1.9" height="15.0" fill="rgb(233,76,51)" rx="2" ry="2" />
<text  x="232.94" y="447.5" ></text>
</g>
</g>
</svg>

