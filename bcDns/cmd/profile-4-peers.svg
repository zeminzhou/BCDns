<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="454.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="437" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="437" > </text>
<g id="frames">
<g >
<title>net.(*conn).Write (20 samples, 2.46%)</title><rect x="590.6" y="325" width="29.0" height="15.0" fill="rgb(235,199,11)" rx="2" ry="2" />
<text  x="593.57" y="335.5" >ne..</text>
</g>
<g >
<title>math/big.nat.mulAddWW (1 samples, 0.12%)</title><rect x="208.8" y="149" width="1.5" height="15.0" fill="rgb(248,147,12)" rx="2" ry="2" />
<text  x="211.84" y="159.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.25%)</title><rect x="21.6" y="261" width="2.9" height="15.0" fill="rgb(231,182,5)" rx="2" ry="2" />
<text  x="24.61" y="271.5" ></text>
</g>
<g >
<title>runtime.epollwait (2 samples, 0.25%)</title><rect x="952.0" y="309" width="2.9" height="15.0" fill="rgb(222,35,13)" rx="2" ry="2" />
<text  x="954.97" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.12%)</title><rect x="249.5" y="213" width="1.4" height="15.0" fill="rgb(229,127,22)" rx="2" ry="2" />
<text  x="252.48" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.12%)</title><rect x="700.9" y="293" width="1.4" height="15.0" fill="rgb(241,7,38)" rx="2" ry="2" />
<text  x="703.87" y="303.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (112 samples, 13.78%)</title><rect x="28.9" y="229" width="162.5" height="15.0" fill="rgb(241,217,4)" rx="2" ry="2" />
<text  x="31.87" y="239.5" >math/big.nat.expNN</text>
</g>
<g >
<title>io.ReadAtLeast (2 samples, 0.25%)</title><rect x="355.4" y="229" width="2.9" height="15.0" fill="rgb(215,211,32)" rx="2" ry="2" />
<text  x="358.44" y="239.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.12%)</title><rect x="584.8" y="261" width="1.4" height="15.0" fill="rgb(254,158,12)" rx="2" ry="2" />
<text  x="587.76" y="271.5" ></text>
</g>
<g >
<title>runtime.assertE2I2 (1 samples, 0.12%)</title><rect x="703.8" y="293" width="1.4" height="15.0" fill="rgb(227,133,47)" rx="2" ry="2" />
<text  x="706.78" y="303.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (5 samples, 0.62%)</title><rect x="335.1" y="357" width="7.3" height="15.0" fill="rgb(217,29,21)" rx="2" ry="2" />
<text  x="338.12" y="367.5" ></text>
</g>
<g >
<title>BCDns_0.1/utils.IntToBytes (1 samples, 0.12%)</title><rect x="619.6" y="325" width="1.4" height="15.0" fill="rgb(219,224,14)" rx="2" ry="2" />
<text  x="622.59" y="335.5" ></text>
</g>
<g >
<title>reflect.(*rtype).ptrTo (1 samples, 0.12%)</title><rect x="311.9" y="213" width="1.4" height="15.0" fill="rgb(251,176,37)" rx="2" ry="2" />
<text  x="314.89" y="223.5" ></text>
</g>
<g >
<title>math/big.nat.div (9 samples, 1.11%)</title><rect x="565.9" y="229" width="13.1" height="15.0" fill="rgb(240,44,43)" rx="2" ry="2" />
<text  x="568.89" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.12%)</title><rect x="191.4" y="117" width="1.5" height="15.0" fill="rgb(206,53,22)" rx="2" ry="2" />
<text  x="194.43" y="127.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (2 samples, 0.25%)</title><rect x="329.3" y="293" width="2.9" height="15.0" fill="rgb(254,69,26)" rx="2" ry="2" />
<text  x="332.31" y="303.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (1 samples, 0.12%)</title><rect x="1055.0" y="357" width="1.5" height="15.0" fill="rgb(238,162,37)" rx="2" ry="2" />
<text  x="1058.02" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (1 samples, 0.12%)</title><rect x="895.4" y="229" width="1.4" height="15.0" fill="rgb(217,10,51)" rx="2" ry="2" />
<text  x="898.36" y="239.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).SendTo (9 samples, 1.11%)</title><rect x="227.7" y="341" width="13.1" height="15.0" fill="rgb(250,190,33)" rx="2" ry="2" />
<text  x="230.71" y="351.5" ></text>
</g>
<g >
<title>runtime.goready (3 samples, 0.37%)</title><rect x="342.4" y="325" width="4.3" height="15.0" fill="rgb(232,43,48)" rx="2" ry="2" />
<text  x="345.37" y="335.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.(*Mutex).Lock (2 samples, 0.25%)</title><rect x="237.9" y="325" width="2.9" height="15.0" fill="rgb(213,28,23)" rx="2" ry="2" />
<text  x="240.87" y="335.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.12%)</title><rect x="210.3" y="165" width="1.4" height="15.0" fill="rgb(233,220,31)" rx="2" ry="2" />
<text  x="213.30" y="175.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (5 samples, 0.62%)</title><rect x="288.7" y="309" width="7.2" height="15.0" fill="rgb(234,180,31)" rx="2" ry="2" />
<text  x="291.67" y="319.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (2 samples, 0.25%)</title><rect x="221.9" y="293" width="2.9" height="15.0" fill="rgb(206,208,13)" rx="2" ry="2" />
<text  x="224.91" y="303.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).VerifySignature (2 samples, 0.25%)</title><rect x="295.9" y="357" width="2.9" height="15.0" fill="rgb(240,187,51)" rx="2" ry="2" />
<text  x="298.93" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.12%)</title><rect x="1023.1" y="213" width="1.4" height="15.0" fill="rgb(243,188,5)" rx="2" ry="2" />
<text  x="1026.09" y="223.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.getDigest2 (1 samples, 0.12%)</title><rect x="255.3" y="325" width="1.4" height="15.0" fill="rgb(231,229,32)" rx="2" ry="2" />
<text  x="258.29" y="335.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.25%)</title><rect x="1179.8" y="261" width="2.9" height="15.0" fill="rgb(210,72,34)" rx="2" ry="2" />
<text  x="1182.84" y="271.5" ></text>
</g>
<g >
<title>runtime.netpoll (12 samples, 1.48%)</title><rect x="982.4" y="325" width="17.5" height="15.0" fill="rgb(253,153,7)" rx="2" ry="2" />
<text  x="985.45" y="335.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Iterator).Next.func1 (1 samples, 0.12%)</title><rect x="348.2" y="245" width="1.4" height="15.0" fill="rgb(246,10,52)" rx="2" ry="2" />
<text  x="351.18" y="255.5" ></text>
</g>
<g >
<title>math/big.greaterThan (1 samples, 0.12%)</title><rect x="214.6" y="181" width="1.5" height="15.0" fill="rgb(232,202,43)" rx="2" ry="2" />
<text  x="217.65" y="191.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (129 samples, 15.87%)</title><rect x="358.3" y="245" width="187.3" height="15.0" fill="rgb(249,56,8)" rx="2" ry="2" />
<text  x="361.34" y="255.5" >math/big.nat.expNN</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="776.3" y="277" width="1.5" height="15.0" fill="rgb(230,92,34)" rx="2" ry="2" />
<text  x="779.35" y="287.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).Run (220 samples, 27.06%)</title><rect x="15.8" y="389" width="319.3" height="15.0" fill="rgb(245,71,18)" rx="2" ry="2" />
<text  x="18.81" y="399.5" >BCDns_0.1/consensusMy/service.(*Node).Run</text>
</g>
<g >
<title>BCDns_0.1/network/service.GetPacketHeader (3 samples, 0.37%)</title><rect x="738.6" y="373" width="4.4" height="15.0" fill="rgb(218,195,46)" rx="2" ry="2" />
<text  x="741.61" y="383.5" ></text>
</g>
<g >
<title>runtime.(*gcSweepBuf).push (1 samples, 0.12%)</title><rect x="895.4" y="213" width="1.4" height="15.0" fill="rgb(205,163,11)" rx="2" ry="2" />
<text  x="898.36" y="223.5" ></text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode (3 samples, 0.37%)</title><rect x="240.8" y="293" width="4.3" height="15.0" fill="rgb(215,131,13)" rx="2" ry="2" />
<text  x="243.77" y="303.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.12%)</title><rect x="210.3" y="101" width="1.4" height="15.0" fill="rgb(216,195,10)" rx="2" ry="2" />
<text  x="213.30" y="111.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 0.37%)</title><rect x="629.8" y="229" width="4.3" height="15.0" fill="rgb(209,67,24)" rx="2" ry="2" />
<text  x="632.75" y="239.5" ></text>
</g>
<g >
<title>runtime.usleep (8 samples, 0.98%)</title><rect x="1007.1" y="293" width="11.6" height="15.0" fill="rgb(247,32,16)" rx="2" ry="2" />
<text  x="1010.12" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (5 samples, 0.62%)</title><rect x="281.4" y="293" width="7.3" height="15.0" fill="rgb(215,203,22)" rx="2" ry="2" />
<text  x="284.41" y="303.5" ></text>
</g>
<g >
<title>math/big.shrVU (1 samples, 0.12%)</title><rect x="36.1" y="181" width="1.5" height="15.0" fill="rgb(250,130,3)" rx="2" ry="2" />
<text  x="39.13" y="191.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.12%)</title><rect x="702.3" y="277" width="1.5" height="15.0" fill="rgb(238,128,7)" rx="2" ry="2" />
<text  x="705.32" y="287.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="210.3" y="197" width="1.4" height="15.0" fill="rgb(218,82,28)" rx="2" ry="2" />
<text  x="213.30" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.12%)</title><rect x="700.9" y="181" width="1.4" height="15.0" fill="rgb(205,200,35)" rx="2" ry="2" />
<text  x="703.87" y="191.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneNameByIndex (2 samples, 0.25%)</title><rect x="348.2" y="325" width="2.9" height="15.0" fill="rgb(213,180,13)" rx="2" ry="2" />
<text  x="351.18" y="335.5" ></text>
</g>
<g >
<title>runtime.futexsleep (3 samples, 0.37%)</title><rect x="1182.7" y="341" width="4.4" height="15.0" fill="rgb(234,86,23)" rx="2" ry="2" />
<text  x="1185.74" y="351.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (1 samples, 0.12%)</title><rect x="269.8" y="229" width="1.5" height="15.0" fill="rgb(237,102,43)" rx="2" ry="2" />
<text  x="272.80" y="239.5" ></text>
</g>
<g >
<title>runtime.markroot (12 samples, 1.48%)</title><rect x="902.6" y="325" width="17.4" height="15.0" fill="rgb(242,39,24)" rx="2" ry="2" />
<text  x="905.62" y="335.5" ></text>
</g>
<g >
<title>runtime.mapdelete_faststr (1 samples, 0.12%)</title><rect x="728.5" y="373" width="1.4" height="15.0" fill="rgb(207,14,19)" rx="2" ry="2" />
<text  x="731.45" y="383.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (11 samples, 1.35%)</title><rect x="565.9" y="277" width="16.0" height="15.0" fill="rgb(233,26,30)" rx="2" ry="2" />
<text  x="568.89" y="287.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.12%)</title><rect x="37.6" y="181" width="1.4" height="15.0" fill="rgb(241,225,51)" rx="2" ry="2" />
<text  x="40.58" y="191.5" ></text>
</g>
<g >
<title>time.Sleep (1 samples, 0.12%)</title><rect x="1187.1" y="373" width="1.4" height="15.0" fill="rgb(248,172,32)" rx="2" ry="2" />
<text  x="1190.10" y="383.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.12%)</title><rect x="314.8" y="309" width="1.4" height="15.0" fill="rgb(239,89,33)" rx="2" ry="2" />
<text  x="317.80" y="319.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.12%)</title><rect x="589.1" y="309" width="1.5" height="15.0" fill="rgb(228,23,11)" rx="2" ry="2" />
<text  x="592.11" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (5 samples, 0.62%)</title><rect x="281.4" y="277" width="7.3" height="15.0" fill="rgb(230,201,31)" rx="2" ry="2" />
<text  x="284.41" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (2 samples, 0.25%)</title><rect x="692.2" y="325" width="2.9" height="15.0" fill="rgb(225,162,1)" rx="2" ry="2" />
<text  x="695.16" y="335.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (2 samples, 0.25%)</title><rect x="188.5" y="181" width="2.9" height="15.0" fill="rgb(212,8,23)" rx="2" ry="2" />
<text  x="191.52" y="191.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.(*lockOrder).PostLock (1 samples, 0.12%)</title><rect x="237.9" y="277" width="1.4" height="15.0" fill="rgb(245,97,14)" rx="2" ry="2" />
<text  x="240.87" y="287.5" ></text>
</g>
<g >
<title>fmt.(*pp).printValue (3 samples, 0.37%)</title><rect x="711.0" y="277" width="4.4" height="15.0" fill="rgb(223,219,16)" rx="2" ry="2" />
<text  x="714.03" y="287.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (1 samples, 0.12%)</title><rect x="899.7" y="325" width="1.5" height="15.0" fill="rgb(211,211,9)" rx="2" ry="2" />
<text  x="902.72" y="335.5" ></text>
</g>
<g >
<title>reflect.DeepEqual (2 samples, 0.25%)</title><rect x="250.9" y="325" width="2.9" height="15.0" fill="rgb(233,209,28)" rx="2" ry="2" />
<text  x="253.93" y="335.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.25%)</title><rect x="1179.8" y="245" width="2.9" height="15.0" fill="rgb(240,143,1)" rx="2" ry="2" />
<text  x="1182.84" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).scanWhile (1 samples, 0.12%)</title><rect x="298.8" y="309" width="1.5" height="15.0" fill="rgb(209,229,18)" rx="2" ry="2" />
<text  x="301.83" y="319.5" ></text>
</g>
<g >
<title>reflect.valueInterface (1 samples, 0.12%)</title><rect x="252.4" y="261" width="1.4" height="15.0" fill="rgb(219,110,13)" rx="2" ry="2" />
<text  x="255.39" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (1 samples, 0.12%)</title><rect x="1023.1" y="197" width="1.4" height="15.0" fill="rgb(233,26,53)" rx="2" ry="2" />
<text  x="1026.09" y="207.5" ></text>
</g>
<g >
<title>reflect.resolveNameOff (1 samples, 0.12%)</title><rect x="756.0" y="197" width="1.5" height="15.0" fill="rgb(231,48,50)" rx="2" ry="2" />
<text  x="759.03" y="207.5" ></text>
</g>
<g >
<title>runtime.stopm (2 samples, 0.25%)</title><rect x="957.8" y="325" width="2.9" height="15.0" fill="rgb(223,147,39)" rx="2" ry="2" />
<text  x="960.77" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).freeSpan (1 samples, 0.12%)</title><rect x="1055.0" y="197" width="1.5" height="15.0" fill="rgb(228,224,10)" rx="2" ry="2" />
<text  x="1058.02" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock (1 samples, 0.12%)</title><rect x="10.0" y="341" width="1.5" height="15.0" fill="rgb(222,174,47)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>reflect.(*rtype).String (1 samples, 0.12%)</title><rect x="756.0" y="229" width="1.5" height="15.0" fill="rgb(214,27,20)" rx="2" ry="2" />
<text  x="759.03" y="239.5" ></text>
</g>
<g >
<title>syscall.Write (1 samples, 0.12%)</title><rect x="735.7" y="293" width="1.5" height="15.0" fill="rgb(215,175,51)" rx="2" ry="2" />
<text  x="738.71" y="303.5" ></text>
</g>
<g >
<title>runtime.selectgo (3 samples, 0.37%)</title><rect x="729.9" y="373" width="4.4" height="15.0" fill="rgb(240,120,29)" rx="2" ry="2" />
<text  x="732.90" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).scanWhile (1 samples, 0.12%)</title><rect x="282.9" y="261" width="1.4" height="15.0" fill="rgb(206,186,43)" rx="2" ry="2" />
<text  x="285.87" y="271.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (3 samples, 0.37%)</title><rect x="584.8" y="325" width="4.3" height="15.0" fill="rgb(229,60,21)" rx="2" ry="2" />
<text  x="587.76" y="335.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.12%)</title><rect x="737.2" y="261" width="1.4" height="15.0" fill="rgb(223,190,21)" rx="2" ry="2" />
<text  x="740.16" y="271.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (1 samples, 0.12%)</title><rect x="904.1" y="245" width="1.4" height="15.0" fill="rgb(236,123,54)" rx="2" ry="2" />
<text  x="907.07" y="255.5" ></text>
</g>
<g >
<title>reflect.Value.Field (1 samples, 0.12%)</title><rect x="250.9" y="277" width="1.5" height="15.0" fill="rgb(247,25,12)" rx="2" ry="2" />
<text  x="253.93" y="287.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.12%)</title><rect x="703.8" y="277" width="1.4" height="15.0" fill="rgb(224,114,16)" rx="2" ry="2" />
<text  x="706.78" y="287.5" ></text>
</g>
<g >
<title>math/big.(*Int).Mod (3 samples, 0.37%)</title><rect x="545.6" y="261" width="4.3" height="15.0" fill="rgb(247,3,23)" rx="2" ry="2" />
<text  x="548.57" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.25%)</title><rect x="339.5" y="245" width="2.9" height="15.0" fill="rgb(237,137,7)" rx="2" ry="2" />
<text  x="342.47" y="255.5" ></text>
</g>
<g >
<title>encoding/json.unquoteBytes (1 samples, 0.12%)</title><rect x="10.0" y="149" width="1.5" height="15.0" fill="rgb(209,172,4)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.12%)</title><rect x="586.2" y="261" width="1.5" height="15.0" fill="rgb(218,184,1)" rx="2" ry="2" />
<text  x="589.21" y="271.5" ></text>
</g>
<g >
<title>runtime.park_m (63 samples, 7.75%)</title><rect x="963.6" y="373" width="91.4" height="15.0" fill="rgb(212,175,5)" rx="2" ry="2" />
<text  x="966.58" y="383.5" >runtime.pa..</text>
</g>
<g >
<title>BCDns_0.1/network/service.PackMessage (1 samples, 0.12%)</title><rect x="11.5" y="341" width="1.4" height="15.0" fill="rgb(214,195,18)" rx="2" ry="2" />
<text  x="14.45" y="351.5" ></text>
</g>
<g >
<title>math/big.basicMul (1 samples, 0.12%)</title><rect x="544.1" y="213" width="1.5" height="15.0" fill="rgb(237,4,30)" rx="2" ry="2" />
<text  x="547.12" y="223.5" ></text>
</g>
<g >
<title>runtime.ready (3 samples, 0.37%)</title><rect x="342.4" y="277" width="4.3" height="15.0" fill="rgb(230,136,2)" rx="2" ry="2" />
<text  x="345.37" y="287.5" ></text>
</g>
<g >
<title>reflect.(*rtype).nameOff (1 samples, 0.12%)</title><rect x="756.0" y="213" width="1.5" height="15.0" fill="rgb(214,70,26)" rx="2" ry="2" />
<text  x="759.03" y="223.5" ></text>
</g>
<g >
<title>encoding/binary.Read (1 samples, 0.12%)</title><rect x="740.1" y="341" width="1.4" height="15.0" fill="rgb(251,31,33)" rx="2" ry="2" />
<text  x="743.06" y="351.5" ></text>
</g>
<g >
<title>syscall.Syscall (19 samples, 2.34%)</title><rect x="592.0" y="245" width="27.6" height="15.0" fill="rgb(215,78,28)" rx="2" ry="2" />
<text  x="595.02" y="255.5" >s..</text>
</g>
<g >
<title>runtime.runqget (1 samples, 0.12%)</title><rect x="1053.6" y="341" width="1.4" height="15.0" fill="rgb(245,125,42)" rx="2" ry="2" />
<text  x="1056.57" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Sign (158 samples, 19.43%)</title><rect x="355.4" y="341" width="229.4" height="15.0" fill="rgb(237,13,45)" rx="2" ry="2" />
<text  x="358.44" y="351.5" >BCDns_0.1/messages.(*ProposalM..</text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.12%)</title><rect x="1023.1" y="261" width="1.4" height="15.0" fill="rgb(216,182,44)" rx="2" ry="2" />
<text  x="1026.09" y="271.5" ></text>
</g>
<g >
<title>encoding/json.unquoteBytes (2 samples, 0.25%)</title><rect x="758.9" y="261" width="2.9" height="15.0" fill="rgb(205,62,37)" rx="2" ry="2" />
<text  x="761.93" y="271.5" ></text>
</g>
<g >
<title>fmt.(*pp).handleMethods (2 samples, 0.25%)</title><rect x="711.0" y="261" width="2.9" height="15.0" fill="rgb(251,68,24)" rx="2" ry="2" />
<text  x="714.03" y="271.5" ></text>
</g>
<g >
<title>runtime.(*gList).empty (1 samples, 0.12%)</title><rect x="973.7" y="325" width="1.5" height="15.0" fill="rgb(221,15,36)" rx="2" ry="2" />
<text  x="976.74" y="335.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (37 samples, 4.55%)</title><rect x="634.1" y="325" width="53.7" height="15.0" fill="rgb(237,90,0)" rx="2" ry="2" />
<text  x="637.11" y="335.5" >crypt..</text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.12%)</title><rect x="21.6" y="133" width="1.5" height="15.0" fill="rgb(238,32,49)" rx="2" ry="2" />
<text  x="24.61" y="143.5" ></text>
</g>
<g >
<title>runtime.retake (3 samples, 0.37%)</title><rect x="1075.3" y="341" width="4.4" height="15.0" fill="rgb(232,80,23)" rx="2" ry="2" />
<text  x="1078.34" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (2 samples, 0.25%)</title><rect x="891.0" y="341" width="2.9" height="15.0" fill="rgb(247,45,5)" rx="2" ry="2" />
<text  x="894.01" y="351.5" ></text>
</g>
<g >
<title>reflect.(*MapIter).Next (1 samples, 0.12%)</title><rect x="715.4" y="277" width="1.4" height="15.0" fill="rgb(221,119,36)" rx="2" ry="2" />
<text  x="718.39" y="287.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="541.2" y="181" width="1.5" height="15.0" fill="rgb(218,150,20)" rx="2" ry="2" />
<text  x="544.22" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="237.9" y="213" width="1.4" height="15.0" fill="rgb(229,226,21)" rx="2" ry="2" />
<text  x="240.87" y="223.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (29 samples, 3.57%)</title><rect x="743.0" y="357" width="42.1" height="15.0" fill="rgb(234,201,54)" rx="2" ry="2" />
<text  x="745.96" y="367.5" >enc..</text>
</g>
<g >
<title>runtime.convT2E (1 samples, 0.12%)</title><rect x="224.8" y="293" width="1.5" height="15.0" fill="rgb(249,101,4)" rx="2" ry="2" />
<text  x="227.81" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (2 samples, 0.25%)</title><rect x="896.8" y="229" width="2.9" height="15.0" fill="rgb(229,55,47)" rx="2" ry="2" />
<text  x="899.81" y="239.5" ></text>
</g>
<g >
<title>internal/reflectlite.ValueOf (1 samples, 0.12%)</title><rect x="352.5" y="229" width="1.5" height="15.0" fill="rgb(212,229,0)" rx="2" ry="2" />
<text  x="355.53" y="239.5" ></text>
</g>
<g >
<title>syscall.Syscall (22 samples, 2.71%)</title><rect x="792.3" y="261" width="31.9" height="15.0" fill="rgb(252,188,28)" rx="2" ry="2" />
<text  x="795.31" y="271.5" >sy..</text>
</g>
<g >
<title>syscall.Write (22 samples, 2.71%)</title><rect x="792.3" y="293" width="31.9" height="15.0" fill="rgb(222,192,14)" rx="2" ry="2" />
<text  x="795.31" y="303.5" >sy..</text>
</g>
<g >
<title>math/big.(*Int).Add (9 samples, 1.11%)</title><rect x="195.8" y="181" width="13.0" height="15.0" fill="rgb(227,59,10)" rx="2" ry="2" />
<text  x="198.78" y="191.5" ></text>
</g>
<g >
<title>os.(*File).write (24 samples, 2.95%)</title><rect x="789.4" y="325" width="34.8" height="15.0" fill="rgb(210,98,30)" rx="2" ry="2" />
<text  x="792.41" y="335.5" >os..</text>
</g>
<g >
<title>math/big.nat.divLarge (5 samples, 0.62%)</title><rect x="211.7" y="197" width="7.3" height="15.0" fill="rgb(242,198,6)" rx="2" ry="2" />
<text  x="214.75" y="207.5" ></text>
</g>
<g >
<title>runtime.fastrand (2 samples, 0.25%)</title><rect x="979.5" y="325" width="2.9" height="15.0" fill="rgb(241,208,22)" rx="2" ry="2" />
<text  x="982.54" y="335.5" ></text>
</g>
<g >
<title>crypto/rsa.decrypt (145 samples, 17.84%)</title><rect x="355.4" y="277" width="210.5" height="15.0" fill="rgb(246,157,19)" rx="2" ry="2" />
<text  x="358.44" y="287.5" >crypto/rsa.decrypt</text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.12%)</title><rect x="220.5" y="261" width="1.4" height="15.0" fill="rgb(207,220,2)" rx="2" ry="2" />
<text  x="223.46" y="271.5" ></text>
</g>
<g >
<title>runtime.deferprocStack (1 samples, 0.12%)</title><rect x="351.1" y="325" width="1.4" height="15.0" fill="rgb(242,47,31)" rx="2" ry="2" />
<text  x="354.08" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.12%)</title><rect x="15.8" y="149" width="1.5" height="15.0" fill="rgb(225,208,54)" rx="2" ry="2" />
<text  x="18.81" y="159.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.25%)</title><rect x="246.6" y="309" width="2.9" height="15.0" fill="rgb(233,15,31)" rx="2" ry="2" />
<text  x="249.58" y="319.5" ></text>
</g>
<g >
<title>runtime.add (1 samples, 0.12%)</title><rect x="909.9" y="181" width="1.4" height="15.0" fill="rgb(241,49,19)" rx="2" ry="2" />
<text  x="912.88" y="191.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (3 samples, 0.37%)</title><rect x="860.5" y="261" width="4.4" height="15.0" fill="rgb(239,164,47)" rx="2" ry="2" />
<text  x="863.53" y="271.5" ></text>
</g>
<g >
<title>runtime.chansend1 (4 samples, 0.49%)</title><rect x="864.9" y="373" width="5.8" height="15.0" fill="rgb(206,136,27)" rx="2" ry="2" />
<text  x="867.88" y="383.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (3 samples, 0.37%)</title><rect x="911.3" y="197" width="4.4" height="15.0" fill="rgb(232,40,5)" rx="2" ry="2" />
<text  x="914.33" y="207.5" ></text>
</g>
<g >
<title>runtime.forEachP (2 samples, 0.25%)</title><rect x="896.8" y="309" width="2.9" height="15.0" fill="rgb(248,116,13)" rx="2" ry="2" />
<text  x="899.81" y="319.5" ></text>
</g>
<g >
<title>github.com/golang/snappy.Decode (2 samples, 0.25%)</title><rect x="785.1" y="357" width="2.9" height="15.0" fill="rgb(206,93,28)" rx="2" ry="2" />
<text  x="788.06" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).removeSpan (1 samples, 0.12%)</title><rect x="892.5" y="245" width="1.4" height="15.0" fill="rgb(220,77,33)" rx="2" ry="2" />
<text  x="895.46" y="255.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (9 samples, 1.11%)</title><rect x="770.5" y="341" width="13.1" height="15.0" fill="rgb(217,84,8)" rx="2" ry="2" />
<text  x="773.54" y="351.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (2 samples, 0.25%)</title><rect x="946.2" y="293" width="2.9" height="15.0" fill="rgb(244,93,26)" rx="2" ry="2" />
<text  x="949.16" y="303.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (1 samples, 0.12%)</title><rect x="893.9" y="325" width="1.5" height="15.0" fill="rgb(233,172,12)" rx="2" ry="2" />
<text  x="896.91" y="335.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).VerifySignature (17 samples, 2.09%)</title><rect x="255.3" y="341" width="24.7" height="15.0" fill="rgb(230,170,6)" rx="2" ry="2" />
<text  x="258.29" y="351.5" >B..</text>
</g>
<g >
<title>reflect.Value.Elem (1 samples, 0.12%)</title><rect x="699.4" y="261" width="1.5" height="15.0" fill="rgb(234,59,22)" rx="2" ry="2" />
<text  x="702.42" y="271.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (3 samples, 0.37%)</title><rect x="864.9" y="213" width="4.3" height="15.0" fill="rgb(247,204,26)" rx="2" ry="2" />
<text  x="867.88" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).scanWhile (1 samples, 0.12%)</title><rect x="744.4" y="293" width="1.5" height="15.0" fill="rgb(215,102,27)" rx="2" ry="2" />
<text  x="747.42" y="303.5" ></text>
</g>
<g >
<title>math/big.NewInt (1 samples, 0.12%)</title><rect x="686.4" y="309" width="1.4" height="15.0" fill="rgb(254,150,39)" rx="2" ry="2" />
<text  x="689.36" y="319.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (129 samples, 15.87%)</title><rect x="358.3" y="261" width="187.3" height="15.0" fill="rgb(228,12,38)" rx="2" ry="2" />
<text  x="361.34" y="271.5" >math/big.(*Int).Exp</text>
</g>
<g >
<title>encoding/base64.assemble64 (1 samples, 0.12%)</title><rect x="750.2" y="245" width="1.5" height="15.0" fill="rgb(223,7,25)" rx="2" ry="2" />
<text  x="753.22" y="255.5" ></text>
</g>
<g >
<title>crypto/rsa.decryptAndCheck (135 samples, 16.61%)</title><rect x="24.5" y="277" width="196.0" height="15.0" fill="rgb(215,144,35)" rx="2" ry="2" />
<text  x="27.51" y="287.5" >crypto/rsa.decryptAndCheck</text>
</g>
<g >
<title>sync.(*poolDequeue).pushHead (1 samples, 0.12%)</title><rect x="364.1" y="149" width="1.5" height="15.0" fill="rgb(243,94,3)" rx="2" ry="2" />
<text  x="367.15" y="159.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (2 samples, 0.25%)</title><rect x="295.9" y="325" width="2.9" height="15.0" fill="rgb(250,118,38)" rx="2" ry="2" />
<text  x="298.93" y="335.5" ></text>
</g>
<g >
<title>reflect.Value.Addr (1 samples, 0.12%)</title><rect x="311.9" y="229" width="1.4" height="15.0" fill="rgb(217,145,29)" rx="2" ry="2" />
<text  x="314.89" y="239.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).grow (1 samples, 0.12%)</title><rect x="242.2" y="229" width="1.5" height="15.0" fill="rgb(253,179,51)" rx="2" ry="2" />
<text  x="245.23" y="239.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (2 samples, 0.25%)</title><rect x="896.8" y="325" width="2.9" height="15.0" fill="rgb(226,213,10)" rx="2" ry="2" />
<text  x="899.81" y="335.5" ></text>
</g>
<g >
<title>runtime.selectgo (2 samples, 0.25%)</title><rect x="332.2" y="373" width="2.9" height="15.0" fill="rgb(237,153,20)" rx="2" ry="2" />
<text  x="335.21" y="383.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (3 samples, 0.37%)</title><rect x="692.2" y="341" width="4.3" height="15.0" fill="rgb(238,135,44)" rx="2" ry="2" />
<text  x="695.16" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.12%)</title><rect x="10.0" y="213" width="1.5" height="15.0" fill="rgb(252,202,16)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.25%)</title><rect x="310.4" y="277" width="2.9" height="15.0" fill="rgb(224,103,31)" rx="2" ry="2" />
<text  x="313.44" y="287.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (2 samples, 0.25%)</title><rect x="682.0" y="245" width="2.9" height="15.0" fill="rgb(234,129,17)" rx="2" ry="2" />
<text  x="685.00" y="255.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.DNode.Send (7 samples, 0.86%)</title><rect x="227.7" y="325" width="10.2" height="15.0" fill="rgb(233,88,7)" rx="2" ry="2" />
<text  x="230.71" y="335.5" ></text>
</g>
<g >
<title>syscall.write (1 samples, 0.12%)</title><rect x="735.7" y="277" width="1.5" height="15.0" fill="rgb(205,167,23)" rx="2" ry="2" />
<text  x="738.71" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="21.6" y="85" width="1.5" height="15.0" fill="rgb(218,184,19)" rx="2" ry="2" />
<text  x="24.61" y="95.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.12%)</title><rect x="950.5" y="325" width="1.5" height="15.0" fill="rgb(232,130,53)" rx="2" ry="2" />
<text  x="953.52" y="335.5" ></text>
</g>
<g >
<title>runtime.execute (1 samples, 0.12%)</title><rect x="967.9" y="341" width="1.5" height="15.0" fill="rgb(223,121,40)" rx="2" ry="2" />
<text  x="970.93" y="351.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 0.37%)</title><rect x="864.9" y="197" width="4.3" height="15.0" fill="rgb(207,85,33)" rx="2" ry="2" />
<text  x="867.88" y="207.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.12%)</title><rect x="737.2" y="309" width="1.4" height="15.0" fill="rgb(222,185,48)" rx="2" ry="2" />
<text  x="740.16" y="319.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (1 samples, 0.12%)</title><rect x="278.5" y="309" width="1.5" height="15.0" fill="rgb(239,4,49)" rx="2" ry="2" />
<text  x="281.51" y="319.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.12%)</title><rect x="1055.0" y="133" width="1.5" height="15.0" fill="rgb(230,2,44)" rx="2" ry="2" />
<text  x="1058.02" y="143.5" ></text>
</g>
<g >
<title>runtime.findrunnable (7 samples, 0.86%)</title><rect x="950.5" y="341" width="10.2" height="15.0" fill="rgb(240,45,8)" rx="2" ry="2" />
<text  x="953.52" y="351.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (6 samples, 0.74%)</title><rect x="211.7" y="229" width="8.8" height="15.0" fill="rgb(210,90,22)" rx="2" ry="2" />
<text  x="214.75" y="239.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (1 samples, 0.12%)</title><rect x="626.9" y="357" width="1.4" height="15.0" fill="rgb(248,130,7)" rx="2" ry="2" />
<text  x="629.85" y="367.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.12%)</title><rect x="221.9" y="197" width="1.5" height="15.0" fill="rgb(235,68,17)" rx="2" ry="2" />
<text  x="224.91" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="191.4" y="133" width="1.5" height="15.0" fill="rgb(241,10,26)" rx="2" ry="2" />
<text  x="194.43" y="143.5" ></text>
</g>
<g >
<title>runtime.send (3 samples, 0.37%)</title><rect x="864.9" y="341" width="4.3" height="15.0" fill="rgb(250,58,20)" rx="2" ry="2" />
<text  x="867.88" y="351.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (1 samples, 0.12%)</title><rect x="904.1" y="213" width="1.4" height="15.0" fill="rgb(245,24,17)" rx="2" ry="2" />
<text  x="907.07" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (2 samples, 0.25%)</title><rect x="876.5" y="277" width="2.9" height="15.0" fill="rgb(212,193,46)" rx="2" ry="2" />
<text  x="879.49" y="287.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (1 samples, 0.12%)</title><rect x="943.3" y="277" width="1.4" height="15.0" fill="rgb(251,38,8)" rx="2" ry="2" />
<text  x="946.26" y="287.5" ></text>
</g>
<g >
<title>encoding/json.stateBeginValue (1 samples, 0.12%)</title><rect x="587.7" y="293" width="1.4" height="15.0" fill="rgb(250,87,51)" rx="2" ry="2" />
<text  x="590.66" y="303.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (2 samples, 0.25%)</title><rect x="692.2" y="293" width="2.9" height="15.0" fill="rgb(234,67,43)" rx="2" ry="2" />
<text  x="695.16" y="303.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.12%)</title><rect x="875.0" y="261" width="1.5" height="15.0" fill="rgb(215,23,37)" rx="2" ry="2" />
<text  x="878.04" y="271.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.25%)</title><rect x="329.3" y="261" width="2.9" height="15.0" fill="rgb(226,189,12)" rx="2" ry="2" />
<text  x="332.31" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.37%)</title><rect x="629.8" y="261" width="4.3" height="15.0" fill="rgb(227,68,52)" rx="2" ry="2" />
<text  x="632.75" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.12%)</title><rect x="221.9" y="261" width="1.5" height="15.0" fill="rgb(250,58,48)" rx="2" ry="2" />
<text  x="224.91" y="271.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (15 samples, 1.85%)</title><rect x="256.7" y="293" width="21.8" height="15.0" fill="rgb(242,75,9)" rx="2" ry="2" />
<text  x="259.74" y="303.5" >m..</text>
</g>
<g >
<title>runtime.getStackMap (4 samples, 0.49%)</title><rect x="909.9" y="213" width="5.8" height="15.0" fill="rgb(236,143,14)" rx="2" ry="2" />
<text  x="912.88" y="223.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (1 samples, 0.12%)</title><rect x="893.9" y="341" width="1.5" height="15.0" fill="rgb(235,76,5)" rx="2" ry="2" />
<text  x="896.91" y="351.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (28 samples, 3.44%)</title><rect x="824.2" y="357" width="40.7" height="15.0" fill="rgb(225,82,1)" rx="2" ry="2" />
<text  x="827.24" y="367.5" >net..</text>
</g>
<g >
<title>runtime.futex (2 samples, 0.25%)</title><rect x="862.0" y="181" width="2.9" height="15.0" fill="rgb(223,57,11)" rx="2" ry="2" />
<text  x="864.98" y="191.5" ></text>
</g>
<g >
<title>reflect.Value.Type (1 samples, 0.12%)</title><rect x="716.8" y="277" width="1.5" height="15.0" fill="rgb(228,139,29)" rx="2" ry="2" />
<text  x="719.84" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).coalesce (1 samples, 0.12%)</title><rect x="892.5" y="277" width="1.4" height="15.0" fill="rgb(249,212,13)" rx="2" ry="2" />
<text  x="895.46" y="287.5" ></text>
</g>
<g >
<title>syscall.write (22 samples, 2.71%)</title><rect x="792.3" y="277" width="31.9" height="15.0" fill="rgb(219,111,17)" rx="2" ry="2" />
<text  x="795.31" y="287.5" >sy..</text>
</g>
<g >
<title>runtime.Callers (1 samples, 0.12%)</title><rect x="237.9" y="245" width="1.4" height="15.0" fill="rgb(220,107,49)" rx="2" ry="2" />
<text  x="240.87" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="17.3" y="101" width="1.4" height="15.0" fill="rgb(206,144,38)" rx="2" ry="2" />
<text  x="20.26" y="111.5" ></text>
</g>
<g >
<title>runtime.morestack (1 samples, 0.12%)</title><rect x="1055.0" y="389" width="1.5" height="15.0" fill="rgb(224,112,15)" rx="2" ry="2" />
<text  x="1058.02" y="399.5" ></text>
</g>
<g >
<title>encoding/json.stringEncoder (1 samples, 0.12%)</title><rect x="583.3" y="261" width="1.5" height="15.0" fill="rgb(236,200,37)" rx="2" ry="2" />
<text  x="586.31" y="271.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.12%)</title><rect x="918.6" y="261" width="1.4" height="15.0" fill="rgb(208,84,12)" rx="2" ry="2" />
<text  x="921.59" y="271.5" ></text>
</g>
<g >
<title>crypto/rsa.encrypt (6 samples, 0.74%)</title><rect x="211.7" y="261" width="8.8" height="15.0" fill="rgb(250,114,18)" rx="2" ry="2" />
<text  x="214.75" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="191.4" y="101" width="1.5" height="15.0" fill="rgb(208,209,39)" rx="2" ry="2" />
<text  x="194.43" y="111.5" ></text>
</g>
<g >
<title>encoding/json.valueEncoder (1 samples, 0.12%)</title><rect x="221.9" y="245" width="1.5" height="15.0" fill="rgb(239,121,36)" rx="2" ry="2" />
<text  x="224.91" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (2 samples, 0.25%)</title><rect x="12.9" y="341" width="2.9" height="15.0" fill="rgb(206,128,49)" rx="2" ry="2" />
<text  x="15.90" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (3 samples, 0.37%)</title><rect x="240.8" y="325" width="4.3" height="15.0" fill="rgb(231,223,19)" rx="2" ry="2" />
<text  x="243.77" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="589.1" y="325" width="1.5" height="15.0" fill="rgb(245,128,26)" rx="2" ry="2" />
<text  x="592.11" y="335.5" ></text>
</g>
<g >
<title>runtime.madvise (1 samples, 0.12%)</title><rect x="877.9" y="165" width="1.5" height="15.0" fill="rgb(250,138,11)" rx="2" ry="2" />
<text  x="880.95" y="175.5" ></text>
</g>
<g >
<title>runtime.mcall (1 samples, 0.12%)</title><rect x="888.1" y="373" width="1.5" height="15.0" fill="rgb(239,93,23)" rx="2" ry="2" />
<text  x="891.11" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (1 samples, 0.12%)</title><rect x="10.0" y="261" width="1.5" height="15.0" fill="rgb(218,2,13)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.12%)</title><rect x="17.3" y="149" width="1.4" height="15.0" fill="rgb(242,145,21)" rx="2" ry="2" />
<text  x="20.26" y="159.5" ></text>
</g>
<g >
<title>encoding/json.stateBeginValue (2 samples, 0.25%)</title><rect x="774.9" y="325" width="2.9" height="15.0" fill="rgb(222,0,26)" rx="2" ry="2" />
<text  x="777.90" y="335.5" ></text>
</g>
<g >
<title>encoding/binary.Write (1 samples, 0.12%)</title><rect x="619.6" y="309" width="1.4" height="15.0" fill="rgb(246,220,34)" rx="2" ry="2" />
<text  x="622.59" y="319.5" ></text>
</g>
<g >
<title>reflect.Value.MapIndex (1 samples, 0.12%)</title><rect x="280.0" y="261" width="1.4" height="15.0" fill="rgb(231,136,5)" rx="2" ry="2" />
<text  x="282.96" y="271.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).View (1 samples, 0.12%)</title><rect x="10.0" y="325" width="1.5" height="15.0" fill="rgb(219,128,46)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.12%)</title><rect x="10.0" y="165" width="1.5" height="15.0" fill="rgb(209,175,24)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>runtime.gosched_m (2 samples, 0.25%)</title><rect x="960.7" y="373" width="2.9" height="15.0" fill="rgb(238,186,3)" rx="2" ry="2" />
<text  x="963.68" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (3 samples, 0.37%)</title><rect x="15.8" y="213" width="4.4" height="15.0" fill="rgb(213,11,13)" rx="2" ry="2" />
<text  x="18.81" y="223.5" ></text>
</g>
<g >
<title>runtime.heapBits.next (1 samples, 0.12%)</title><rect x="949.1" y="309" width="1.4" height="15.0" fill="rgb(254,13,37)" rx="2" ry="2" />
<text  x="952.07" y="319.5" ></text>
</g>
<g >
<title>math/big.lehmerSimulate (2 samples, 0.25%)</title><rect x="192.9" y="197" width="2.9" height="15.0" fill="rgb(251,111,20)" rx="2" ry="2" />
<text  x="195.88" y="207.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="740.1" y="325" width="1.4" height="15.0" fill="rgb(250,166,50)" rx="2" ry="2" />
<text  x="743.06" y="335.5" ></text>
</g>
<g >
<title>math/big.nat.mul (2 samples, 0.25%)</title><rect x="561.5" y="181" width="2.9" height="15.0" fill="rgb(237,102,47)" rx="2" ry="2" />
<text  x="564.54" y="191.5" ></text>
</g>
<g >
<title>syscall.write (6 samples, 0.74%)</title><rect x="229.2" y="245" width="8.7" height="15.0" fill="rgb(230,114,11)" rx="2" ry="2" />
<text  x="232.16" y="255.5" ></text>
</g>
<g >
<title>encoding/json.intEncoder (1 samples, 0.12%)</title><rect x="243.7" y="261" width="1.4" height="15.0" fill="rgb(242,124,48)" rx="2" ry="2" />
<text  x="246.68" y="271.5" ></text>
</g>
<g >
<title>runtime.goexit0 (7 samples, 0.86%)</title><rect x="950.5" y="373" width="10.2" height="15.0" fill="rgb(205,157,28)" rx="2" ry="2" />
<text  x="953.52" y="383.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (4 samples, 0.49%)</title><rect x="15.8" y="293" width="5.8" height="15.0" fill="rgb(225,169,53)" rx="2" ry="2" />
<text  x="18.81" y="303.5" ></text>
</g>
<g >
<title>runtime.handoffp (2 samples, 0.25%)</title><rect x="1175.5" y="309" width="2.9" height="15.0" fill="rgb(253,3,14)" rx="2" ry="2" />
<text  x="1178.49" y="319.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.12%)</title><rect x="732.8" y="341" width="1.5" height="15.0" fill="rgb(253,191,42)" rx="2" ry="2" />
<text  x="735.80" y="351.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (1 samples, 0.12%)</title><rect x="243.7" y="245" width="1.4" height="15.0" fill="rgb(222,201,5)" rx="2" ry="2" />
<text  x="246.68" y="255.5" ></text>
</g>
<g >
<title>math/big.nat.add (4 samples, 0.49%)</title><rect x="200.1" y="165" width="5.8" height="15.0" fill="rgb(227,190,29)" rx="2" ry="2" />
<text  x="203.14" y="175.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.12%)</title><rect x="962.1" y="341" width="1.5" height="15.0" fill="rgb(249,183,10)" rx="2" ry="2" />
<text  x="965.13" y="351.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (1 samples, 0.12%)</title><rect x="17.3" y="117" width="1.4" height="15.0" fill="rgb(241,11,22)" rx="2" ry="2" />
<text  x="20.26" y="127.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.12%)</title><rect x="713.9" y="197" width="1.5" height="15.0" fill="rgb(251,52,17)" rx="2" ry="2" />
<text  x="716.94" y="207.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.12%)</title><rect x="237.9" y="149" width="1.4" height="15.0" fill="rgb(239,164,21)" rx="2" ry="2" />
<text  x="240.87" y="159.5" ></text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.25%)</title><rect x="885.2" y="373" width="2.9" height="15.0" fill="rgb(210,37,42)" rx="2" ry="2" />
<text  x="888.20" y="383.5" ></text>
</g>
<g >
<title>math/big.nat.setWord (1 samples, 0.12%)</title><rect x="564.4" y="197" width="1.5" height="15.0" fill="rgb(225,161,27)" rx="2" ry="2" />
<text  x="567.44" y="207.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.12%)</title><rect x="237.9" y="133" width="1.4" height="15.0" fill="rgb(225,90,45)" rx="2" ry="2" />
<text  x="240.87" y="143.5" ></text>
</g>
<g >
<title>strconv.formatBits (1 samples, 0.12%)</title><rect x="693.6" y="245" width="1.5" height="15.0" fill="rgb(212,103,45)" rx="2" ry="2" />
<text  x="696.62" y="255.5" ></text>
</g>
<g >
<title>math/big.nat.div (6 samples, 0.74%)</title><rect x="358.3" y="229" width="8.7" height="15.0" fill="rgb(251,58,9)" rx="2" ry="2" />
<text  x="361.34" y="239.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.25%)</title><rect x="1179.8" y="277" width="2.9" height="15.0" fill="rgb(239,222,6)" rx="2" ry="2" />
<text  x="1182.84" y="287.5" ></text>
</g>
<g >
<title>fmt.Fprintf (3 samples, 0.37%)</title><rect x="711.0" y="357" width="4.4" height="15.0" fill="rgb(216,38,20)" rx="2" ry="2" />
<text  x="714.03" y="367.5" ></text>
</g>
<g >
<title>math/big.basicMul (2 samples, 0.25%)</title><rect x="579.0" y="213" width="2.9" height="15.0" fill="rgb(216,182,37)" rx="2" ry="2" />
<text  x="581.95" y="223.5" ></text>
</g>
<g >
<title>encoding/json.stateBeginString (1 samples, 0.12%)</title><rect x="298.8" y="293" width="1.5" height="15.0" fill="rgb(244,204,44)" rx="2" ry="2" />
<text  x="301.83" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.12%)</title><rect x="21.6" y="165" width="1.5" height="15.0" fill="rgb(254,42,47)" rx="2" ry="2" />
<text  x="24.61" y="175.5" ></text>
</g>
<g >
<title>math/big.nat.mul (1 samples, 0.12%)</title><rect x="210.3" y="229" width="1.4" height="15.0" fill="rgb(233,153,17)" rx="2" ry="2" />
<text  x="213.30" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="766.2" y="277" width="1.4" height="15.0" fill="rgb(220,116,42)" rx="2" ry="2" />
<text  x="769.19" y="287.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.12%)</title><rect x="285.8" y="213" width="1.4" height="15.0" fill="rgb(206,27,13)" rx="2" ry="2" />
<text  x="288.77" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (6 samples, 0.74%)</title><rect x="876.5" y="341" width="8.7" height="15.0" fill="rgb(229,176,50)" rx="2" ry="2" />
<text  x="879.49" y="351.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (2 samples, 0.25%)</title><rect x="1175.5" y="325" width="2.9" height="15.0" fill="rgb(221,39,6)" rx="2" ry="2" />
<text  x="1178.49" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (7 samples, 0.86%)</title><rect x="696.5" y="341" width="10.2" height="15.0" fill="rgb(207,203,2)" rx="2" ry="2" />
<text  x="699.52" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (2 samples, 0.25%)</title><rect x="21.6" y="213" width="2.9" height="15.0" fill="rgb(232,25,14)" rx="2" ry="2" />
<text  x="24.61" y="223.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.37%)</title><rect x="864.9" y="261" width="4.3" height="15.0" fill="rgb(209,204,3)" rx="2" ry="2" />
<text  x="867.88" y="271.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.12%)</title><rect x="692.2" y="261" width="1.4" height="15.0" fill="rgb(205,124,43)" rx="2" ry="2" />
<text  x="695.16" y="271.5" ></text>
</g>
<g >
<title>runtime.notetsleep (9 samples, 1.11%)</title><rect x="1062.3" y="341" width="13.0" height="15.0" fill="rgb(219,208,7)" rx="2" ry="2" />
<text  x="1065.28" y="351.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.PostLock (1 samples, 0.12%)</title><rect x="237.9" y="293" width="1.4" height="15.0" fill="rgb(210,48,0)" rx="2" ry="2" />
<text  x="240.87" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.12%)</title><rect x="1055.0" y="181" width="1.5" height="15.0" fill="rgb(213,43,4)" rx="2" ry="2" />
<text  x="1058.02" y="191.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.37%)</title><rect x="629.8" y="277" width="4.3" height="15.0" fill="rgb(225,162,1)" rx="2" ry="2" />
<text  x="632.75" y="287.5" ></text>
</g>
<g >
<title>runtime.(*treapNode).updateInvariants (1 samples, 0.12%)</title><rect x="898.3" y="69" width="1.4" height="15.0" fill="rgb(234,5,38)" rx="2" ry="2" />
<text  x="901.27" y="79.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.37%)</title><rect x="1049.2" y="293" width="4.4" height="15.0" fill="rgb(210,60,45)" rx="2" ry="2" />
<text  x="1052.21" y="303.5" ></text>
</g>
<g >
<title>runtime.futexsleep (16 samples, 1.97%)</title><rect x="1026.0" y="293" width="23.2" height="15.0" fill="rgb(207,62,4)" rx="2" ry="2" />
<text  x="1028.99" y="303.5" >r..</text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.12%)</title><rect x="300.3" y="245" width="1.4" height="15.0" fill="rgb(239,138,8)" rx="2" ry="2" />
<text  x="303.28" y="255.5" ></text>
</g>
<g >
<title>runtime.deferprocStack (1 samples, 0.12%)</title><rect x="622.5" y="293" width="1.4" height="15.0" fill="rgb(231,153,2)" rx="2" ry="2" />
<text  x="625.50" y="303.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeueSudoG (1 samples, 0.12%)</title><rect x="333.7" y="357" width="1.4" height="15.0" fill="rgb(223,218,23)" rx="2" ry="2" />
<text  x="336.67" y="367.5" ></text>
</g>
<g >
<title>math/big.putNat (1 samples, 0.12%)</title><rect x="364.1" y="197" width="1.5" height="15.0" fill="rgb(228,117,32)" rx="2" ry="2" />
<text  x="367.15" y="207.5" ></text>
</g>
<g >
<title>runtime.sysmon (1 samples, 0.12%)</title><rect x="1174.0" y="389" width="1.5" height="15.0" fill="rgb(240,229,11)" rx="2" ry="2" />
<text  x="1177.03" y="399.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.12%)</title><rect x="290.1" y="197" width="1.5" height="15.0" fill="rgb(205,71,13)" rx="2" ry="2" />
<text  x="293.12" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.DNode.Send (20 samples, 2.46%)</title><rect x="590.6" y="341" width="29.0" height="15.0" fill="rgb(207,190,12)" rx="2" ry="2" />
<text  x="593.57" y="351.5" >BC..</text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Leader).Run (4 samples, 0.49%)</title><rect x="10.0" y="389" width="5.8" height="15.0" fill="rgb(226,126,14)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (1 samples, 0.12%)</title><rect x="12.9" y="277" width="1.5" height="15.0" fill="rgb(205,153,42)" rx="2" ry="2" />
<text  x="15.90" y="287.5" ></text>
</g>
<g >
<title>encoding/json.indirect (2 samples, 0.25%)</title><rect x="310.4" y="245" width="2.9" height="15.0" fill="rgb(220,201,7)" rx="2" ry="2" />
<text  x="313.44" y="255.5" ></text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.12%)</title><rect x="323.5" y="341" width="1.5" height="15.0" fill="rgb(212,66,30)" rx="2" ry="2" />
<text  x="326.51" y="351.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.12%)</title><rect x="583.3" y="213" width="1.5" height="15.0" fill="rgb(222,8,43)" rx="2" ry="2" />
<text  x="586.31" y="223.5" ></text>
</g>
<g >
<title>math/big.nat.clear (1 samples, 0.12%)</title><rect x="684.9" y="245" width="1.5" height="15.0" fill="rgb(219,19,20)" rx="2" ry="2" />
<text  x="687.91" y="255.5" ></text>
</g>
<g >
<title>runtime/pprof.profileWriter (1 samples, 0.12%)</title><rect x="1187.1" y="389" width="1.4" height="15.0" fill="rgb(252,190,38)" rx="2" ry="2" />
<text  x="1190.10" y="399.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock.func1 (2 samples, 0.25%)</title><rect x="21.6" y="325" width="2.9" height="15.0" fill="rgb(229,146,21)" rx="2" ry="2" />
<text  x="24.61" y="335.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (2 samples, 0.25%)</title><rect x="295.9" y="261" width="2.9" height="15.0" fill="rgb(242,221,10)" rx="2" ry="2" />
<text  x="298.93" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (2 samples, 0.25%)</title><rect x="876.5" y="261" width="2.9" height="15.0" fill="rgb(235,10,50)" rx="2" ry="2" />
<text  x="879.49" y="271.5" ></text>
</g>
<g >
<title>crypto/rsa.SignPKCS1v15 (135 samples, 16.61%)</title><rect x="24.5" y="293" width="196.0" height="15.0" fill="rgb(218,35,49)" rx="2" ry="2" />
<text  x="27.51" y="303.5" >crypto/rsa.SignPKCS1v15</text>
</g>
<g >
<title>encoding/json.Unmarshal (10 samples, 1.23%)</title><rect x="696.5" y="373" width="14.5" height="15.0" fill="rgb(218,171,42)" rx="2" ry="2" />
<text  x="699.52" y="383.5" ></text>
</g>
<g >
<title>crypto/rand.batched.func1 (1 samples, 0.12%)</title><rect x="24.5" y="213" width="1.5" height="15.0" fill="rgb(227,86,47)" rx="2" ry="2" />
<text  x="27.51" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (11 samples, 1.35%)</title><rect x="745.9" y="277" width="15.9" height="15.0" fill="rgb(229,54,21)" rx="2" ry="2" />
<text  x="748.87" y="287.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (1 samples, 0.12%)</title><rect x="41.9" y="181" width="1.5" height="15.0" fill="rgb(245,130,53)" rx="2" ry="2" />
<text  x="44.93" y="191.5" ></text>
</g>
<g >
<title>fmt.newPrinter (1 samples, 0.12%)</title><rect x="788.0" y="341" width="1.4" height="15.0" fill="rgb(215,130,28)" rx="2" ry="2" />
<text  x="790.96" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).freeSpan (1 samples, 0.12%)</title><rect x="1023.1" y="229" width="1.4" height="15.0" fill="rgb(241,54,41)" rx="2" ry="2" />
<text  x="1026.09" y="239.5" ></text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.12%)</title><rect x="875.0" y="341" width="1.5" height="15.0" fill="rgb(242,34,3)" rx="2" ry="2" />
<text  x="878.04" y="351.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteString (1 samples, 0.12%)</title><rect x="692.2" y="277" width="1.4" height="15.0" fill="rgb(244,201,41)" rx="2" ry="2" />
<text  x="695.16" y="287.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (1 samples, 0.12%)</title><rect x="12.9" y="245" width="1.5" height="15.0" fill="rgb(240,53,33)" rx="2" ry="2" />
<text  x="15.90" y="255.5" ></text>
</g>
<g >
<title>runtime.gentraceback (7 samples, 0.86%)</title><rect x="905.5" y="261" width="10.2" height="15.0" fill="rgb(236,15,15)" rx="2" ry="2" />
<text  x="908.52" y="271.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (12 samples, 1.48%)</title><rect x="256.7" y="245" width="17.5" height="15.0" fill="rgb(249,26,6)" rx="2" ry="2" />
<text  x="259.74" y="255.5" ></text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.12%)</title><rect x="999.9" y="325" width="1.4" height="15.0" fill="rgb(246,30,3)" rx="2" ry="2" />
<text  x="1002.86" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.12%)</title><rect x="249.5" y="229" width="1.4" height="15.0" fill="rgb(237,159,48)" rx="2" ry="2" />
<text  x="252.48" y="239.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination (3 samples, 0.37%)</title><rect x="895.4" y="357" width="4.3" height="15.0" fill="rgb(234,99,4)" rx="2" ry="2" />
<text  x="898.36" y="367.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.12%)</title><rect x="185.6" y="181" width="1.5" height="15.0" fill="rgb(216,181,8)" rx="2" ry="2" />
<text  x="188.62" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc.func1 (6 samples, 0.74%)</title><rect x="876.5" y="325" width="8.7" height="15.0" fill="rgb(209,82,16)" rx="2" ry="2" />
<text  x="879.49" y="335.5" ></text>
</g>
<g >
<title>runtime.systemstack (35 samples, 4.31%)</title><rect x="899.7" y="373" width="50.8" height="15.0" fill="rgb(206,49,41)" rx="2" ry="2" />
<text  x="902.72" y="383.5" >runti..</text>
</g>
<g >
<title>runtime.markrootBlock (3 samples, 0.37%)</title><rect x="915.7" y="309" width="4.3" height="15.0" fill="rgb(251,119,5)" rx="2" ry="2" />
<text  x="918.68" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.12%)</title><rect x="182.7" y="181" width="1.5" height="15.0" fill="rgb(209,85,4)" rx="2" ry="2" />
<text  x="185.72" y="191.5" ></text>
</g>
<g >
<title>bytes.makeSlice (1 samples, 0.12%)</title><rect x="242.2" y="213" width="1.5" height="15.0" fill="rgb(223,178,7)" rx="2" ry="2" />
<text  x="245.23" y="223.5" ></text>
</g>
<g >
<title>runtime.acquirep (2 samples, 0.25%)</title><rect x="1021.6" y="309" width="2.9" height="15.0" fill="rgb(235,148,49)" rx="2" ry="2" />
<text  x="1024.64" y="319.5" ></text>
</g>
<g >
<title>math/big.(*Int).Mul (2 samples, 0.25%)</title><rect x="561.5" y="197" width="2.9" height="15.0" fill="rgb(240,164,21)" rx="2" ry="2" />
<text  x="564.54" y="207.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (1 samples, 0.12%)</title><rect x="576.1" y="165" width="1.4" height="15.0" fill="rgb(219,70,48)" rx="2" ry="2" />
<text  x="579.05" y="175.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).handleConn (103 samples, 12.67%)</title><rect x="738.6" y="389" width="149.5" height="15.0" fill="rgb(249,70,28)" rx="2" ry="2" />
<text  x="741.61" y="399.5" >BCDns_0.1/network/s..</text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.25%)</title><rect x="870.7" y="341" width="2.9" height="15.0" fill="rgb(230,119,42)" rx="2" ry="2" />
<text  x="873.69" y="351.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.12%)</title><rect x="577.5" y="197" width="1.5" height="15.0" fill="rgb(232,85,22)" rx="2" ry="2" />
<text  x="580.50" y="207.5" ></text>
</g>
<g >
<title>reflect.copyVal (1 samples, 0.12%)</title><rect x="12.9" y="213" width="1.5" height="15.0" fill="rgb(238,91,2)" rx="2" ry="2" />
<text  x="15.90" y="223.5" ></text>
</g>
<g >
<title>syscall.Syscall (6 samples, 0.74%)</title><rect x="229.2" y="229" width="8.7" height="15.0" fill="rgb(215,152,16)" rx="2" ry="2" />
<text  x="232.16" y="239.5" ></text>
</g>
<g >
<title>sync.(*entry).load (1 samples, 0.12%)</title><rect x="763.3" y="261" width="1.4" height="15.0" fill="rgb(253,207,20)" rx="2" ry="2" />
<text  x="766.28" y="271.5" ></text>
</g>
<g >
<title>internal/syscall/unix.GetRandom (2 samples, 0.25%)</title><rect x="355.4" y="165" width="2.9" height="15.0" fill="rgb(213,56,0)" rx="2" ry="2" />
<text  x="358.44" y="175.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.12%)</title><rect x="207.4" y="149" width="1.4" height="15.0" fill="rgb(205,99,15)" rx="2" ry="2" />
<text  x="210.39" y="159.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.37%)</title><rect x="864.9" y="245" width="4.3" height="15.0" fill="rgb(224,126,25)" rx="2" ry="2" />
<text  x="867.88" y="255.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.12%)</title><rect x="204.5" y="149" width="1.4" height="15.0" fill="rgb(211,94,34)" rx="2" ry="2" />
<text  x="207.49" y="159.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (8 samples, 0.98%)</title><rect x="904.1" y="309" width="11.6" height="15.0" fill="rgb(226,208,49)" rx="2" ry="2" />
<text  x="907.07" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (2 samples, 0.25%)</title><rect x="310.4" y="261" width="2.9" height="15.0" fill="rgb(231,54,38)" rx="2" ry="2" />
<text  x="313.44" y="271.5" ></text>
</g>
<g >
<title>runtime.assertE2I2 (1 samples, 0.12%)</title><rect x="712.5" y="245" width="1.4" height="15.0" fill="rgb(219,176,10)" rx="2" ry="2" />
<text  x="715.48" y="255.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (1 samples, 0.12%)</title><rect x="352.5" y="277" width="1.5" height="15.0" fill="rgb(246,187,23)" rx="2" ry="2" />
<text  x="355.53" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (3 samples, 0.37%)</title><rect x="15.8" y="229" width="4.4" height="15.0" fill="rgb(217,149,32)" rx="2" ry="2" />
<text  x="18.81" y="239.5" ></text>
</g>
<g >
<title>os.(*File).Write (24 samples, 2.95%)</title><rect x="789.4" y="341" width="34.8" height="15.0" fill="rgb(228,140,31)" rx="2" ry="2" />
<text  x="792.41" y="351.5" >os..</text>
</g>
<g >
<title>runtime.reentersyscall (2 samples, 0.25%)</title><rect x="339.5" y="261" width="2.9" height="15.0" fill="rgb(239,180,46)" rx="2" ry="2" />
<text  x="342.47" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.25%)</title><rect x="870.7" y="325" width="2.9" height="15.0" fill="rgb(207,187,16)" rx="2" ry="2" />
<text  x="873.69" y="335.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.12%)</title><rect x="1073.9" y="309" width="1.4" height="15.0" fill="rgb(216,157,21)" rx="2" ry="2" />
<text  x="1076.89" y="319.5" ></text>
</g>
<g >
<title>fmt.Println (25 samples, 3.08%)</title><rect x="788.0" y="373" width="36.2" height="15.0" fill="rgb(211,119,36)" rx="2" ry="2" />
<text  x="790.96" y="383.5" >fmt..</text>
</g>
<g >
<title>crypto/rsa.encrypt (15 samples, 1.85%)</title><rect x="256.7" y="309" width="21.8" height="15.0" fill="rgb(216,196,2)" rx="2" ry="2" />
<text  x="259.74" y="319.5" >c..</text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.12%)</title><rect x="221.9" y="277" width="1.5" height="15.0" fill="rgb(240,151,34)" rx="2" ry="2" />
<text  x="224.91" y="287.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.12%)</title><rect x="875.0" y="309" width="1.5" height="15.0" fill="rgb(252,146,29)" rx="2" ry="2" />
<text  x="878.04" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.UnpackMessage (31 samples, 3.81%)</title><rect x="743.0" y="373" width="45.0" height="15.0" fill="rgb(224,221,3)" rx="2" ry="2" />
<text  x="745.96" y="383.5" >BCDn..</text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.12%)</title><rect x="1055.0" y="373" width="1.5" height="15.0" fill="rgb(237,110,52)" rx="2" ry="2" />
<text  x="1058.02" y="383.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="589.1" y="341" width="1.5" height="15.0" fill="rgb(246,66,19)" rx="2" ry="2" />
<text  x="592.11" y="351.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.12%)</title><rect x="21.6" y="101" width="1.5" height="15.0" fill="rgb(235,229,34)" rx="2" ry="2" />
<text  x="24.61" y="111.5" ></text>
</g>
<g >
<title>runtime.semrelease (1 samples, 0.12%)</title><rect x="790.9" y="245" width="1.4" height="15.0" fill="rgb(251,140,43)" rx="2" ry="2" />
<text  x="793.86" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (1 samples, 0.12%)</title><rect x="10.0" y="197" width="1.5" height="15.0" fill="rgb(249,30,5)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (1 samples, 0.12%)</title><rect x="1023.1" y="277" width="1.4" height="15.0" fill="rgb(249,94,54)" rx="2" ry="2" />
<text  x="1026.09" y="287.5" ></text>
</g>
<g >
<title>reflect.deepValueEqual (2 samples, 0.25%)</title><rect x="250.9" y="309" width="2.9" height="15.0" fill="rgb(241,158,23)" rx="2" ry="2" />
<text  x="253.93" y="319.5" ></text>
</g>
<g >
<title>reflect.Value.SetBytes (1 samples, 0.12%)</title><rect x="284.3" y="229" width="1.5" height="15.0" fill="rgb(232,15,49)" rx="2" ry="2" />
<text  x="287.32" y="239.5" ></text>
</g>
<g >
<title>reflect.Value.Field (1 samples, 0.12%)</title><rect x="287.2" y="261" width="1.5" height="15.0" fill="rgb(244,95,16)" rx="2" ry="2" />
<text  x="290.22" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (12 samples, 1.48%)</title><rect x="745.9" y="293" width="17.4" height="15.0" fill="rgb(218,8,9)" rx="2" ry="2" />
<text  x="748.87" y="303.5" ></text>
</g>
<g >
<title>runtime.scanstack (8 samples, 0.98%)</title><rect x="904.1" y="277" width="11.6" height="15.0" fill="rgb(234,158,38)" rx="2" ry="2" />
<text  x="907.07" y="287.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.12%)</title><rect x="869.2" y="341" width="1.5" height="15.0" fill="rgb(237,221,6)" rx="2" ry="2" />
<text  x="872.24" y="351.5" ></text>
</g>
<g >
<title>encoding/base64.(*Encoding).decodeQuantum (1 samples, 0.12%)</title><rect x="748.8" y="245" width="1.4" height="15.0" fill="rgb(210,223,24)" rx="2" ry="2" />
<text  x="751.77" y="255.5" ></text>
</g>
<g >
<title>math/big.(*Int).SetInt64 (1 samples, 0.12%)</title><rect x="686.4" y="293" width="1.4" height="15.0" fill="rgb(252,209,21)" rx="2" ry="2" />
<text  x="689.36" y="303.5" ></text>
</g>
<g >
<title>internal/syscall/unix.GetRandom (1 samples, 0.12%)</title><rect x="24.5" y="181" width="1.5" height="15.0" fill="rgb(254,214,31)" rx="2" ry="2" />
<text  x="27.51" y="191.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.12%)</title><rect x="1078.2" y="325" width="1.5" height="15.0" fill="rgb(242,22,38)" rx="2" ry="2" />
<text  x="1081.24" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.25%)</title><rect x="870.7" y="357" width="2.9" height="15.0" fill="rgb(253,137,51)" rx="2" ry="2" />
<text  x="873.69" y="367.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.12%)</title><rect x="587.7" y="261" width="1.4" height="15.0" fill="rgb(213,93,26)" rx="2" ry="2" />
<text  x="590.66" y="271.5" ></text>
</g>
<g >
<title>runtime.execute (1 samples, 0.12%)</title><rect x="962.1" y="325" width="1.5" height="15.0" fill="rgb(223,102,23)" rx="2" ry="2" />
<text  x="965.13" y="335.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="191.4" y="149" width="1.5" height="15.0" fill="rgb(213,179,26)" rx="2" ry="2" />
<text  x="194.43" y="159.5" ></text>
</g>
<g >
<title>sort.Slice (1 samples, 0.12%)</title><rect x="352.5" y="261" width="1.5" height="15.0" fill="rgb(234,197,1)" rx="2" ry="2" />
<text  x="355.53" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (1 samples, 0.12%)</title><rect x="249.5" y="261" width="1.4" height="15.0" fill="rgb(236,228,28)" rx="2" ry="2" />
<text  x="252.48" y="271.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (2 samples, 0.25%)</title><rect x="561.5" y="149" width="2.9" height="15.0" fill="rgb(223,12,49)" rx="2" ry="2" />
<text  x="564.54" y="159.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (5 samples, 0.62%)</title><rect x="529.6" y="181" width="7.3" height="15.0" fill="rgb(254,149,7)" rx="2" ry="2" />
<text  x="532.61" y="191.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="737.2" y="341" width="1.4" height="15.0" fill="rgb(231,46,20)" rx="2" ry="2" />
<text  x="740.16" y="351.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.37%)</title><rect x="1049.2" y="325" width="4.4" height="15.0" fill="rgb(210,104,46)" rx="2" ry="2" />
<text  x="1052.21" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="686.4" y="213" width="1.4" height="15.0" fill="rgb(219,158,20)" rx="2" ry="2" />
<text  x="689.36" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (19 samples, 2.34%)</title><rect x="743.0" y="341" width="27.5" height="15.0" fill="rgb(254,16,6)" rx="2" ry="2" />
<text  x="745.96" y="351.5" >e..</text>
</g>
<g >
<title>runtime.(*mspan).sweep (1 samples, 0.12%)</title><rect x="1023.1" y="245" width="1.4" height="15.0" fill="rgb(209,60,22)" rx="2" ry="2" />
<text  x="1026.09" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (2 samples, 0.25%)</title><rect x="896.8" y="181" width="2.9" height="15.0" fill="rgb(241,105,21)" rx="2" ry="2" />
<text  x="899.81" y="191.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.12%)</title><rect x="737.2" y="213" width="1.4" height="15.0" fill="rgb(236,80,11)" rx="2" ry="2" />
<text  x="740.16" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).find (1 samples, 0.12%)</title><rect x="876.5" y="229" width="1.4" height="15.0" fill="rgb(218,2,41)" rx="2" ry="2" />
<text  x="879.49" y="239.5" ></text>
</g>
<g >
<title>runtime.save (1 samples, 0.12%)</title><rect x="860.5" y="245" width="1.5" height="15.0" fill="rgb(220,22,53)" rx="2" ry="2" />
<text  x="863.53" y="255.5" ></text>
</g>
<g >
<title>math/big.basicMul (1 samples, 0.12%)</title><rect x="680.6" y="261" width="1.4" height="15.0" fill="rgb(214,182,14)" rx="2" ry="2" />
<text  x="683.55" y="271.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock (1 samples, 0.12%)</title><rect x="249.5" y="341" width="1.4" height="15.0" fill="rgb(208,26,47)" rx="2" ry="2" />
<text  x="252.48" y="351.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.12%)</title><rect x="1055.0" y="149" width="1.5" height="15.0" fill="rgb(237,9,9)" rx="2" ry="2" />
<text  x="1058.02" y="159.5" ></text>
</g>
<g >
<title>math/big.putNat (1 samples, 0.12%)</title><rect x="34.7" y="181" width="1.4" height="15.0" fill="rgb(222,122,14)" rx="2" ry="2" />
<text  x="37.67" y="191.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (3 samples, 0.37%)</title><rect x="711.0" y="325" width="4.4" height="15.0" fill="rgb(209,41,31)" rx="2" ry="2" />
<text  x="714.03" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.25%)</title><rect x="21.6" y="229" width="2.9" height="15.0" fill="rgb(229,217,16)" rx="2" ry="2" />
<text  x="24.61" y="239.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.12%)</title><rect x="657.3" y="229" width="1.5" height="15.0" fill="rgb(241,75,0)" rx="2" ry="2" />
<text  x="660.33" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (2 samples, 0.25%)</title><rect x="896.8" y="245" width="2.9" height="15.0" fill="rgb(247,49,8)" rx="2" ry="2" />
<text  x="899.81" y="255.5" ></text>
</g>
<g >
<title>runtime.add (1 samples, 0.12%)</title><rect x="223.4" y="261" width="1.4" height="15.0" fill="rgb(220,92,13)" rx="2" ry="2" />
<text  x="226.36" y="271.5" ></text>
</g>
<g >
<title>fmt.Fprintln (9 samples, 1.11%)</title><rect x="715.4" y="357" width="13.1" height="15.0" fill="rgb(244,14,8)" rx="2" ry="2" />
<text  x="718.39" y="367.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.12%)</title><rect x="583.3" y="277" width="1.5" height="15.0" fill="rgb(241,163,2)" rx="2" ry="2" />
<text  x="586.31" y="287.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (1 samples, 0.12%)</title><rect x="12.9" y="197" width="1.5" height="15.0" fill="rgb(217,50,49)" rx="2" ry="2" />
<text  x="15.90" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.12%)</title><rect x="686.4" y="149" width="1.4" height="15.0" fill="rgb(238,83,38)" rx="2" ry="2" />
<text  x="689.36" y="159.5" ></text>
</g>
<g >
<title>math/big.putNat (1 samples, 0.12%)</title><rect x="576.1" y="197" width="1.4" height="15.0" fill="rgb(227,161,53)" rx="2" ry="2" />
<text  x="579.05" y="207.5" ></text>
</g>
<g >
<title>runtime.runqget (1 samples, 0.12%)</title><rect x="954.9" y="325" width="1.4" height="15.0" fill="rgb(237,109,33)" rx="2" ry="2" />
<text  x="957.87" y="335.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (2 samples, 0.25%)</title><rect x="960.7" y="357" width="2.9" height="15.0" fill="rgb(229,130,21)" rx="2" ry="2" />
<text  x="963.68" y="367.5" ></text>
</g>
<g >
<title>runtime.entersyscall_sysmon (2 samples, 0.25%)</title><rect x="862.0" y="229" width="2.9" height="15.0" fill="rgb(210,57,26)" rx="2" ry="2" />
<text  x="864.98" y="239.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.12%)</title><rect x="268.4" y="213" width="1.4" height="15.0" fill="rgb(235,210,15)" rx="2" ry="2" />
<text  x="271.35" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).scavengeLocked (1 samples, 0.12%)</title><rect x="877.9" y="213" width="1.5" height="15.0" fill="rgb(232,122,45)" rx="2" ry="2" />
<text  x="880.95" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="686.4" y="181" width="1.4" height="15.0" fill="rgb(209,53,53)" rx="2" ry="2" />
<text  x="689.36" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.25%)</title><rect x="329.3" y="309" width="2.9" height="15.0" fill="rgb(249,183,48)" rx="2" ry="2" />
<text  x="332.31" y="319.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (1 samples, 0.12%)</title><rect x="904.1" y="229" width="1.4" height="15.0" fill="rgb(245,98,24)" rx="2" ry="2" />
<text  x="907.07" y="239.5" ></text>
</g>
<g >
<title>encoding/json.(*scanner).pushParseState (2 samples, 0.25%)</title><rect x="774.9" y="309" width="2.9" height="15.0" fill="rgb(223,25,52)" rx="2" ry="2" />
<text  x="777.90" y="319.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (59 samples, 7.26%)</title><rect x="441.1" y="197" width="85.6" height="15.0" fill="rgb(224,30,21)" rx="2" ry="2" />
<text  x="444.07" y="207.5" >math/big.a..</text>
</g>
<g >
<title>runtime.notetsleepg (8 samples, 0.98%)</title><rect x="1175.5" y="373" width="11.6" height="15.0" fill="rgb(243,112,11)" rx="2" ry="2" />
<text  x="1178.49" y="383.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.25%)</title><rect x="1175.5" y="341" width="2.9" height="15.0" fill="rgb(219,47,38)" rx="2" ry="2" />
<text  x="1178.49" y="351.5" ></text>
</g>
<g >
<title>sync.(*poolChain).popHead (1 samples, 0.12%)</title><rect x="268.4" y="197" width="1.4" height="15.0" fill="rgb(242,135,26)" rx="2" ry="2" />
<text  x="271.35" y="207.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (1 samples, 0.12%)</title><rect x="348.2" y="197" width="1.4" height="15.0" fill="rgb(245,62,51)" rx="2" ry="2" />
<text  x="351.18" y="207.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (1 samples, 0.12%)</title><rect x="34.7" y="149" width="1.4" height="15.0" fill="rgb(254,34,32)" rx="2" ry="2" />
<text  x="37.67" y="159.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (3 samples, 0.37%)</title><rect x="15.8" y="261" width="4.4" height="15.0" fill="rgb(234,153,54)" rx="2" ry="2" />
<text  x="18.81" y="271.5" ></text>
</g>
<g >
<title>internal/fmtsort.Sort (3 samples, 0.37%)</title><rect x="715.4" y="293" width="4.3" height="15.0" fill="rgb(231,133,8)" rx="2" ry="2" />
<text  x="718.39" y="303.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (2 samples, 0.25%)</title><rect x="242.2" y="277" width="2.9" height="15.0" fill="rgb(250,229,8)" rx="2" ry="2" />
<text  x="245.23" y="287.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (15 samples, 1.85%)</title><rect x="256.7" y="277" width="21.8" height="15.0" fill="rgb(233,114,10)" rx="2" ry="2" />
<text  x="259.74" y="287.5" >m..</text>
</g>
<g >
<title>math/big.(*Int).Add (3 samples, 0.37%)</title><rect x="557.2" y="197" width="4.3" height="15.0" fill="rgb(242,61,20)" rx="2" ry="2" />
<text  x="560.18" y="207.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.12%)</title><rect x="695.1" y="293" width="1.4" height="15.0" fill="rgb(233,182,6)" rx="2" ry="2" />
<text  x="698.07" y="303.5" ></text>
</g>
<g >
<title>runtime.chansend1 (2 samples, 0.25%)</title><rect x="329.3" y="373" width="2.9" height="15.0" fill="rgb(224,153,39)" rx="2" ry="2" />
<text  x="332.31" y="383.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (2 samples, 0.25%)</title><rect x="275.6" y="229" width="2.9" height="15.0" fill="rgb(209,137,27)" rx="2" ry="2" />
<text  x="278.61" y="239.5" ></text>
</g>
<g >
<title>math/big.nat.setWord (1 samples, 0.12%)</title><rect x="541.2" y="213" width="1.5" height="15.0" fill="rgb(207,142,16)" rx="2" ry="2" />
<text  x="544.22" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (5 samples, 0.62%)</title><rect x="281.4" y="309" width="7.3" height="15.0" fill="rgb(252,16,54)" rx="2" ry="2" />
<text  x="284.41" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/utils.SHA256 (2 samples, 0.25%)</title><rect x="687.8" y="341" width="2.9" height="15.0" fill="rgb(226,70,53)" rx="2" ry="2" />
<text  x="690.81" y="351.5" ></text>
</g>
<g >
<title>math/big.(*Int).GCD (13 samples, 1.60%)</title><rect x="191.4" y="229" width="18.9" height="15.0" fill="rgb(214,103,19)" rx="2" ry="2" />
<text  x="194.43" y="239.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.NewProposal (167 samples, 20.54%)</title><rect x="348.2" y="357" width="242.4" height="15.0" fill="rgb(223,182,27)" rx="2" ry="2" />
<text  x="351.18" y="367.5" >BCDns_0.1/messages.NewProposal</text>
</g>
<g >
<title>fmt.Fprintln (1 samples, 0.12%)</title><rect x="735.7" y="357" width="1.5" height="15.0" fill="rgb(220,67,43)" rx="2" ry="2" />
<text  x="738.71" y="367.5" ></text>
</g>
<g >
<title>math/big.lehmerUpdate (6 samples, 0.74%)</title><rect x="557.2" y="213" width="8.7" height="15.0" fill="rgb(247,112,20)" rx="2" ry="2" />
<text  x="560.18" y="223.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Hash (1 samples, 0.12%)</title><rect x="280.0" y="341" width="1.4" height="15.0" fill="rgb(251,162,9)" rx="2" ry="2" />
<text  x="282.96" y="351.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.12%)</title><rect x="1172.6" y="389" width="1.4" height="15.0" fill="rgb(252,152,2)" rx="2" ry="2" />
<text  x="1175.58" y="399.5" ></text>
</g>
<g >
<title>encoding/json.state1 (1 samples, 0.12%)</title><rect x="290.1" y="293" width="1.5" height="15.0" fill="rgb(213,121,24)" rx="2" ry="2" />
<text  x="293.12" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.12%)</title><rect x="313.3" y="293" width="1.5" height="15.0" fill="rgb(226,97,6)" rx="2" ry="2" />
<text  x="316.35" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.12%)</title><rect x="10.0" y="245" width="1.5" height="15.0" fill="rgb(216,12,30)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>encoding/json.intEncoder (1 samples, 0.12%)</title><rect x="693.6" y="277" width="1.5" height="15.0" fill="rgb(209,59,30)" rx="2" ry="2" />
<text  x="696.62" y="287.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Iterator).Next (1 samples, 0.12%)</title><rect x="348.2" y="277" width="1.4" height="15.0" fill="rgb(209,215,30)" rx="2" ry="2" />
<text  x="351.18" y="287.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Proposer).Run (268 samples, 32.96%)</title><rect x="346.7" y="389" width="389.0" height="15.0" fill="rgb(230,33,8)" rx="2" ry="2" />
<text  x="349.73" y="399.5" >BCDns_0.1/consensusMy/service.(*Proposer).Run</text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.25%)</title><rect x="339.5" y="213" width="2.9" height="15.0" fill="rgb(217,39,16)" rx="2" ry="2" />
<text  x="342.47" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.12%)</title><rect x="18.7" y="149" width="1.5" height="15.0" fill="rgb(224,66,9)" rx="2" ry="2" />
<text  x="21.71" y="159.5" ></text>
</g>
<g >
<title>runtime.mallocgc (8 samples, 0.98%)</title><rect x="873.6" y="357" width="11.6" height="15.0" fill="rgb(212,82,11)" rx="2" ry="2" />
<text  x="876.59" y="367.5" ></text>
</g>
<g >
<title>math/big.nat.div (31 samples, 3.81%)</title><rect x="635.6" y="277" width="45.0" height="15.0" fill="rgb(249,123,20)" rx="2" ry="2" />
<text  x="638.56" y="287.5" >math..</text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).ValidateBlock (3 samples, 0.37%)</title><rect x="249.5" y="357" width="4.3" height="15.0" fill="rgb(214,222,48)" rx="2" ry="2" />
<text  x="252.48" y="367.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (1 samples, 0.12%)</title><rect x="580.4" y="197" width="1.5" height="15.0" fill="rgb(215,146,53)" rx="2" ry="2" />
<text  x="583.41" y="207.5" ></text>
</g>
<g >
<title>math/big.basicMul (3 samples, 0.37%)</title><rect x="187.1" y="197" width="4.3" height="15.0" fill="rgb(220,130,44)" rx="2" ry="2" />
<text  x="190.07" y="207.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.12%)</title><rect x="184.2" y="181" width="1.4" height="15.0" fill="rgb(224,25,38)" rx="2" ry="2" />
<text  x="187.17" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="204.5" y="117" width="1.4" height="15.0" fill="rgb(241,28,4)" rx="2" ry="2" />
<text  x="207.49" y="127.5" ></text>
</g>
<g >
<title>runtime.sellock (1 samples, 0.12%)</title><rect x="732.8" y="357" width="1.5" height="15.0" fill="rgb(238,116,29)" rx="2" ry="2" />
<text  x="735.80" y="367.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (1 samples, 0.12%)</title><rect x="737.2" y="357" width="1.4" height="15.0" fill="rgb(241,52,54)" rx="2" ry="2" />
<text  x="740.16" y="367.5" ></text>
</g>
<g >
<title>math/big.nat.mul (1 samples, 0.12%)</title><rect x="208.8" y="165" width="1.5" height="15.0" fill="rgb(251,108,32)" rx="2" ry="2" />
<text  x="211.84" y="175.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (1 samples, 0.12%)</title><rect x="252.4" y="229" width="1.4" height="15.0" fill="rgb(229,158,36)" rx="2" ry="2" />
<text  x="255.39" y="239.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.NewProposalReplyMessage (140 samples, 17.22%)</title><rect x="24.5" y="341" width="203.2" height="15.0" fill="rgb(236,178,13)" rx="2" ry="2" />
<text  x="27.51" y="351.5" >BCDns_0.1/messages.NewProp..</text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.12%)</title><rect x="34.7" y="101" width="1.4" height="15.0" fill="rgb(223,85,6)" rx="2" ry="2" />
<text  x="37.67" y="111.5" ></text>
</g>
<g >
<title>runtime.send (2 samples, 0.25%)</title><rect x="329.3" y="341" width="2.9" height="15.0" fill="rgb(249,100,12)" rx="2" ry="2" />
<text  x="332.31" y="351.5" ></text>
</g>
<g >
<title>runtime.greyobject (6 samples, 0.74%)</title><rect x="940.4" y="309" width="8.7" height="15.0" fill="rgb(226,184,7)" rx="2" ry="2" />
<text  x="943.36" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (3 samples, 0.37%)</title><rect x="15.8" y="165" width="4.4" height="15.0" fill="rgb(240,48,30)" rx="2" ry="2" />
<text  x="18.81" y="175.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (1 samples, 0.12%)</title><rect x="731.4" y="357" width="1.4" height="15.0" fill="rgb(222,131,39)" rx="2" ry="2" />
<text  x="734.35" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="210.3" y="181" width="1.4" height="15.0" fill="rgb(212,14,47)" rx="2" ry="2" />
<text  x="213.30" y="191.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast.func1 (3 samples, 0.37%)</title><rect x="1178.4" y="309" width="4.3" height="15.0" fill="rgb(237,29,7)" rx="2" ry="2" />
<text  x="1181.39" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).string (1 samples, 0.12%)</title><rect x="583.3" y="245" width="1.5" height="15.0" fill="rgb(227,106,17)" rx="2" ry="2" />
<text  x="586.31" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.25%)</title><rect x="785.1" y="325" width="2.9" height="15.0" fill="rgb(210,80,24)" rx="2" ry="2" />
<text  x="788.06" y="335.5" ></text>
</g>
<g >
<title>encoding/json.encodeByteSlice (1 samples, 0.12%)</title><rect x="242.2" y="261" width="1.5" height="15.0" fill="rgb(207,222,43)" rx="2" ry="2" />
<text  x="245.23" y="271.5" ></text>
</g>
<g >
<title>math/big.nat.clear (7 samples, 0.86%)</title><rect x="526.7" y="197" width="10.2" height="15.0" fill="rgb(207,199,24)" rx="2" ry="2" />
<text  x="529.70" y="207.5" ></text>
</g>
<g >
<title>runtime.aeshash64 (1 samples, 0.12%)</title><rect x="702.3" y="245" width="1.5" height="15.0" fill="rgb(229,91,38)" rx="2" ry="2" />
<text  x="705.32" y="255.5" ></text>
</g>
<g >
<title>runtime.memequal (1 samples, 0.12%)</title><rect x="769.1" y="277" width="1.4" height="15.0" fill="rgb(212,142,53)" rx="2" ry="2" />
<text  x="772.09" y="287.5" ></text>
</g>
<g >
<title>crypto/sha256.New (1 samples, 0.12%)</title><rect x="689.3" y="325" width="1.4" height="15.0" fill="rgb(233,116,0)" rx="2" ry="2" />
<text  x="692.26" y="335.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (2 samples, 0.25%)</title><rect x="352.5" y="325" width="2.9" height="15.0" fill="rgb(250,185,34)" rx="2" ry="2" />
<text  x="355.53" y="335.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (1 samples, 0.12%)</title><rect x="304.6" y="245" width="1.5" height="15.0" fill="rgb(243,30,3)" rx="2" ry="2" />
<text  x="307.64" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (3 samples, 0.37%)</title><rect x="15.8" y="245" width="4.4" height="15.0" fill="rgb(209,102,53)" rx="2" ry="2" />
<text  x="18.81" y="255.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.12%)</title><rect x="1023.1" y="149" width="1.4" height="15.0" fill="rgb(238,141,27)" rx="2" ry="2" />
<text  x="1026.09" y="159.5" ></text>
</g>
<g >
<title>syscall.Read (27 samples, 3.32%)</title><rect x="825.7" y="325" width="39.2" height="15.0" fill="rgb(221,80,50)" rx="2" ry="2" />
<text  x="828.69" y="335.5" >sys..</text>
</g>
<g >
<title>runtime.stopm (21 samples, 2.58%)</title><rect x="1018.7" y="325" width="30.5" height="15.0" fill="rgb(228,213,12)" rx="2" ry="2" />
<text  x="1021.73" y="335.5" >ru..</text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.37%)</title><rect x="1178.4" y="325" width="4.3" height="15.0" fill="rgb(235,27,30)" rx="2" ry="2" />
<text  x="1181.39" y="335.5" ></text>
</g>
<g >
<title>crypto/rand.batched.func1 (2 samples, 0.25%)</title><rect x="355.4" y="197" width="2.9" height="15.0" fill="rgb(253,134,30)" rx="2" ry="2" />
<text  x="358.44" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*BlockConfirmMessage).Verify (2 samples, 0.25%)</title><rect x="295.9" y="373" width="2.9" height="15.0" fill="rgb(221,79,35)" rx="2" ry="2" />
<text  x="298.93" y="383.5" ></text>
</g>
<g >
<title>net.(*conn).Read (28 samples, 3.44%)</title><rect x="824.2" y="373" width="40.7" height="15.0" fill="rgb(229,80,53)" rx="2" ry="2" />
<text  x="827.24" y="383.5" >net..</text>
</g>
<g >
<title>encoding/json.indirect (3 samples, 0.37%)</title><rect x="696.5" y="277" width="4.4" height="15.0" fill="rgb(237,137,40)" rx="2" ry="2" />
<text  x="699.52" y="287.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.12%)</title><rect x="686.4" y="133" width="1.4" height="15.0" fill="rgb(209,41,53)" rx="2" ry="2" />
<text  x="689.36" y="143.5" ></text>
</g>
<g >
<title>reflect.Value.Elem (1 samples, 0.12%)</title><rect x="584.8" y="229" width="1.4" height="15.0" fill="rgb(210,214,27)" rx="2" ry="2" />
<text  x="587.76" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="290.1" y="245" width="1.5" height="15.0" fill="rgb(222,204,53)" rx="2" ry="2" />
<text  x="293.12" y="255.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (11 samples, 1.35%)</title><rect x="565.9" y="261" width="16.0" height="15.0" fill="rgb(228,221,49)" rx="2" ry="2" />
<text  x="568.89" y="271.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.12%)</title><rect x="364.1" y="181" width="1.5" height="15.0" fill="rgb(237,58,48)" rx="2" ry="2" />
<text  x="367.15" y="191.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.12%)</title><rect x="869.2" y="325" width="1.5" height="15.0" fill="rgb(235,51,41)" rx="2" ry="2" />
<text  x="872.24" y="335.5" ></text>
</g>
<g >
<title>runtime.gcTrigger.test (1 samples, 0.12%)</title><rect x="785.1" y="309" width="1.4" height="15.0" fill="rgb(206,1,23)" rx="2" ry="2" />
<text  x="788.06" y="319.5" ></text>
</g>
<g >
<title>runtime.scanobject (21 samples, 2.58%)</title><rect x="920.0" y="325" width="30.5" height="15.0" fill="rgb(234,101,29)" rx="2" ry="2" />
<text  x="923.04" y="335.5" >ru..</text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.12%)</title><rect x="917.1" y="261" width="1.5" height="15.0" fill="rgb(233,96,47)" rx="2" ry="2" />
<text  x="920.13" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (2 samples, 0.25%)</title><rect x="896.8" y="165" width="2.9" height="15.0" fill="rgb(214,110,20)" rx="2" ry="2" />
<text  x="899.81" y="175.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.25%)</title><rect x="339.5" y="197" width="2.9" height="15.0" fill="rgb(254,166,21)" rx="2" ry="2" />
<text  x="342.47" y="207.5" ></text>
</g>
<g >
<title>crypto/rand.getRandomBatch (2 samples, 0.25%)</title><rect x="355.4" y="181" width="2.9" height="15.0" fill="rgb(238,68,54)" rx="2" ry="2" />
<text  x="358.44" y="191.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (11 samples, 1.35%)</title><rect x="565.9" y="245" width="16.0" height="15.0" fill="rgb(213,65,26)" rx="2" ry="2" />
<text  x="568.89" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (4 samples, 0.49%)</title><rect x="696.5" y="309" width="5.8" height="15.0" fill="rgb(250,206,54)" rx="2" ry="2" />
<text  x="699.52" y="319.5" ></text>
</g>
<g >
<title>encoding/base64.assemble64 (1 samples, 0.12%)</title><rect x="303.2" y="261" width="1.4" height="15.0" fill="rgb(241,159,33)" rx="2" ry="2" />
<text  x="306.19" y="271.5" ></text>
</g>
<g >
<title>reflect.valueInterface (1 samples, 0.12%)</title><rect x="713.9" y="245" width="1.5" height="15.0" fill="rgb(246,217,52)" rx="2" ry="2" />
<text  x="716.94" y="255.5" ></text>
</g>
<g >
<title>memeqbody (1 samples, 0.12%)</title><rect x="314.8" y="293" width="1.4" height="15.0" fill="rgb(212,135,52)" rx="2" ry="2" />
<text  x="317.80" y="303.5" ></text>
</g>
<g >
<title>net.(*conn).Read (5 samples, 0.62%)</title><rect x="335.1" y="373" width="7.3" height="15.0" fill="rgb(250,4,44)" rx="2" ry="2" />
<text  x="338.12" y="383.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (3 samples, 0.37%)</title><rect x="291.6" y="293" width="4.3" height="15.0" fill="rgb(227,203,48)" rx="2" ry="2" />
<text  x="294.57" y="303.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (2 samples, 0.25%)</title><rect x="579.0" y="229" width="2.9" height="15.0" fill="rgb(215,128,15)" rx="2" ry="2" />
<text  x="581.95" y="239.5" ></text>
</g>
<g >
<title>runtime.mstart1 (80 samples, 9.84%)</title><rect x="1056.5" y="373" width="116.1" height="15.0" fill="rgb(229,8,24)" rx="2" ry="2" />
<text  x="1059.47" y="383.5" >runtime.mstart1</text>
</g>
<g >
<title>reflect.Value.Field (1 samples, 0.12%)</title><rect x="625.4" y="277" width="1.5" height="15.0" fill="rgb(252,13,15)" rx="2" ry="2" />
<text  x="628.40" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).coalesce.func1 (1 samples, 0.12%)</title><rect x="892.5" y="261" width="1.4" height="15.0" fill="rgb(212,167,16)" rx="2" ry="2" />
<text  x="895.46" y="271.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="182.7" y="165" width="1.5" height="15.0" fill="rgb(218,179,42)" rx="2" ry="2" />
<text  x="185.72" y="175.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Leader).generateBlock (4 samples, 0.49%)</title><rect x="10.0" y="373" width="5.8" height="15.0" fill="rgb(230,187,23)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>encoding/json.stateBeginStringOrEmpty (1 samples, 0.12%)</title><rect x="309.0" y="261" width="1.4" height="15.0" fill="rgb(240,178,8)" rx="2" ry="2" />
<text  x="311.99" y="271.5" ></text>
</g>
<g >
<title>runtime.chansend (4 samples, 0.49%)</title><rect x="864.9" y="357" width="5.8" height="15.0" fill="rgb(254,211,35)" rx="2" ry="2" />
<text  x="867.88" y="367.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (1 samples, 0.12%)</title><rect x="690.7" y="341" width="1.5" height="15.0" fill="rgb(230,73,50)" rx="2" ry="2" />
<text  x="693.71" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).AddBlock (4 samples, 0.49%)</title><rect x="15.8" y="357" width="5.8" height="15.0" fill="rgb(212,27,17)" rx="2" ry="2" />
<text  x="18.81" y="367.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalReplyMessage).Hash (6 samples, 0.74%)</title><rect x="687.8" y="357" width="8.7" height="15.0" fill="rgb(250,104,0)" rx="2" ry="2" />
<text  x="690.81" y="367.5" ></text>
</g>
<g >
<title>runtime.schedule (7 samples, 0.86%)</title><rect x="950.5" y="357" width="10.2" height="15.0" fill="rgb(237,202,1)" rx="2" ry="2" />
<text  x="953.52" y="367.5" ></text>
</g>
<g >
<title>time.Sleep (2 samples, 0.25%)</title><rect x="246.6" y="341" width="2.9" height="15.0" fill="rgb(230,154,28)" rx="2" ry="2" />
<text  x="249.58" y="351.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock (2 samples, 0.25%)</title><rect x="21.6" y="357" width="2.9" height="15.0" fill="rgb(228,201,29)" rx="2" ry="2" />
<text  x="24.61" y="367.5" ></text>
</g>
<g >
<title>encoding/json.cachedTypeFields (1 samples, 0.12%)</title><rect x="763.3" y="293" width="1.4" height="15.0" fill="rgb(249,184,1)" rx="2" ry="2" />
<text  x="766.28" y="303.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).acquireSnapshot (1 samples, 0.12%)</title><rect x="349.6" y="277" width="1.5" height="15.0" fill="rgb(246,195,9)" rx="2" ry="2" />
<text  x="352.63" y="287.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="204.5" y="133" width="1.4" height="15.0" fill="rgb(252,136,7)" rx="2" ry="2" />
<text  x="207.49" y="143.5" ></text>
</g>
<g >
<title>crypto/internal/randutil.MaybeReadByte (2 samples, 0.25%)</title><rect x="24.5" y="245" width="2.9" height="15.0" fill="rgb(209,1,31)" rx="2" ry="2" />
<text  x="27.51" y="255.5" ></text>
</g>
<g >
<title>crypto/rand.Int (2 samples, 0.25%)</title><rect x="355.4" y="261" width="2.9" height="15.0" fill="rgb(208,177,4)" rx="2" ry="2" />
<text  x="358.44" y="271.5" ></text>
</g>
<g >
<title>syscall.Read (5 samples, 0.62%)</title><rect x="335.1" y="325" width="7.3" height="15.0" fill="rgb(210,49,50)" rx="2" ry="2" />
<text  x="338.12" y="335.5" ></text>
</g>
<g >
<title>runtime.entersyscall (2 samples, 0.25%)</title><rect x="339.5" y="277" width="2.9" height="15.0" fill="rgb(214,94,30)" rx="2" ry="2" />
<text  x="342.47" y="287.5" ></text>
</g>
<g >
<title>runtime.send (3 samples, 0.37%)</title><rect x="342.4" y="341" width="4.3" height="15.0" fill="rgb(237,143,27)" rx="2" ry="2" />
<text  x="345.37" y="351.5" ></text>
</g>
<g >
<title>runtime.resetspinning (3 samples, 0.37%)</title><rect x="1049.2" y="341" width="4.4" height="15.0" fill="rgb(218,122,35)" rx="2" ry="2" />
<text  x="1052.21" y="351.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.12%)</title><rect x="34.7" y="53" width="1.4" height="15.0" fill="rgb(209,204,14)" rx="2" ry="2" />
<text  x="37.67" y="63.5" ></text>
</g>
<g >
<title>encoding/json.ptrEncoder.encode (1 samples, 0.12%)</title><rect x="625.4" y="309" width="1.5" height="15.0" fill="rgb(205,117,33)" rx="2" ry="2" />
<text  x="628.40" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (3 samples, 0.37%)</title><rect x="187.1" y="213" width="4.3" height="15.0" fill="rgb(236,202,25)" rx="2" ry="2" />
<text  x="190.07" y="223.5" ></text>
</g>
<g >
<title>runtime.heapBits.initSpan (1 samples, 0.12%)</title><rect x="872.1" y="277" width="1.5" height="15.0" fill="rgb(218,39,47)" rx="2" ry="2" />
<text  x="875.14" y="287.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (4 samples, 0.49%)</title><rect x="661.7" y="245" width="5.8" height="15.0" fill="rgb(211,24,33)" rx="2" ry="2" />
<text  x="664.69" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).freeSpan (2 samples, 0.25%)</title><rect x="896.8" y="213" width="2.9" height="15.0" fill="rgb(227,139,49)" rx="2" ry="2" />
<text  x="899.81" y="223.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.12%)</title><rect x="621.0" y="277" width="1.5" height="15.0" fill="rgb(254,78,8)" rx="2" ry="2" />
<text  x="624.05" y="287.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.12%)</title><rect x="239.3" y="277" width="1.5" height="15.0" fill="rgb(206,183,18)" rx="2" ry="2" />
<text  x="242.32" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (2 samples, 0.25%)</title><rect x="891.0" y="309" width="2.9" height="15.0" fill="rgb(206,176,54)" rx="2" ry="2" />
<text  x="894.01" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.12%)</title><rect x="21.6" y="117" width="1.5" height="15.0" fill="rgb(223,31,34)" rx="2" ry="2" />
<text  x="24.61" y="127.5" ></text>
</g>
<g >
<title>encoding/json.(*scanner).reset (1 samples, 0.12%)</title><rect x="319.2" y="341" width="1.4" height="15.0" fill="rgb(215,229,1)" rx="2" ry="2" />
<text  x="322.15" y="351.5" ></text>
</g>
<g >
<title>runtime.chansend (2 samples, 0.25%)</title><rect x="329.3" y="357" width="2.9" height="15.0" fill="rgb(209,131,19)" rx="2" ry="2" />
<text  x="332.31" y="367.5" ></text>
</g>
<g >
<title>reflect.Value.Elem (1 samples, 0.12%)</title><rect x="15.8" y="117" width="1.5" height="15.0" fill="rgb(218,20,45)" rx="2" ry="2" />
<text  x="18.81" y="127.5" ></text>
</g>
<g >
<title>reflect.Value.assignTo (1 samples, 0.12%)</title><rect x="280.0" y="245" width="1.4" height="15.0" fill="rgb(250,158,27)" rx="2" ry="2" />
<text  x="282.96" y="255.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.PackMessage (4 samples, 0.49%)</title><rect x="619.6" y="341" width="5.8" height="15.0" fill="rgb(243,129,4)" rx="2" ry="2" />
<text  x="622.59" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="12.9" y="181" width="1.5" height="15.0" fill="rgb(220,83,51)" rx="2" ry="2" />
<text  x="15.90" y="191.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.12%)</title><rect x="695.1" y="309" width="1.4" height="15.0" fill="rgb(234,80,9)" rx="2" ry="2" />
<text  x="698.07" y="319.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (10 samples, 1.23%)</title><rect x="281.4" y="325" width="14.5" height="15.0" fill="rgb(246,78,54)" rx="2" ry="2" />
<text  x="284.41" y="335.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.12%)</title><rect x="14.4" y="261" width="1.4" height="15.0" fill="rgb(235,193,27)" rx="2" ry="2" />
<text  x="17.35" y="271.5" ></text>
</g>
<g >
<title>reflect.Value.MapIndex (1 samples, 0.12%)</title><rect x="12.9" y="229" width="1.5" height="15.0" fill="rgb(229,67,2)" rx="2" ry="2" />
<text  x="15.90" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.12%)</title><rect x="290.1" y="213" width="1.5" height="15.0" fill="rgb(234,0,49)" rx="2" ry="2" />
<text  x="293.12" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.12%)</title><rect x="1023.1" y="293" width="1.4" height="15.0" fill="rgb(215,199,53)" rx="2" ry="2" />
<text  x="1026.09" y="303.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.12%)</title><rect x="24.5" y="165" width="1.5" height="15.0" fill="rgb(239,172,29)" rx="2" ry="2" />
<text  x="27.51" y="175.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.12%)</title><rect x="1055.0" y="341" width="1.5" height="15.0" fill="rgb(205,106,16)" rx="2" ry="2" />
<text  x="1058.02" y="351.5" ></text>
</g>
<g >
<title>fmt.Fprintln (25 samples, 3.08%)</title><rect x="788.0" y="357" width="36.2" height="15.0" fill="rgb(224,113,6)" rx="2" ry="2" />
<text  x="790.96" y="367.5" >fmt..</text>
</g>
<g >
<title>runtime.readvarint (1 samples, 0.12%)</title><rect x="914.2" y="149" width="1.5" height="15.0" fill="rgb(223,92,22)" rx="2" ry="2" />
<text  x="917.23" y="159.5" ></text>
</g>
<g >
<title>math/big.(*Int).ModInverse (13 samples, 1.60%)</title><rect x="191.4" y="245" width="18.9" height="15.0" fill="rgb(211,214,2)" rx="2" ry="2" />
<text  x="194.43" y="255.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Proposer).handleOrder (197 samples, 24.23%)</title><rect x="348.2" y="373" width="285.9" height="15.0" fill="rgb(209,162,15)" rx="2" ry="2" />
<text  x="351.18" y="383.5" >BCDns_0.1/consensusMy/service.(*Propos..</text>
</g>
<g >
<title>encoding/json.(*decodeState).array (1 samples, 0.12%)</title><rect x="249.5" y="197" width="1.4" height="15.0" fill="rgb(242,175,25)" rx="2" ry="2" />
<text  x="252.48" y="207.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.12%)</title><rect x="354.0" y="309" width="1.4" height="15.0" fill="rgb(208,62,30)" rx="2" ry="2" />
<text  x="356.99" y="319.5" ></text>
</g>
<g >
<title>math/big.getNat (1 samples, 0.12%)</title><rect x="657.3" y="245" width="1.5" height="15.0" fill="rgb(207,3,50)" rx="2" ry="2" />
<text  x="660.33" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.12%)</title><rect x="352.5" y="309" width="1.5" height="15.0" fill="rgb(231,186,5)" rx="2" ry="2" />
<text  x="355.53" y="319.5" ></text>
</g>
<g >
<title>runtime.findrunnable (55 samples, 6.77%)</title><rect x="969.4" y="341" width="79.8" height="15.0" fill="rgb(216,190,19)" rx="2" ry="2" />
<text  x="972.38" y="351.5" >runtime.f..</text>
</g>
<g >
<title>syscall.write (19 samples, 2.34%)</title><rect x="592.0" y="261" width="27.6" height="15.0" fill="rgb(225,21,49)" rx="2" ry="2" />
<text  x="595.02" y="271.5" >s..</text>
</g>
<g >
<title>encoding/json.(*decodeState).value (10 samples, 1.23%)</title><rect x="300.3" y="309" width="14.5" height="15.0" fill="rgb(248,213,22)" rx="2" ry="2" />
<text  x="303.28" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (3 samples, 0.37%)</title><rect x="15.8" y="181" width="4.4" height="15.0" fill="rgb(235,72,22)" rx="2" ry="2" />
<text  x="18.81" y="191.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneNameByIndex (1 samples, 0.12%)</title><rect x="348.2" y="309" width="1.4" height="15.0" fill="rgb(209,218,40)" rx="2" ry="2" />
<text  x="351.18" y="319.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.12%)</title><rect x="763.3" y="277" width="1.4" height="15.0" fill="rgb(236,131,4)" rx="2" ry="2" />
<text  x="766.28" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.12%)</title><rect x="686.4" y="197" width="1.4" height="15.0" fill="rgb(222,168,11)" rx="2" ry="2" />
<text  x="689.36" y="207.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.12%)</title><rect x="15.8" y="133" width="1.5" height="15.0" fill="rgb(230,118,38)" rx="2" ry="2" />
<text  x="18.81" y="143.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.12%)</title><rect x="365.6" y="197" width="1.4" height="15.0" fill="rgb(208,130,54)" rx="2" ry="2" />
<text  x="368.60" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/utils.BytesToInt (2 samples, 0.25%)</title><rect x="738.6" y="357" width="2.9" height="15.0" fill="rgb(207,189,45)" rx="2" ry="2" />
<text  x="741.61" y="367.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.12%)</title><rect x="242.2" y="197" width="1.5" height="15.0" fill="rgb(216,195,38)" rx="2" ry="2" />
<text  x="245.23" y="207.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.25%)</title><rect x="329.3" y="245" width="2.9" height="15.0" fill="rgb(216,83,47)" rx="2" ry="2" />
<text  x="332.31" y="255.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.12%)</title><rect x="735.7" y="261" width="1.5" height="15.0" fill="rgb(236,129,8)" rx="2" ry="2" />
<text  x="738.71" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.12%)</title><rect x="621.0" y="293" width="1.5" height="15.0" fill="rgb(206,175,12)" rx="2" ry="2" />
<text  x="624.05" y="303.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.12%)</title><rect x="1055.0" y="293" width="1.5" height="15.0" fill="rgb(248,68,14)" rx="2" ry="2" />
<text  x="1058.02" y="303.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (3 samples, 0.37%)</title><rect x="240.8" y="341" width="4.3" height="15.0" fill="rgb(219,147,20)" rx="2" ry="2" />
<text  x="243.77" y="351.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (3 samples, 0.37%)</title><rect x="325.0" y="341" width="4.3" height="15.0" fill="rgb(231,78,43)" rx="2" ry="2" />
<text  x="327.96" y="351.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwunlock (1 samples, 0.12%)</title><rect x="790.9" y="277" width="1.4" height="15.0" fill="rgb(251,60,15)" rx="2" ry="2" />
<text  x="793.86" y="287.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.12%)</title><rect x="354.0" y="293" width="1.4" height="15.0" fill="rgb(233,167,50)" rx="2" ry="2" />
<text  x="356.99" y="303.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.12%)</title><rect x="875.0" y="325" width="1.5" height="15.0" fill="rgb(218,27,48)" rx="2" ry="2" />
<text  x="878.04" y="335.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Sum (1 samples, 0.12%)</title><rect x="220.5" y="277" width="1.4" height="15.0" fill="rgb(213,70,42)" rx="2" ry="2" />
<text  x="223.46" y="287.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.12%)</title><rect x="734.3" y="373" width="1.4" height="15.0" fill="rgb(233,222,6)" rx="2" ry="2" />
<text  x="737.26" y="383.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (1 samples, 0.12%)</title><rect x="300.3" y="293" width="1.4" height="15.0" fill="rgb(216,148,31)" rx="2" ry="2" />
<text  x="303.28" y="303.5" ></text>
</g>
<g >
<title>fmt.Printf (3 samples, 0.37%)</title><rect x="711.0" y="373" width="4.4" height="15.0" fill="rgb(243,144,29)" rx="2" ry="2" />
<text  x="714.03" y="383.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (4 samples, 0.49%)</title><rect x="15.8" y="309" width="5.8" height="15.0" fill="rgb(252,153,34)" rx="2" ry="2" />
<text  x="18.81" y="319.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.12%)</title><rect x="237.9" y="181" width="1.4" height="15.0" fill="rgb(236,151,31)" rx="2" ry="2" />
<text  x="240.87" y="191.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.12%)</title><rect x="541.2" y="197" width="1.5" height="15.0" fill="rgb(227,227,40)" rx="2" ry="2" />
<text  x="544.22" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (2 samples, 0.25%)</title><rect x="21.6" y="309" width="2.9" height="15.0" fill="rgb(238,44,45)" rx="2" ry="2" />
<text  x="24.61" y="319.5" ></text>
</g>
<g >
<title>encoding/json.newEncodeState (1 samples, 0.12%)</title><rect x="695.1" y="325" width="1.4" height="15.0" fill="rgb(247,31,18)" rx="2" ry="2" />
<text  x="698.07" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.12%)</title><rect x="1055.0" y="261" width="1.5" height="15.0" fill="rgb(243,52,19)" rx="2" ry="2" />
<text  x="1058.02" y="271.5" ></text>
</g>
<g >
<title>encoding/json.unquoteBytes (1 samples, 0.12%)</title><rect x="306.1" y="277" width="1.4" height="15.0" fill="rgb(215,80,3)" rx="2" ry="2" />
<text  x="309.09" y="287.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.12%)</title><rect x="623.9" y="325" width="1.5" height="15.0" fill="rgb(223,121,41)" rx="2" ry="2" />
<text  x="626.95" y="335.5" ></text>
</g>
<g >
<title>runtime._System (2 samples, 0.25%)</title><rect x="888.1" y="389" width="2.9" height="15.0" fill="rgb(221,174,49)" rx="2" ry="2" />
<text  x="891.11" y="399.5" ></text>
</g>
<g >
<title>crypto/rand.(*devReader).Read (1 samples, 0.12%)</title><rect x="24.5" y="229" width="1.5" height="15.0" fill="rgb(231,11,17)" rx="2" ry="2" />
<text  x="27.51" y="239.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.12%)</title><rect x="1055.0" y="277" width="1.5" height="15.0" fill="rgb(228,186,47)" rx="2" ry="2" />
<text  x="1058.02" y="287.5" ></text>
</g>
<g >
<title>math/big.nat.set (1 samples, 0.12%)</title><rect x="191.4" y="181" width="1.5" height="15.0" fill="rgb(211,160,19)" rx="2" ry="2" />
<text  x="194.43" y="191.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.12%)</title><rect x="703.8" y="261" width="1.4" height="15.0" fill="rgb(206,214,26)" rx="2" ry="2" />
<text  x="706.78" y="271.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.12%)</title><rect x="226.3" y="325" width="1.4" height="15.0" fill="rgb(250,137,18)" rx="2" ry="2" />
<text  x="229.26" y="335.5" ></text>
</g>
<g >
<title>math/big.nat.div (1 samples, 0.12%)</title><rect x="41.9" y="197" width="1.5" height="15.0" fill="rgb(232,211,32)" rx="2" ry="2" />
<text  x="44.93" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).ExecuteBlock (161 samples, 19.80%)</title><rect x="15.8" y="373" width="233.7" height="15.0" fill="rgb(218,203,14)" rx="2" ry="2" />
<text  x="18.81" y="383.5" >BCDns_0.1/consensusMy/service.(..</text>
</g>
<g >
<title>math/big.(*Int).Cmp (1 samples, 0.12%)</title><rect x="27.4" y="245" width="1.5" height="15.0" fill="rgb(240,47,47)" rx="2" ry="2" />
<text  x="30.42" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (3 samples, 0.37%)</title><rect x="309.0" y="293" width="4.3" height="15.0" fill="rgb(228,228,19)" rx="2" ry="2" />
<text  x="311.99" y="303.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (5 samples, 0.62%)</title><rect x="721.2" y="309" width="7.3" height="15.0" fill="rgb(245,134,39)" rx="2" ry="2" />
<text  x="724.19" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.12%)</title><rect x="249.5" y="165" width="1.4" height="15.0" fill="rgb(248,159,51)" rx="2" ry="2" />
<text  x="252.48" y="175.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (1 samples, 0.12%)</title><rect x="895.4" y="325" width="1.4" height="15.0" fill="rgb(232,177,13)" rx="2" ry="2" />
<text  x="898.36" y="335.5" ></text>
</g>
<g >
<title>runtime.selectgo (1 samples, 0.12%)</title><rect x="26.0" y="229" width="1.4" height="15.0" fill="rgb(209,168,40)" rx="2" ry="2" />
<text  x="28.97" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.49%)</title><rect x="628.3" y="341" width="5.8" height="15.0" fill="rgb(226,19,47)" rx="2" ry="2" />
<text  x="631.30" y="351.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.25%)</title><rect x="957.8" y="277" width="2.9" height="15.0" fill="rgb(209,60,42)" rx="2" ry="2" />
<text  x="960.77" y="287.5" ></text>
</g>
<g >
<title>crypto/rsa.VerifyPKCS1v15 (15 samples, 1.85%)</title><rect x="256.7" y="325" width="21.8" height="15.0" fill="rgb(240,69,24)" rx="2" ry="2" />
<text  x="259.74" y="335.5" >c..</text>
</g>
<g >
<title>math/big.getNat (1 samples, 0.12%)</title><rect x="268.4" y="229" width="1.4" height="15.0" fill="rgb(247,120,39)" rx="2" ry="2" />
<text  x="271.35" y="239.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.25%)</title><rect x="329.3" y="213" width="2.9" height="15.0" fill="rgb(244,39,34)" rx="2" ry="2" />
<text  x="332.31" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.12%)</title><rect x="895.4" y="277" width="1.4" height="15.0" fill="rgb(242,72,35)" rx="2" ry="2" />
<text  x="898.36" y="287.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (3 samples, 0.37%)</title><rect x="864.9" y="293" width="4.3" height="15.0" fill="rgb(243,153,49)" rx="2" ry="2" />
<text  x="867.88" y="303.5" ></text>
</g>
<g >
<title>math/big.nat.expNNMontgomery (102 samples, 12.55%)</title><rect x="39.0" y="213" width="148.1" height="15.0" fill="rgb(213,97,31)" rx="2" ry="2" />
<text  x="42.03" y="223.5" >math/big.nat.expNN..</text>
</g>
<g >
<title>runtime.bgsweep (3 samples, 0.37%)</title><rect x="891.0" y="389" width="4.4" height="15.0" fill="rgb(242,48,34)" rx="2" ry="2" />
<text  x="894.01" y="399.5" ></text>
</g>
<g >
<title>math/big.nat.div (3 samples, 0.37%)</title><rect x="545.6" y="229" width="4.3" height="15.0" fill="rgb(249,183,48)" rx="2" ry="2" />
<text  x="548.57" y="239.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.12%)</title><rect x="914.2" y="165" width="1.5" height="15.0" fill="rgb(210,177,23)" rx="2" ry="2" />
<text  x="917.23" y="175.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 0.37%)</title><rect x="1049.2" y="261" width="4.4" height="15.0" fill="rgb(206,112,20)" rx="2" ry="2" />
<text  x="1052.21" y="271.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (1 samples, 0.12%)</title><rect x="33.2" y="181" width="1.5" height="15.0" fill="rgb(243,40,45)" rx="2" ry="2" />
<text  x="36.22" y="191.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.12%)</title><rect x="10.0" y="181" width="1.5" height="15.0" fill="rgb(235,217,21)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>runtime.pcvalue (3 samples, 0.37%)</title><rect x="911.3" y="181" width="4.4" height="15.0" fill="rgb(218,64,26)" rx="2" ry="2" />
<text  x="914.33" y="191.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (1 samples, 0.12%)</title><rect x="348.2" y="229" width="1.4" height="15.0" fill="rgb(216,129,50)" rx="2" ry="2" />
<text  x="351.18" y="239.5" ></text>
</g>
<g >
<title>reflect.Value.Field (1 samples, 0.12%)</title><rect x="764.7" y="293" width="1.5" height="15.0" fill="rgb(244,176,45)" rx="2" ry="2" />
<text  x="767.74" y="303.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (1 samples, 0.12%)</title><rect x="295.9" y="213" width="1.5" height="15.0" fill="rgb(214,170,52)" rx="2" ry="2" />
<text  x="298.93" y="223.5" ></text>
</g>
<g >
<title>math/big.shlVU (2 samples, 0.25%)</title><rect x="271.3" y="229" width="2.9" height="15.0" fill="rgb(241,43,8)" rx="2" ry="2" />
<text  x="274.25" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (2 samples, 0.25%)</title><rect x="870.7" y="293" width="2.9" height="15.0" fill="rgb(217,58,40)" rx="2" ry="2" />
<text  x="873.69" y="303.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (1 samples, 0.12%)</title><rect x="348.2" y="181" width="1.4" height="15.0" fill="rgb(216,171,41)" rx="2" ry="2" />
<text  x="351.18" y="191.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.12%)</title><rect x="870.7" y="261" width="1.4" height="15.0" fill="rgb(207,63,6)" rx="2" ry="2" />
<text  x="873.69" y="271.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (1 samples, 0.12%)</title><rect x="219.0" y="181" width="1.5" height="15.0" fill="rgb(220,170,36)" rx="2" ry="2" />
<text  x="222.00" y="191.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (2 samples, 0.25%)</title><rect x="692.2" y="309" width="2.9" height="15.0" fill="rgb(205,2,9)" rx="2" ry="2" />
<text  x="695.16" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (2 samples, 0.25%)</title><rect x="584.8" y="309" width="2.9" height="15.0" fill="rgb(247,227,44)" rx="2" ry="2" />
<text  x="587.76" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (19 samples, 2.34%)</title><rect x="743.0" y="309" width="27.5" height="15.0" fill="rgb(205,159,44)" rx="2" ry="2" />
<text  x="745.96" y="319.5" >e..</text>
</g>
<g >
<title>runtime.notesleep (16 samples, 1.97%)</title><rect x="1026.0" y="309" width="23.2" height="15.0" fill="rgb(210,103,49)" rx="2" ry="2" />
<text  x="1028.99" y="319.5" >r..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="349.6" y="245" width="1.5" height="15.0" fill="rgb(222,56,13)" rx="2" ry="2" />
<text  x="352.63" y="255.5" ></text>
</g>
<g >
<title>encoding/json.mapEncoder.encode (1 samples, 0.12%)</title><rect x="280.0" y="277" width="1.4" height="15.0" fill="rgb(221,151,11)" rx="2" ry="2" />
<text  x="282.96" y="287.5" ></text>
</g>
<g >
<title>math/big.(*Int).Mul (1 samples, 0.12%)</title><rect x="210.3" y="245" width="1.4" height="15.0" fill="rgb(211,109,1)" rx="2" ry="2" />
<text  x="213.30" y="255.5" ></text>
</g>
<g >
<title>bytes.NewBuffer (1 samples, 0.12%)</title><rect x="738.6" y="341" width="1.5" height="15.0" fill="rgb(235,154,11)" rx="2" ry="2" />
<text  x="741.61" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="34.7" y="117" width="1.4" height="15.0" fill="rgb(249,184,2)" rx="2" ry="2" />
<text  x="37.67" y="127.5" ></text>
</g>
<g >
<title>runtime.chansend (3 samples, 0.37%)</title><rect x="342.4" y="357" width="4.3" height="15.0" fill="rgb(207,49,44)" rx="2" ry="2" />
<text  x="345.37" y="367.5" ></text>
</g>
<g >
<title>runtime.checkdead (1 samples, 0.12%)</title><rect x="1024.5" y="293" width="1.5" height="15.0" fill="rgb(214,79,46)" rx="2" ry="2" />
<text  x="1027.54" y="303.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.12%)</title><rect x="182.7" y="133" width="1.5" height="15.0" fill="rgb(219,97,22)" rx="2" ry="2" />
<text  x="185.72" y="143.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (1 samples, 0.12%)</title><rect x="349.6" y="213" width="1.5" height="15.0" fill="rgb(249,137,43)" rx="2" ry="2" />
<text  x="352.63" y="223.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (2 samples, 0.25%)</title><rect x="295.9" y="309" width="2.9" height="15.0" fill="rgb(213,75,28)" rx="2" ry="2" />
<text  x="298.93" y="319.5" ></text>
</g>
<g >
<title>runtime.runqgrab (1 samples, 0.12%)</title><rect x="956.3" y="309" width="1.5" height="15.0" fill="rgb(209,137,51)" rx="2" ry="2" />
<text  x="959.32" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).Sign (135 samples, 16.61%)</title><rect x="24.5" y="309" width="196.0" height="15.0" fill="rgb(216,41,16)" rx="2" ry="2" />
<text  x="27.51" y="319.5" >BCDns_0.1/certificateAuth..</text>
</g>
<g >
<title>math/big.nat.div (7 samples, 0.86%)</title><rect x="28.9" y="213" width="10.1" height="15.0" fill="rgb(235,60,39)" rx="2" ry="2" />
<text  x="31.87" y="223.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (38 samples, 4.67%)</title><rect x="895.4" y="389" width="55.1" height="15.0" fill="rgb(228,72,52)" rx="2" ry="2" />
<text  x="898.36" y="399.5" >runti..</text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock.func1 (1 samples, 0.12%)</title><rect x="249.5" y="309" width="1.4" height="15.0" fill="rgb(219,168,3)" rx="2" ry="2" />
<text  x="252.48" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (7 samples, 0.86%)</title><rect x="696.5" y="325" width="10.2" height="15.0" fill="rgb(213,42,28)" rx="2" ry="2" />
<text  x="699.52" y="335.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.37%)</title><rect x="342.4" y="309" width="4.3" height="15.0" fill="rgb(214,121,51)" rx="2" ry="2" />
<text  x="345.37" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (9 samples, 1.11%)</title><rect x="565.9" y="213" width="13.1" height="15.0" fill="rgb(238,98,17)" rx="2" ry="2" />
<text  x="568.89" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (1 samples, 0.12%)</title><rect x="227.7" y="245" width="1.5" height="15.0" fill="rgb(236,39,22)" rx="2" ry="2" />
<text  x="230.71" y="255.5" ></text>
</g>
<g >
<title>runtime.topofstack (1 samples, 0.12%)</title><rect x="875.0" y="245" width="1.5" height="15.0" fill="rgb(206,167,39)" rx="2" ry="2" />
<text  x="878.04" y="255.5" ></text>
</g>
<g >
<title>encoding/json.state1 (1 samples, 0.12%)</title><rect x="708.1" y="341" width="1.5" height="15.0" fill="rgb(221,72,42)" rx="2" ry="2" />
<text  x="711.13" y="351.5" ></text>
</g>
<g >
<title>encoding/json.unquoteBytes (1 samples, 0.12%)</title><rect x="300.3" y="213" width="1.4" height="15.0" fill="rgb(248,160,52)" rx="2" ry="2" />
<text  x="303.28" y="223.5" ></text>
</g>
<g >
<title>math/big.(*Int).Mul (1 samples, 0.12%)</title><rect x="208.8" y="181" width="1.5" height="15.0" fill="rgb(214,104,39)" rx="2" ry="2" />
<text  x="211.84" y="191.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (6 samples, 0.74%)</title><rect x="358.3" y="213" width="8.7" height="15.0" fill="rgb(216,27,0)" rx="2" ry="2" />
<text  x="361.34" y="223.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.12%)</title><rect x="908.4" y="213" width="1.5" height="15.0" fill="rgb(225,199,34)" rx="2" ry="2" />
<text  x="911.43" y="223.5" ></text>
</g>
<g >
<title>math/big.(*Int).GCD (11 samples, 1.35%)</title><rect x="549.9" y="245" width="16.0" height="15.0" fill="rgb(212,75,53)" rx="2" ry="2" />
<text  x="552.93" y="255.5" ></text>
</g>
<g >
<title>math/big.(*Int).Set (1 samples, 0.12%)</title><rect x="191.4" y="197" width="1.5" height="15.0" fill="rgb(228,62,50)" rx="2" ry="2" />
<text  x="194.43" y="207.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).Get (1 samples, 0.12%)</title><rect x="348.2" y="293" width="1.4" height="15.0" fill="rgb(219,174,27)" rx="2" ry="2" />
<text  x="351.18" y="303.5" ></text>
</g>
<g >
<title>runtime.epollwait (10 samples, 1.23%)</title><rect x="985.4" y="309" width="14.5" height="15.0" fill="rgb(244,68,32)" rx="2" ry="2" />
<text  x="988.35" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (3 samples, 0.37%)</title><rect x="240.8" y="309" width="4.3" height="15.0" fill="rgb(217,210,51)" rx="2" ry="2" />
<text  x="243.77" y="319.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.37%)</title><rect x="864.9" y="229" width="4.3" height="15.0" fill="rgb(225,227,35)" rx="2" ry="2" />
<text  x="867.88" y="239.5" ></text>
</g>
<g >
<title>runtime.gcFlushBgCredit (1 samples, 0.12%)</title><rect x="901.2" y="325" width="1.4" height="15.0" fill="rgb(215,166,12)" rx="2" ry="2" />
<text  x="904.17" y="335.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (3 samples, 0.37%)</title><rect x="342.4" y="293" width="4.3" height="15.0" fill="rgb(208,75,28)" rx="2" ry="2" />
<text  x="345.37" y="303.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (1 samples, 0.12%)</title><rect x="735.7" y="309" width="1.5" height="15.0" fill="rgb(212,53,17)" rx="2" ry="2" />
<text  x="738.71" y="319.5" ></text>
</g>
<g >
<title>crypto/rsa.VerifyPKCS1v15 (2 samples, 0.25%)</title><rect x="295.9" y="341" width="2.9" height="15.0" fill="rgb(218,139,12)" rx="2" ry="2" />
<text  x="298.93" y="351.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (19 samples, 2.34%)</title><rect x="592.0" y="293" width="27.6" height="15.0" fill="rgb(231,39,47)" rx="2" ry="2" />
<text  x="595.02" y="303.5" >i..</text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (7 samples, 0.86%)</title><rect x="696.5" y="357" width="10.2" height="15.0" fill="rgb(240,114,15)" rx="2" ry="2" />
<text  x="699.52" y="367.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.12%)</title><rect x="737.2" y="293" width="1.4" height="15.0" fill="rgb(242,177,43)" rx="2" ry="2" />
<text  x="740.16" y="303.5" ></text>
</g>
<g >
<title>runtime.jmpdefer (1 samples, 0.12%)</title><rect x="242.2" y="181" width="1.5" height="15.0" fill="rgb(252,50,27)" rx="2" ry="2" />
<text  x="245.23" y="191.5" ></text>
</g>
<g >
<title>reflect.Value.SetMapIndex (1 samples, 0.12%)</title><rect x="700.9" y="277" width="1.4" height="15.0" fill="rgb(231,224,43)" rx="2" ry="2" />
<text  x="703.87" y="287.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (1 samples, 0.12%)</title><rect x="20.2" y="277" width="1.4" height="15.0" fill="rgb(223,15,19)" rx="2" ry="2" />
<text  x="23.16" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="889.6" y="373" width="1.4" height="15.0" fill="rgb(225,48,37)" rx="2" ry="2" />
<text  x="892.56" y="383.5" ></text>
</g>
<g >
<title>math/big.addVV (1 samples, 0.12%)</title><rect x="203.0" y="149" width="1.5" height="15.0" fill="rgb(237,225,49)" rx="2" ry="2" />
<text  x="206.04" y="159.5" ></text>
</g>
<g >
<title>math/big.nat.montgomery (119 samples, 14.64%)</title><rect x="368.5" y="213" width="172.7" height="15.0" fill="rgb(226,6,8)" rx="2" ry="2" />
<text  x="371.50" y="223.5" >math/big.nat.montgomery</text>
</g>
<g >
<title>runtime.gcMarkTermination.func4.1 (2 samples, 0.25%)</title><rect x="896.8" y="293" width="2.9" height="15.0" fill="rgb(210,81,35)" rx="2" ry="2" />
<text  x="899.81" y="303.5" ></text>
</g>
<g >
<title>runtime.chansend1 (3 samples, 0.37%)</title><rect x="342.4" y="373" width="4.3" height="15.0" fill="rgb(241,207,53)" rx="2" ry="2" />
<text  x="345.37" y="383.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Proposer).ReceiveOrder (8 samples, 0.98%)</title><rect x="335.1" y="389" width="11.6" height="15.0" fill="rgb(237,48,3)" rx="2" ry="2" />
<text  x="338.12" y="399.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.25%)</title><rect x="862.0" y="213" width="2.9" height="15.0" fill="rgb(244,192,39)" rx="2" ry="2" />
<text  x="864.98" y="223.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.callers (1 samples, 0.12%)</title><rect x="237.9" y="261" width="1.4" height="15.0" fill="rgb(251,218,24)" rx="2" ry="2" />
<text  x="240.87" y="271.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (3 samples, 0.37%)</title><rect x="274.2" y="261" width="4.3" height="15.0" fill="rgb(245,146,23)" rx="2" ry="2" />
<text  x="277.16" y="271.5" ></text>
</g>
<g >
<title>reflect.Value.Elem (1 samples, 0.12%)</title><rect x="304.6" y="261" width="1.5" height="15.0" fill="rgb(241,35,18)" rx="2" ry="2" />
<text  x="307.64" y="271.5" ></text>
</g>
<g >
<title>runtime.futexsleep (8 samples, 0.98%)</title><rect x="1062.3" y="309" width="11.6" height="15.0" fill="rgb(211,22,22)" rx="2" ry="2" />
<text  x="1065.28" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/utils.SHA256 (1 samples, 0.12%)</title><rect x="220.5" y="293" width="1.4" height="15.0" fill="rgb(251,40,1)" rx="2" ry="2" />
<text  x="223.46" y="303.5" ></text>
</g>
<g >
<title>runtime.goready (2 samples, 0.25%)</title><rect x="329.3" y="325" width="2.9" height="15.0" fill="rgb(253,117,24)" rx="2" ry="2" />
<text  x="332.31" y="335.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (5 samples, 0.62%)</title><rect x="335.1" y="341" width="7.3" height="15.0" fill="rgb(213,195,17)" rx="2" ry="2" />
<text  x="338.12" y="351.5" ></text>
</g>
<g >
<title>internal/poll.runtime_Semrelease (1 samples, 0.12%)</title><rect x="790.9" y="261" width="1.4" height="15.0" fill="rgb(209,171,21)" rx="2" ry="2" />
<text  x="793.86" y="271.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).writeLock (1 samples, 0.12%)</title><rect x="227.7" y="261" width="1.5" height="15.0" fill="rgb(217,224,50)" rx="2" ry="2" />
<text  x="230.71" y="271.5" ></text>
</g>
<g >
<title>reflect.(*rtype).ptrTo (1 samples, 0.12%)</title><rect x="757.5" y="229" width="1.4" height="15.0" fill="rgb(249,122,19)" rx="2" ry="2" />
<text  x="760.48" y="239.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).handleProposal (29 samples, 3.57%)</title><rect x="253.8" y="373" width="42.1" height="15.0" fill="rgb(216,77,44)" rx="2" ry="2" />
<text  x="256.84" y="383.5" >BCD..</text>
</g>
<g >
<title>encoding/base64.(*Encoding).Decode (2 samples, 0.25%)</title><rect x="301.7" y="277" width="2.9" height="15.0" fill="rgb(210,107,7)" rx="2" ry="2" />
<text  x="304.73" y="287.5" ></text>
</g>
<g >
<title>sync.(*Pool).getSlow (1 samples, 0.12%)</title><rect x="657.3" y="213" width="1.5" height="15.0" fill="rgb(228,216,39)" rx="2" ry="2" />
<text  x="660.33" y="223.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.12%)</title><rect x="938.9" y="293" width="1.5" height="15.0" fill="rgb(207,150,25)" rx="2" ry="2" />
<text  x="941.91" y="303.5" ></text>
</g>
<g >
<title>encoding/json.indirect (5 samples, 0.62%)</title><rect x="751.7" y="261" width="7.2" height="15.0" fill="rgb(216,63,12)" rx="2" ry="2" />
<text  x="754.67" y="271.5" ></text>
</g>
<g >
<title>strconv.ParseUint (1 samples, 0.12%)</title><rect x="307.5" y="261" width="1.5" height="15.0" fill="rgb(237,183,7)" rx="2" ry="2" />
<text  x="310.54" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.12%)</title><rect x="249.5" y="181" width="1.4" height="15.0" fill="rgb(209,27,29)" rx="2" ry="2" />
<text  x="252.48" y="191.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (1 samples, 0.12%)</title><rect x="899.7" y="293" width="1.5" height="15.0" fill="rgb(233,64,0)" rx="2" ry="2" />
<text  x="902.72" y="303.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (1 samples, 0.12%)</title><rect x="311.9" y="197" width="1.4" height="15.0" fill="rgb(232,166,41)" rx="2" ry="2" />
<text  x="314.89" y="207.5" ></text>
</g>
<g >
<title>runtime.pcvalue (2 samples, 0.25%)</title><rect x="907.0" y="229" width="2.9" height="15.0" fill="rgb(251,189,22)" rx="2" ry="2" />
<text  x="909.97" y="239.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (2 samples, 0.25%)</title><rect x="621.0" y="325" width="2.9" height="15.0" fill="rgb(248,128,51)" rx="2" ry="2" />
<text  x="624.05" y="335.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (2 samples, 0.25%)</title><rect x="542.7" y="229" width="2.9" height="15.0" fill="rgb(236,177,19)" rx="2" ry="2" />
<text  x="545.67" y="239.5" ></text>
</g>
<g >
<title>math/big.shlVU (3 samples, 0.37%)</title><rect x="667.5" y="245" width="4.3" height="15.0" fill="rgb(210,1,42)" rx="2" ry="2" />
<text  x="670.49" y="255.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.UnMarshalProposalMessage (3 samples, 0.37%)</title><rect x="584.8" y="341" width="4.3" height="15.0" fill="rgb(223,183,44)" rx="2" ry="2" />
<text  x="587.76" y="351.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (35 samples, 4.31%)</title><rect x="899.7" y="357" width="50.8" height="15.0" fill="rgb(243,159,43)" rx="2" ry="2" />
<text  x="902.72" y="367.5" >runti..</text>
</g>
<g >
<title>encoding/json.stateBeginValue (1 samples, 0.12%)</title><rect x="322.1" y="341" width="1.4" height="15.0" fill="rgb(253,223,50)" rx="2" ry="2" />
<text  x="325.05" y="351.5" ></text>
</g>
<g >
<title>time.now (1 samples, 0.12%)</title><rect x="1188.5" y="389" width="1.5" height="15.0" fill="rgb(248,19,45)" rx="2" ry="2" />
<text  x="1191.55" y="399.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.12%)</title><rect x="776.3" y="261" width="1.5" height="15.0" fill="rgb(224,185,13)" rx="2" ry="2" />
<text  x="779.35" y="271.5" ></text>
</g>
<g >
<title>math/big.basicMul (3 samples, 0.37%)</title><rect x="274.2" y="245" width="4.3" height="15.0" fill="rgb(208,133,39)" rx="2" ry="2" />
<text  x="277.16" y="255.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DB).Get (1 samples, 0.12%)</title><rect x="349.6" y="309" width="1.5" height="15.0" fill="rgb(250,169,3)" rx="2" ry="2" />
<text  x="352.63" y="319.5" ></text>
</g>
<g >
<title>runtime.pcvalueCacheKey (1 samples, 0.12%)</title><rect x="907.0" y="213" width="1.4" height="15.0" fill="rgb(244,111,16)" rx="2" ry="2" />
<text  x="909.97" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (3 samples, 0.37%)</title><rect x="15.8" y="277" width="4.4" height="15.0" fill="rgb(235,89,40)" rx="2" ry="2" />
<text  x="18.81" y="287.5" ></text>
</g>
<g >
<title>runtime.gcDrain (35 samples, 4.31%)</title><rect x="899.7" y="341" width="50.8" height="15.0" fill="rgb(229,68,26)" rx="2" ry="2" />
<text  x="902.72" y="351.5" >runti..</text>
</g>
<g >
<title>syscall.Syscall (5 samples, 0.62%)</title><rect x="721.2" y="261" width="7.3" height="15.0" fill="rgb(252,49,26)" rx="2" ry="2" />
<text  x="724.19" y="271.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.12%)</title><rect x="191.4" y="165" width="1.5" height="15.0" fill="rgb(250,14,52)" rx="2" ry="2" />
<text  x="194.43" y="175.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.12%)</title><rect x="12.9" y="309" width="1.5" height="15.0" fill="rgb(250,81,7)" rx="2" ry="2" />
<text  x="15.90" y="319.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (1 samples, 0.12%)</title><rect x="10.0" y="277" width="1.5" height="15.0" fill="rgb(231,46,1)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>fmt.(*pp).printValue (3 samples, 0.37%)</title><rect x="711.0" y="293" width="4.4" height="15.0" fill="rgb(241,118,6)" rx="2" ry="2" />
<text  x="714.03" y="303.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.ValidateProposals (2 samples, 0.25%)</title><rect x="250.9" y="341" width="2.9" height="15.0" fill="rgb(239,25,48)" rx="2" ry="2" />
<text  x="253.93" y="351.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.12%)</title><rect x="34.7" y="165" width="1.4" height="15.0" fill="rgb(222,36,9)" rx="2" ry="2" />
<text  x="37.67" y="175.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (1 samples, 0.12%)</title><rect x="249.5" y="293" width="1.4" height="15.0" fill="rgb(210,222,49)" rx="2" ry="2" />
<text  x="252.48" y="303.5" ></text>
</g>
<g >
<title>reflect.packEface (1 samples, 0.12%)</title><rect x="252.4" y="245" width="1.4" height="15.0" fill="rgb(241,159,40)" rx="2" ry="2" />
<text  x="255.39" y="255.5" ></text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).Sign (156 samples, 19.19%)</title><rect x="355.4" y="325" width="226.5" height="15.0" fill="rgb(207,191,23)" rx="2" ry="2" />
<text  x="358.44" y="335.5" >BCDns_0.1/certificateAuthorit..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="783.6" y="341" width="1.5" height="15.0" fill="rgb(228,9,48)" rx="2" ry="2" />
<text  x="786.60" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (1 samples, 0.12%)</title><rect x="1055.0" y="245" width="1.5" height="15.0" fill="rgb(226,188,32)" rx="2" ry="2" />
<text  x="1058.02" y="255.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.12%)</title><rect x="766.2" y="293" width="1.4" height="15.0" fill="rgb(240,209,11)" rx="2" ry="2" />
<text  x="769.19" y="303.5" ></text>
</g>
<g >
<title>crypto/rsa.SignPKCS1v15 (156 samples, 19.19%)</title><rect x="355.4" y="309" width="226.5" height="15.0" fill="rgb(232,31,8)" rx="2" ry="2" />
<text  x="358.44" y="319.5" >crypto/rsa.SignPKCS1v15</text>
</g>
<g >
<title>encoding/json.Marshal (1 samples, 0.12%)</title><rect x="280.0" y="325" width="1.4" height="15.0" fill="rgb(228,195,42)" rx="2" ry="2" />
<text  x="282.96" y="335.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.12%)</title><rect x="191.4" y="37" width="1.5" height="15.0" fill="rgb(244,45,38)" rx="2" ry="2" />
<text  x="194.43" y="47.5" ></text>
</g>
<g >
<title>math/big.nat.div (12 samples, 1.48%)</title><rect x="256.7" y="261" width="17.5" height="15.0" fill="rgb(209,14,38)" rx="2" ry="2" />
<text  x="259.74" y="271.5" ></text>
</g>
<g >
<title>math/big.(*Int).ModInverse (11 samples, 1.35%)</title><rect x="549.9" y="261" width="16.0" height="15.0" fill="rgb(236,206,32)" rx="2" ry="2" />
<text  x="552.93" y="271.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="715.4" y="245" width="1.4" height="15.0" fill="rgb(236,16,54)" rx="2" ry="2" />
<text  x="718.39" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.12%)</title><rect x="625.4" y="341" width="1.5" height="15.0" fill="rgb(233,67,33)" rx="2" ry="2" />
<text  x="628.40" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.12%)</title><rect x="700.9" y="197" width="1.4" height="15.0" fill="rgb(210,77,42)" rx="2" ry="2" />
<text  x="703.87" y="207.5" ></text>
</g>
<g >
<title>encoding/base64.(*Encoding).decodeQuantum (1 samples, 0.12%)</title><rect x="301.7" y="261" width="1.5" height="15.0" fill="rgb(225,133,15)" rx="2" ry="2" />
<text  x="304.73" y="271.5" ></text>
</g>
<g >
<title>crypto/rand.getRandomBatch (1 samples, 0.12%)</title><rect x="24.5" y="197" width="1.5" height="15.0" fill="rgb(252,135,10)" rx="2" ry="2" />
<text  x="27.51" y="207.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.12%)</title><rect x="10.0" y="229" width="1.5" height="15.0" fill="rgb(247,214,4)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>runtime.netpoll (2 samples, 0.25%)</title><rect x="952.0" y="325" width="2.9" height="15.0" fill="rgb(251,221,10)" rx="2" ry="2" />
<text  x="954.97" y="335.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (3 samples, 0.37%)</title><rect x="895.4" y="373" width="4.3" height="15.0" fill="rgb(229,50,10)" rx="2" ry="2" />
<text  x="898.36" y="383.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.12%)</title><rect x="14.4" y="277" width="1.4" height="15.0" fill="rgb(217,173,2)" rx="2" ry="2" />
<text  x="17.35" y="287.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (35 samples, 4.31%)</title><rect x="635.6" y="293" width="50.8" height="15.0" fill="rgb(210,94,7)" rx="2" ry="2" />
<text  x="638.56" y="303.5" >math/..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="239.3" y="309" width="1.5" height="15.0" fill="rgb(238,128,18)" rx="2" ry="2" />
<text  x="242.32" y="319.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.25%)</title><rect x="1175.5" y="277" width="2.9" height="15.0" fill="rgb(243,6,39)" rx="2" ry="2" />
<text  x="1178.49" y="287.5" ></text>
</g>
<g >
<title>runtime.goready (3 samples, 0.37%)</title><rect x="864.9" y="325" width="4.3" height="15.0" fill="rgb(227,130,16)" rx="2" ry="2" />
<text  x="867.88" y="335.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.25%)</title><rect x="246.6" y="277" width="2.9" height="15.0" fill="rgb(234,153,33)" rx="2" ry="2" />
<text  x="249.58" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.12%)</title><rect x="249.5" y="245" width="1.4" height="15.0" fill="rgb(205,185,7)" rx="2" ry="2" />
<text  x="252.48" y="255.5" ></text>
</g>
<g >
<title>os.(*File).Write (6 samples, 0.74%)</title><rect x="719.7" y="341" width="8.8" height="15.0" fill="rgb(241,92,26)" rx="2" ry="2" />
<text  x="722.74" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (2 samples, 0.25%)</title><rect x="581.9" y="293" width="2.9" height="15.0" fill="rgb(232,93,45)" rx="2" ry="2" />
<text  x="584.86" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="738.6" y="309" width="1.5" height="15.0" fill="rgb(219,177,34)" rx="2" ry="2" />
<text  x="741.61" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).scavengeIfNeededLocked (1 samples, 0.12%)</title><rect x="877.9" y="229" width="1.5" height="15.0" fill="rgb(216,154,46)" rx="2" ry="2" />
<text  x="880.95" y="239.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.25%)</title><rect x="21.6" y="181" width="2.9" height="15.0" fill="rgb(254,87,8)" rx="2" ry="2" />
<text  x="24.61" y="191.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.25%)</title><rect x="329.3" y="229" width="2.9" height="15.0" fill="rgb(215,134,52)" rx="2" ry="2" />
<text  x="332.31" y="239.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.12%)</title><rect x="875.0" y="277" width="1.5" height="15.0" fill="rgb(205,12,37)" rx="2" ry="2" />
<text  x="878.04" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="875.0" y="293" width="1.5" height="15.0" fill="rgb(239,216,31)" rx="2" ry="2" />
<text  x="878.04" y="303.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (1 samples, 0.12%)</title><rect x="944.7" y="293" width="1.5" height="15.0" fill="rgb(225,141,34)" rx="2" ry="2" />
<text  x="947.71" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*scanner).pushParseState (1 samples, 0.12%)</title><rect x="587.7" y="277" width="1.4" height="15.0" fill="rgb(250,148,1)" rx="2" ry="2" />
<text  x="590.66" y="287.5" ></text>
</g>
<g >
<title>math/big.nat.div (5 samples, 0.62%)</title><rect x="211.7" y="213" width="7.3" height="15.0" fill="rgb(218,183,46)" rx="2" ry="2" />
<text  x="214.75" y="223.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.12%)</title><rect x="956.3" y="293" width="1.5" height="15.0" fill="rgb(235,18,31)" rx="2" ry="2" />
<text  x="959.32" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="220.5" y="245" width="1.4" height="15.0" fill="rgb(243,207,49)" rx="2" ry="2" />
<text  x="223.46" y="255.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.12%)</title><rect x="960.7" y="341" width="1.4" height="15.0" fill="rgb(213,98,34)" rx="2" ry="2" />
<text  x="963.68" y="351.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintln (3 samples, 0.37%)</title><rect x="715.4" y="341" width="4.3" height="15.0" fill="rgb(241,113,12)" rx="2" ry="2" />
<text  x="718.39" y="351.5" ></text>
</g>
<g >
<title>runtime.notesleep (2 samples, 0.25%)</title><rect x="957.8" y="309" width="2.9" height="15.0" fill="rgb(247,92,7)" rx="2" ry="2" />
<text  x="960.77" y="319.5" ></text>
</g>
<g >
<title>runtime.resolveTypeOff (1 samples, 0.12%)</title><rect x="311.9" y="149" width="1.4" height="15.0" fill="rgb(225,169,19)" rx="2" ry="2" />
<text  x="314.89" y="159.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_fat (1 samples, 0.12%)</title><rect x="278.5" y="325" width="1.5" height="15.0" fill="rgb(206,129,14)" rx="2" ry="2" />
<text  x="281.51" y="335.5" ></text>
</g>
<g >
<title>runtime.timerproc (8 samples, 0.98%)</title><rect x="1175.5" y="389" width="11.6" height="15.0" fill="rgb(250,6,48)" rx="2" ry="2" />
<text  x="1178.49" y="399.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).Update (4 samples, 0.49%)</title><rect x="15.8" y="341" width="5.8" height="15.0" fill="rgb(233,86,14)" rx="2" ry="2" />
<text  x="18.81" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).insert (1 samples, 0.12%)</title><rect x="891.0" y="277" width="1.5" height="15.0" fill="rgb(251,85,45)" rx="2" ry="2" />
<text  x="894.01" y="287.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).GetLatestBlock.func1 (1 samples, 0.12%)</title><rect x="10.0" y="309" width="1.5" height="15.0" fill="rgb(205,97,12)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.12%)</title><rect x="702.3" y="293" width="1.5" height="15.0" fill="rgb(224,90,1)" rx="2" ry="2" />
<text  x="705.32" y="303.5" ></text>
</g>
<g >
<title>math/big.lehmerSimulate (4 samples, 0.49%)</title><rect x="551.4" y="213" width="5.8" height="15.0" fill="rgb(220,217,13)" rx="2" ry="2" />
<text  x="554.38" y="223.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (3 samples, 0.37%)</title><rect x="682.0" y="277" width="4.4" height="15.0" fill="rgb(211,174,20)" rx="2" ry="2" />
<text  x="685.00" y="287.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="741.5" y="357" width="1.5" height="15.0" fill="rgb(224,111,48)" rx="2" ry="2" />
<text  x="744.51" y="367.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (1 samples, 0.12%)</title><rect x="895.4" y="309" width="1.4" height="15.0" fill="rgb(253,81,53)" rx="2" ry="2" />
<text  x="898.36" y="319.5" ></text>
</g>
<g >
<title>crypto/rsa.VerifyPKCS1v15 (37 samples, 4.55%)</title><rect x="634.1" y="341" width="53.7" height="15.0" fill="rgb(231,35,23)" rx="2" ry="2" />
<text  x="637.11" y="351.5" >crypt..</text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (2 samples, 0.25%)</title><rect x="891.0" y="293" width="2.9" height="15.0" fill="rgb(236,218,25)" rx="2" ry="2" />
<text  x="894.01" y="303.5" ></text>
</g>
<g >
<title>math/big.putNat (1 samples, 0.12%)</title><rect x="295.9" y="245" width="1.5" height="15.0" fill="rgb(228,24,43)" rx="2" ry="2" />
<text  x="298.93" y="255.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (31 samples, 3.81%)</title><rect x="635.6" y="261" width="45.0" height="15.0" fill="rgb(246,163,35)" rx="2" ry="2" />
<text  x="638.56" y="271.5" >math..</text>
</g>
<g >
<title>encoding/json.checkValid (9 samples, 1.11%)</title><rect x="316.2" y="357" width="13.1" height="15.0" fill="rgb(210,129,52)" rx="2" ry="2" />
<text  x="319.25" y="367.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (3 samples, 0.37%)</title><rect x="779.2" y="325" width="4.4" height="15.0" fill="rgb(232,150,41)" rx="2" ry="2" />
<text  x="782.25" y="335.5" ></text>
</g>
<g >
<title>reflect.resolveTypeOff (1 samples, 0.12%)</title><rect x="311.9" y="181" width="1.4" height="15.0" fill="rgb(228,124,51)" rx="2" ry="2" />
<text  x="314.89" y="191.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (3 samples, 0.37%)</title><rect x="342.4" y="213" width="4.3" height="15.0" fill="rgb(248,72,4)" rx="2" ry="2" />
<text  x="345.37" y="223.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (7 samples, 0.86%)</title><rect x="172.6" y="165" width="10.1" height="15.0" fill="rgb(207,145,30)" rx="2" ry="2" />
<text  x="175.56" y="175.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).SendReply (155 samples, 19.07%)</title><rect x="24.5" y="357" width="225.0" height="15.0" fill="rgb(230,73,14)" rx="2" ry="2" />
<text  x="27.51" y="367.5" >BCDns_0.1/consensusMy/service..</text>
</g>
<g >
<title>math/big.shrVU (3 samples, 0.37%)</title><rect x="671.8" y="245" width="4.4" height="15.0" fill="rgb(239,129,16)" rx="2" ry="2" />
<text  x="674.85" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).markBitsForIndex (1 samples, 0.12%)</title><rect x="943.3" y="293" width="1.4" height="15.0" fill="rgb(215,125,41)" rx="2" ry="2" />
<text  x="946.26" y="303.5" ></text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (1 samples, 0.12%)</title><rect x="12.9" y="293" width="1.5" height="15.0" fill="rgb(217,151,24)" rx="2" ry="2" />
<text  x="15.90" y="303.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.12%)</title><rect x="295.9" y="229" width="1.5" height="15.0" fill="rgb(246,205,37)" rx="2" ry="2" />
<text  x="298.93" y="239.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.12%)</title><rect x="21.6" y="149" width="1.5" height="15.0" fill="rgb(227,205,16)" rx="2" ry="2" />
<text  x="24.61" y="159.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="34.7" y="133" width="1.4" height="15.0" fill="rgb(226,217,29)" rx="2" ry="2" />
<text  x="37.67" y="143.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock (2 samples, 0.25%)</title><rect x="1175.5" y="357" width="2.9" height="15.0" fill="rgb(206,189,49)" rx="2" ry="2" />
<text  x="1178.49" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.37%)</title><rect x="864.9" y="309" width="4.3" height="15.0" fill="rgb(207,183,33)" rx="2" ry="2" />
<text  x="867.88" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.12%)</title><rect x="584.8" y="245" width="1.4" height="15.0" fill="rgb(224,175,9)" rx="2" ry="2" />
<text  x="587.76" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.12%)</title><rect x="210.3" y="133" width="1.4" height="15.0" fill="rgb(208,122,13)" rx="2" ry="2" />
<text  x="213.30" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.12%)</title><rect x="34.7" y="85" width="1.4" height="15.0" fill="rgb(230,82,23)" rx="2" ry="2" />
<text  x="37.67" y="95.5" ></text>
</g>
<g >
<title>math/big.nat.add (1 samples, 0.12%)</title><rect x="558.6" y="181" width="1.5" height="15.0" fill="rgb(217,97,7)" rx="2" ry="2" />
<text  x="561.63" y="191.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.12%)</title><rect x="786.5" y="309" width="1.5" height="15.0" fill="rgb(241,14,53)" rx="2" ry="2" />
<text  x="789.51" y="319.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).View (1 samples, 0.12%)</title><rect x="249.5" y="325" width="1.4" height="15.0" fill="rgb(224,1,49)" rx="2" ry="2" />
<text  x="252.48" y="335.5" ></text>
</g>
<g >
<title>math/big.nat.setUint64 (1 samples, 0.12%)</title><rect x="686.4" y="277" width="1.4" height="15.0" fill="rgb(227,81,4)" rx="2" ry="2" />
<text  x="689.36" y="287.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.12%)</title><rect x="12.9" y="261" width="1.5" height="15.0" fill="rgb(231,130,33)" rx="2" ry="2" />
<text  x="15.90" y="271.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.12%)</title><rect x="210.3" y="85" width="1.4" height="15.0" fill="rgb(222,8,2)" rx="2" ry="2" />
<text  x="213.30" y="95.5" ></text>
</g>
<g >
<title>math/big.lehmerUpdate (10 samples, 1.23%)</title><rect x="195.8" y="197" width="14.5" height="15.0" fill="rgb(239,179,24)" rx="2" ry="2" />
<text  x="198.78" y="207.5" ></text>
</g>
<g >
<title>fmt.Println (1 samples, 0.12%)</title><rect x="735.7" y="373" width="1.5" height="15.0" fill="rgb(206,22,1)" rx="2" ry="2" />
<text  x="738.71" y="383.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="700.9" y="229" width="1.4" height="15.0" fill="rgb(210,80,42)" rx="2" ry="2" />
<text  x="703.87" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).removeNode (1 samples, 0.12%)</title><rect x="898.3" y="101" width="1.4" height="15.0" fill="rgb(237,134,41)" rx="2" ry="2" />
<text  x="901.27" y="111.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (1 samples, 0.12%)</title><rect x="300.3" y="277" width="1.4" height="15.0" fill="rgb(247,190,11)" rx="2" ry="2" />
<text  x="303.28" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.12%)</title><rect x="280.0" y="293" width="1.4" height="15.0" fill="rgb(235,194,5)" rx="2" ry="2" />
<text  x="282.96" y="303.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Name (2 samples, 0.25%)</title><rect x="754.6" y="245" width="2.9" height="15.0" fill="rgb(219,168,18)" rx="2" ry="2" />
<text  x="757.58" y="255.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteString (1 samples, 0.12%)</title><rect x="583.3" y="229" width="1.5" height="15.0" fill="rgb(254,190,54)" rx="2" ry="2" />
<text  x="586.31" y="239.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (2 samples, 0.25%)</title><rect x="907.0" y="245" width="2.9" height="15.0" fill="rgb(208,224,1)" rx="2" ry="2" />
<text  x="909.97" y="255.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.25%)</title><rect x="1175.5" y="245" width="2.9" height="15.0" fill="rgb(241,124,31)" rx="2" ry="2" />
<text  x="1178.49" y="255.5" ></text>
</g>
<g >
<title>math/big.nat.mulAddWW (2 samples, 0.25%)</title><rect x="561.5" y="165" width="2.9" height="15.0" fill="rgb(233,132,1)" rx="2" ry="2" />
<text  x="564.54" y="175.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.12%)</title><rect x="221.9" y="213" width="1.5" height="15.0" fill="rgb(249,31,2)" rx="2" ry="2" />
<text  x="224.91" y="223.5" ></text>
</g>
<g >
<title>reflect.deepValueEqual (1 samples, 0.12%)</title><rect x="252.4" y="277" width="1.4" height="15.0" fill="rgb(232,75,34)" rx="2" ry="2" />
<text  x="255.39" y="287.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.37%)</title><rect x="342.4" y="229" width="4.3" height="15.0" fill="rgb(206,133,12)" rx="2" ry="2" />
<text  x="345.37" y="239.5" ></text>
</g>
<g >
<title>syscall.Syscall (5 samples, 0.62%)</title><rect x="335.1" y="293" width="7.3" height="15.0" fill="rgb(215,177,40)" rx="2" ry="2" />
<text  x="338.12" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.12%)</title><rect x="783.6" y="293" width="1.5" height="15.0" fill="rgb(219,160,48)" rx="2" ry="2" />
<text  x="786.60" y="303.5" ></text>
</g>
<g >
<title>syscall.Write (19 samples, 2.34%)</title><rect x="592.0" y="277" width="27.6" height="15.0" fill="rgb(243,75,54)" rx="2" ry="2" />
<text  x="595.02" y="287.5" >s..</text>
</g>
<g >
<title>runtime.exitsyscallfast_pidle (3 samples, 0.37%)</title><rect x="1178.4" y="293" width="4.3" height="15.0" fill="rgb(219,76,13)" rx="2" ry="2" />
<text  x="1181.39" y="303.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (7 samples, 0.86%)</title><rect x="227.7" y="293" width="10.2" height="15.0" fill="rgb(209,144,35)" rx="2" ry="2" />
<text  x="230.71" y="303.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.12%)</title><rect x="304.6" y="277" width="1.5" height="15.0" fill="rgb(233,8,46)" rx="2" ry="2" />
<text  x="307.64" y="287.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (7 samples, 0.86%)</title><rect x="28.9" y="197" width="10.1" height="15.0" fill="rgb(214,209,43)" rx="2" ry="2" />
<text  x="31.87" y="207.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.12%)</title><rect x="686.4" y="245" width="1.4" height="15.0" fill="rgb(253,185,6)" rx="2" ry="2" />
<text  x="689.36" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="182.7" y="149" width="1.5" height="15.0" fill="rgb(217,7,42)" rx="2" ry="2" />
<text  x="185.72" y="159.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (1 samples, 0.12%)</title><rect x="790.9" y="229" width="1.4" height="15.0" fill="rgb(210,224,30)" rx="2" ry="2" />
<text  x="793.86" y="239.5" ></text>
</g>
<g >
<title>math/big.nat.divLarge (3 samples, 0.37%)</title><rect x="545.6" y="213" width="4.3" height="15.0" fill="rgb(235,173,53)" rx="2" ry="2" />
<text  x="548.57" y="223.5" ></text>
</g>
<g >
<title>runtime.growslice (2 samples, 0.25%)</title><rect x="870.7" y="373" width="2.9" height="15.0" fill="rgb(212,162,13)" rx="2" ry="2" />
<text  x="873.69" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (2 samples, 0.25%)</title><rect x="896.8" y="197" width="2.9" height="15.0" fill="rgb(248,42,41)" rx="2" ry="2" />
<text  x="899.81" y="207.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.12%)</title><rect x="705.2" y="309" width="1.5" height="15.0" fill="rgb(220,83,32)" rx="2" ry="2" />
<text  x="708.23" y="319.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.12%)</title><rect x="208.8" y="133" width="1.5" height="15.0" fill="rgb(233,79,2)" rx="2" ry="2" />
<text  x="211.84" y="143.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (6 samples, 0.74%)</title><rect x="211.7" y="245" width="8.8" height="15.0" fill="rgb(241,122,49)" rx="2" ry="2" />
<text  x="214.75" y="255.5" ></text>
</g>
<g >
<title>math/big.nat.setWord (1 samples, 0.12%)</title><rect x="686.4" y="261" width="1.4" height="15.0" fill="rgb(248,30,23)" rx="2" ry="2" />
<text  x="689.36" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.12%)</title><rect x="249.5" y="149" width="1.4" height="15.0" fill="rgb(254,85,29)" rx="2" ry="2" />
<text  x="252.48" y="159.5" ></text>
</g>
<g >
<title>math/big.subVV (2 samples, 0.25%)</title><rect x="536.9" y="197" width="2.9" height="15.0" fill="rgb(244,177,29)" rx="2" ry="2" />
<text  x="539.86" y="207.5" ></text>
</g>
<g >
<title>runtime.scanblock (3 samples, 0.37%)</title><rect x="915.7" y="293" width="4.3" height="15.0" fill="rgb(232,41,17)" rx="2" ry="2" />
<text  x="918.68" y="303.5" ></text>
</g>
<g >
<title>runtime.gomcache (1 samples, 0.12%)</title><rect x="220.5" y="229" width="1.4" height="15.0" fill="rgb(246,90,31)" rx="2" ry="2" />
<text  x="223.46" y="239.5" ></text>
</g>
<g >
<title>reflect.packEface (1 samples, 0.12%)</title><rect x="713.9" y="229" width="1.5" height="15.0" fill="rgb(241,164,15)" rx="2" ry="2" />
<text  x="716.94" y="239.5" ></text>
</g>
<g >
<title>runtime.scang (8 samples, 0.98%)</title><rect x="904.1" y="293" width="11.6" height="15.0" fill="rgb(238,207,17)" rx="2" ry="2" />
<text  x="907.07" y="303.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (1 samples, 0.12%)</title><rect x="544.1" y="197" width="1.5" height="15.0" fill="rgb(205,197,52)" rx="2" ry="2" />
<text  x="547.12" y="207.5" ></text>
</g>
<g >
<title>fmt.(*pp).printValue (3 samples, 0.37%)</title><rect x="715.4" y="309" width="4.3" height="15.0" fill="rgb(240,142,52)" rx="2" ry="2" />
<text  x="718.39" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (6 samples, 0.74%)</title><rect x="876.5" y="293" width="8.7" height="15.0" fill="rgb(215,80,19)" rx="2" ry="2" />
<text  x="879.49" y="303.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).BroadCast (1 samples, 0.12%)</title><rect x="11.5" y="357" width="1.4" height="15.0" fill="rgb(207,19,1)" rx="2" ry="2" />
<text  x="14.45" y="367.5" ></text>
</g>
<g >
<title>math/big.subVV (3 samples, 0.37%)</title><rect x="676.2" y="245" width="4.4" height="15.0" fill="rgb(237,157,50)" rx="2" ry="2" />
<text  x="679.20" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).rotateRight (1 samples, 0.12%)</title><rect x="898.3" y="85" width="1.4" height="15.0" fill="rgb(221,164,6)" rx="2" ry="2" />
<text  x="901.27" y="95.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).MineBlock (1 samples, 0.12%)</title><rect x="10.0" y="357" width="1.5" height="15.0" fill="rgb(208,48,24)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (2 samples, 0.25%)</title><rect x="573.1" y="197" width="3.0" height="15.0" fill="rgb(213,29,34)" rx="2" ry="2" />
<text  x="576.15" y="207.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 0.37%)</title><rect x="342.4" y="197" width="4.3" height="15.0" fill="rgb(241,67,34)" rx="2" ry="2" />
<text  x="345.37" y="207.5" ></text>
</g>
<g >
<title>os.(*File).write (1 samples, 0.12%)</title><rect x="735.7" y="325" width="1.5" height="15.0" fill="rgb(217,13,21)" rx="2" ry="2" />
<text  x="738.71" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (12 samples, 1.48%)</title><rect x="298.8" y="357" width="17.4" height="15.0" fill="rgb(250,84,4)" rx="2" ry="2" />
<text  x="301.83" y="367.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (2 samples, 0.25%)</title><rect x="581.9" y="309" width="2.9" height="15.0" fill="rgb(212,5,51)" rx="2" ry="2" />
<text  x="584.86" y="319.5" ></text>
</g>
<g >
<title>sync.loadPoolChainElt (1 samples, 0.12%)</title><rect x="657.3" y="181" width="1.5" height="15.0" fill="rgb(227,104,14)" rx="2" ry="2" />
<text  x="660.33" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="239.3" y="293" width="1.5" height="15.0" fill="rgb(233,228,1)" rx="2" ry="2" />
<text  x="242.32" y="303.5" ></text>
</g>
<g >
<title>crypto.Hash.New (1 samples, 0.12%)</title><rect x="255.3" y="309" width="1.4" height="15.0" fill="rgb(226,72,0)" rx="2" ry="2" />
<text  x="258.29" y="319.5" ></text>
</g>
<g >
<title>runtime.mcall (72 samples, 8.86%)</title><rect x="950.5" y="389" width="104.5" height="15.0" fill="rgb(207,209,33)" rx="2" ry="2" />
<text  x="953.52" y="399.5" >runtime.mcall</text>
</g>
<g >
<title>runtime.mstart (80 samples, 9.84%)</title><rect x="1056.5" y="389" width="116.1" height="15.0" fill="rgb(222,30,27)" rx="2" ry="2" />
<text  x="1059.47" y="399.5" >runtime.mstart</text>
</g>
<g >
<title>encoding/json.stateBeginString (1 samples, 0.12%)</title><rect x="320.6" y="341" width="1.5" height="15.0" fill="rgb(228,102,3)" rx="2" ry="2" />
<text  x="323.60" y="351.5" ></text>
</g>
<g >
<title>reflect.mapiterinit (1 samples, 0.12%)</title><rect x="715.4" y="261" width="1.4" height="15.0" fill="rgb(229,155,20)" rx="2" ry="2" />
<text  x="718.39" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="783.6" y="325" width="1.5" height="15.0" fill="rgb(206,93,11)" rx="2" ry="2" />
<text  x="786.60" y="335.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.12%)</title><rect x="285.8" y="229" width="1.4" height="15.0" fill="rgb(236,184,53)" rx="2" ry="2" />
<text  x="288.77" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (24 samples, 2.95%)</title><rect x="789.4" y="309" width="34.8" height="15.0" fill="rgb(223,154,0)" rx="2" ry="2" />
<text  x="792.41" y="319.5" >in..</text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (2 samples, 0.25%)</title><rect x="896.8" y="261" width="2.9" height="15.0" fill="rgb(232,193,38)" rx="2" ry="2" />
<text  x="899.81" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (3 samples, 0.37%)</title><rect x="696.5" y="293" width="4.4" height="15.0" fill="rgb(210,118,8)" rx="2" ry="2" />
<text  x="699.52" y="303.5" ></text>
</g>
<g >
<title>syscall.Write (6 samples, 0.74%)</title><rect x="229.2" y="261" width="8.7" height="15.0" fill="rgb(254,66,2)" rx="2" ry="2" />
<text  x="232.16" y="271.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (4 samples, 0.49%)</title><rect x="909.9" y="245" width="5.8" height="15.0" fill="rgb(239,51,36)" rx="2" ry="2" />
<text  x="912.88" y="255.5" ></text>
</g>
<g >
<title>runtime.selectgo (1 samples, 0.12%)</title><rect x="737.2" y="373" width="1.4" height="15.0" fill="rgb(224,193,23)" rx="2" ry="2" />
<text  x="740.16" y="383.5" ></text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.12%)</title><rect x="777.8" y="325" width="1.4" height="15.0" fill="rgb(233,82,12)" rx="2" ry="2" />
<text  x="780.80" y="335.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.12%)</title><rect x="625.4" y="293" width="1.5" height="15.0" fill="rgb(216,108,15)" rx="2" ry="2" />
<text  x="628.40" y="303.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalReplyMessage).Hash (4 samples, 0.49%)</title><rect x="220.5" y="309" width="5.8" height="15.0" fill="rgb(208,79,52)" rx="2" ry="2" />
<text  x="223.46" y="319.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).View (2 samples, 0.25%)</title><rect x="21.6" y="341" width="2.9" height="15.0" fill="rgb(225,144,10)" rx="2" ry="2" />
<text  x="24.61" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.12%)</title><rect x="1055.0" y="229" width="1.5" height="15.0" fill="rgb(244,100,44)" rx="2" ry="2" />
<text  x="1058.02" y="239.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (5 samples, 0.62%)</title><rect x="301.7" y="293" width="7.3" height="15.0" fill="rgb(212,36,1)" rx="2" ry="2" />
<text  x="304.73" y="303.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.25%)</title><rect x="937.5" y="309" width="2.9" height="15.0" fill="rgb(216,73,37)" rx="2" ry="2" />
<text  x="940.45" y="319.5" ></text>
</g>
<g >
<title>github.com/golang/snappy.encodeBlock (1 samples, 0.12%)</title><rect x="11.5" y="309" width="1.4" height="15.0" fill="rgb(233,210,15)" rx="2" ry="2" />
<text  x="14.45" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).ValidateMod (29 samples, 3.57%)</title><rect x="253.8" y="357" width="42.1" height="15.0" fill="rgb(249,50,0)" rx="2" ry="2" />
<text  x="256.84" y="367.5" >BCD..</text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalReplyMessage).VerifySignature (43 samples, 5.29%)</title><rect x="634.1" y="373" width="62.4" height="15.0" fill="rgb(216,206,12)" rx="2" ry="2" />
<text  x="637.11" y="383.5" >BCDns_..</text>
</g>
<g >
<title>crypto/rand.(*devReader).Read (2 samples, 0.25%)</title><rect x="355.4" y="213" width="2.9" height="15.0" fill="rgb(217,125,53)" rx="2" ry="2" />
<text  x="358.44" y="223.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (3 samples, 0.37%)</title><rect x="715.4" y="325" width="4.3" height="15.0" fill="rgb(243,68,19)" rx="2" ry="2" />
<text  x="718.39" y="335.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.12%)</title><rect x="539.8" y="197" width="1.4" height="15.0" fill="rgb(219,206,17)" rx="2" ry="2" />
<text  x="542.77" y="207.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (1 samples, 0.12%)</title><rect x="249.5" y="277" width="1.4" height="15.0" fill="rgb(227,14,44)" rx="2" ry="2" />
<text  x="252.48" y="287.5" ></text>
</g>
<g >
<title>math/big.subVV (1 samples, 0.12%)</title><rect x="297.4" y="245" width="1.4" height="15.0" fill="rgb(234,88,35)" rx="2" ry="2" />
<text  x="300.38" y="255.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.12%)</title><rect x="1023.1" y="181" width="1.4" height="15.0" fill="rgb(250,219,24)" rx="2" ry="2" />
<text  x="1026.09" y="191.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (1 samples, 0.12%)</title><rect x="713.9" y="261" width="1.5" height="15.0" fill="rgb(237,90,25)" rx="2" ry="2" />
<text  x="716.94" y="271.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.12%)</title><rect x="340.9" y="181" width="1.5" height="15.0" fill="rgb(253,196,47)" rx="2" ry="2" />
<text  x="343.92" y="191.5" ></text>
</g>
<g >
<title>syscall.read (5 samples, 0.62%)</title><rect x="335.1" y="309" width="7.3" height="15.0" fill="rgb(235,85,38)" rx="2" ry="2" />
<text  x="338.12" y="319.5" ></text>
</g>
<g >
<title>runtime.gcstopm (1 samples, 0.12%)</title><rect x="1055.0" y="309" width="1.5" height="15.0" fill="rgb(239,3,22)" rx="2" ry="2" />
<text  x="1058.02" y="319.5" ></text>
</g>
<g >
<title>runtime.sysmon (80 samples, 9.84%)</title><rect x="1056.5" y="357" width="116.1" height="15.0" fill="rgb(236,209,29)" rx="2" ry="2" />
<text  x="1059.47" y="367.5" >runtime.sysmon</text>
</g>
<g >
<title>github.com/golang/snappy.Encode (1 samples, 0.12%)</title><rect x="11.5" y="325" width="1.4" height="15.0" fill="rgb(252,204,43)" rx="2" ry="2" />
<text  x="14.45" y="335.5" ></text>
</g>
<g >
<title>crypto/rsa.decryptAndCheck (156 samples, 19.19%)</title><rect x="355.4" y="293" width="226.5" height="15.0" fill="rgb(205,21,49)" rx="2" ry="2" />
<text  x="358.44" y="303.5" >crypto/rsa.decryptAndCheck</text>
</g>
<g >
<title>runtime.notetsleep_internal (9 samples, 1.11%)</title><rect x="1062.3" y="325" width="13.0" height="15.0" fill="rgb(252,95,18)" rx="2" ry="2" />
<text  x="1065.28" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.25%)</title><rect x="284.3" y="261" width="2.9" height="15.0" fill="rgb(232,119,45)" rx="2" ry="2" />
<text  x="287.32" y="271.5" ></text>
</g>
<g >
<title>runtime.schedule (61 samples, 7.50%)</title><rect x="966.5" y="357" width="88.5" height="15.0" fill="rgb(206,57,22)" rx="2" ry="2" />
<text  x="969.48" y="367.5" >runtime.sc..</text>
</g>
<g >
<title>math/big.(*Int).lehmerGCD (13 samples, 1.60%)</title><rect x="191.4" y="213" width="18.9" height="15.0" fill="rgb(207,179,4)" rx="2" ry="2" />
<text  x="194.43" y="223.5" ></text>
</g>
<g >
<title>math/big.basicMul (1 samples, 0.12%)</title><rect x="219.0" y="197" width="1.5" height="15.0" fill="rgb(230,5,38)" rx="2" ry="2" />
<text  x="222.00" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).scavenge (1 samples, 0.12%)</title><rect x="877.9" y="197" width="1.5" height="15.0" fill="rgb(205,189,1)" rx="2" ry="2" />
<text  x="880.95" y="207.5" ></text>
</g>
<g >
<title>runtime.funcdata (1 samples, 0.12%)</title><rect x="909.9" y="197" width="1.4" height="15.0" fill="rgb(238,223,1)" rx="2" ry="2" />
<text  x="912.88" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).coalesce.func1 (2 samples, 0.25%)</title><rect x="896.8" y="133" width="2.9" height="15.0" fill="rgb(238,109,11)" rx="2" ry="2" />
<text  x="899.81" y="143.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="741.5" y="341" width="1.5" height="15.0" fill="rgb(227,204,6)" rx="2" ry="2" />
<text  x="744.51" y="351.5" ></text>
</g>
<g >
<title>encoding/json.cachedTypeFields (1 samples, 0.12%)</title><rect x="702.3" y="309" width="1.5" height="15.0" fill="rgb(220,34,39)" rx="2" ry="2" />
<text  x="705.32" y="319.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 0.37%)</title><rect x="1182.7" y="325" width="4.4" height="15.0" fill="rgb(253,205,5)" rx="2" ry="2" />
<text  x="1185.74" y="335.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Hash (2 samples, 0.25%)</title><rect x="352.5" y="341" width="2.9" height="15.0" fill="rgb(211,67,50)" rx="2" ry="2" />
<text  x="355.53" y="351.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.12%)</title><rect x="576.1" y="181" width="1.4" height="15.0" fill="rgb(223,141,52)" rx="2" ry="2" />
<text  x="579.05" y="191.5" ></text>
</g>
<g >
<title>math/big.nat.make (1 samples, 0.12%)</title><rect x="210.3" y="213" width="1.4" height="15.0" fill="rgb(234,33,16)" rx="2" ry="2" />
<text  x="213.30" y="223.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.UnMarshalProposalMessage (10 samples, 1.23%)</title><rect x="281.4" y="341" width="14.5" height="15.0" fill="rgb(237,27,20)" rx="2" ry="2" />
<text  x="284.41" y="351.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (1 samples, 0.12%)</title><rect x="348.2" y="213" width="1.4" height="15.0" fill="rgb(229,90,8)" rx="2" ry="2" />
<text  x="351.18" y="223.5" ></text>
</g>
<g >
<title>encoding/json.typeEncoder (1 samples, 0.12%)</title><rect x="14.4" y="293" width="1.4" height="15.0" fill="rgb(209,200,4)" rx="2" ry="2" />
<text  x="17.35" y="303.5" ></text>
</g>
<g >
<title>math/big.nat.sub (2 samples, 0.25%)</title><rect x="205.9" y="165" width="2.9" height="15.0" fill="rgb(206,111,25)" rx="2" ry="2" />
<text  x="208.94" y="175.5" ></text>
</g>
<g >
<title>math/big.(*Int).QuoRem (3 samples, 0.37%)</title><rect x="545.6" y="245" width="4.3" height="15.0" fill="rgb(216,169,5)" rx="2" ry="2" />
<text  x="548.57" y="255.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.12%)</title><rect x="349.6" y="229" width="1.5" height="15.0" fill="rgb(234,187,31)" rx="2" ry="2" />
<text  x="352.63" y="239.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.12%)</title><rect x="352.5" y="293" width="1.5" height="15.0" fill="rgb(231,27,47)" rx="2" ry="2" />
<text  x="355.53" y="303.5" ></text>
</g>
<g >
<title>encoding/json.stateInString (1 samples, 0.12%)</title><rect x="709.6" y="341" width="1.4" height="15.0" fill="rgb(220,116,19)" rx="2" ry="2" />
<text  x="712.58" y="351.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="210.3" y="149" width="1.4" height="15.0" fill="rgb(214,195,37)" rx="2" ry="2" />
<text  x="213.30" y="159.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (1 samples, 0.12%)</title><rect x="300.3" y="261" width="1.4" height="15.0" fill="rgb(208,193,27)" rx="2" ry="2" />
<text  x="303.28" y="271.5" ></text>
</g>
<g >
<title>runtime.(*timersBucket).addtimerLocked (2 samples, 0.25%)</title><rect x="246.6" y="325" width="2.9" height="15.0" fill="rgb(224,19,38)" rx="2" ry="2" />
<text  x="249.58" y="335.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.25%)</title><rect x="862.0" y="197" width="2.9" height="15.0" fill="rgb(206,94,29)" rx="2" ry="2" />
<text  x="864.98" y="207.5" ></text>
</g>
<g >
<title>runtime.ready (3 samples, 0.37%)</title><rect x="864.9" y="277" width="4.3" height="15.0" fill="rgb(241,228,6)" rx="2" ry="2" />
<text  x="867.88" y="287.5" ></text>
</g>
<g >
<title>sync.runtime_procPin (1 samples, 0.12%)</title><rect x="695.1" y="277" width="1.4" height="15.0" fill="rgb(207,97,12)" rx="2" ry="2" />
<text  x="698.07" y="287.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (51 samples, 6.27%)</title><rect x="98.5" y="181" width="74.1" height="15.0" fill="rgb(219,163,5)" rx="2" ry="2" />
<text  x="101.54" y="191.5" >math/big..</text>
</g>
<g >
<title>reflect.deepValueEqual (2 samples, 0.25%)</title><rect x="250.9" y="293" width="2.9" height="15.0" fill="rgb(250,95,31)" rx="2" ry="2" />
<text  x="253.93" y="303.5" ></text>
</g>
<g >
<title>runtime.growslice (2 samples, 0.25%)</title><rect x="774.9" y="293" width="2.9" height="15.0" fill="rgb(239,87,14)" rx="2" ry="2" />
<text  x="777.90" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (1 samples, 0.12%)</title><rect x="1055.0" y="213" width="1.5" height="15.0" fill="rgb(249,76,13)" rx="2" ry="2" />
<text  x="1058.02" y="223.5" ></text>
</g>
<g >
<title>runtime.(*_type).typeOff (1 samples, 0.12%)</title><rect x="311.9" y="165" width="1.4" height="15.0" fill="rgb(213,118,17)" rx="2" ry="2" />
<text  x="314.89" y="175.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.12%)</title><rect x="684.9" y="229" width="1.5" height="15.0" fill="rgb(248,111,36)" rx="2" ry="2" />
<text  x="687.91" y="239.5" ></text>
</g>
<g >
<title>runtime.newproc1 (4 samples, 0.49%)</title><rect x="628.3" y="309" width="5.8" height="15.0" fill="rgb(229,223,6)" rx="2" ry="2" />
<text  x="631.30" y="319.5" ></text>
</g>
<g >
<title>runtime.sysUnused (1 samples, 0.12%)</title><rect x="877.9" y="181" width="1.5" height="15.0" fill="rgb(223,88,10)" rx="2" ry="2" />
<text  x="880.95" y="191.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="738.6" y="325" width="1.5" height="15.0" fill="rgb(218,171,11)" rx="2" ry="2" />
<text  x="741.61" y="335.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.12%)</title><rect x="290.1" y="229" width="1.5" height="15.0" fill="rgb(224,95,23)" rx="2" ry="2" />
<text  x="293.12" y="239.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.12%)</title><rect x="237.9" y="197" width="1.4" height="15.0" fill="rgb(208,172,52)" rx="2" ry="2" />
<text  x="240.87" y="207.5" ></text>
</g>
<g >
<title>syscall.Syscall (27 samples, 3.32%)</title><rect x="825.7" y="293" width="39.2" height="15.0" fill="rgb(225,139,3)" rx="2" ry="2" />
<text  x="828.69" y="303.5" >sys..</text>
</g>
<g >
<title>encoding/json.checkValid (3 samples, 0.37%)</title><rect x="706.7" y="357" width="4.3" height="15.0" fill="rgb(236,67,33)" rx="2" ry="2" />
<text  x="709.68" y="367.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalMessage).Hash (2 samples, 0.25%)</title><rect x="581.9" y="325" width="2.9" height="15.0" fill="rgb(218,29,43)" rx="2" ry="2" />
<text  x="584.86" y="335.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.25%)</title><rect x="862.0" y="245" width="2.9" height="15.0" fill="rgb(205,205,26)" rx="2" ry="2" />
<text  x="864.98" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.12%)</title><rect x="34.7" y="69" width="1.4" height="15.0" fill="rgb(248,84,30)" rx="2" ry="2" />
<text  x="37.67" y="79.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (1 samples, 0.12%)</title><rect x="242.2" y="245" width="1.5" height="15.0" fill="rgb(229,213,3)" rx="2" ry="2" />
<text  x="245.23" y="255.5" ></text>
</g>
<g >
<title>runtime.ready (2 samples, 0.25%)</title><rect x="329.3" y="277" width="2.9" height="15.0" fill="rgb(236,0,32)" rx="2" ry="2" />
<text  x="332.31" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (2 samples, 0.25%)</title><rect x="621.0" y="309" width="2.9" height="15.0" fill="rgb(226,154,27)" rx="2" ry="2" />
<text  x="624.05" y="319.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="718.3" y="277" width="1.4" height="15.0" fill="rgb(209,207,42)" rx="2" ry="2" />
<text  x="721.29" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (2 samples, 0.25%)</title><rect x="896.8" y="277" width="2.9" height="15.0" fill="rgb(219,59,45)" rx="2" ry="2" />
<text  x="899.81" y="287.5" ></text>
</g>
<g >
<title>github.com/sasha-s/go-deadlock.lock (1 samples, 0.12%)</title><rect x="237.9" y="309" width="1.4" height="15.0" fill="rgb(254,124,13)" rx="2" ry="2" />
<text  x="240.87" y="319.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.12%)</title><rect x="967.9" y="309" width="1.5" height="15.0" fill="rgb(215,41,14)" rx="2" ry="2" />
<text  x="970.93" y="319.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="349.6" y="261" width="1.5" height="15.0" fill="rgb(219,133,20)" rx="2" ry="2" />
<text  x="352.63" y="271.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (4 samples, 0.49%)</title><rect x="909.9" y="229" width="5.8" height="15.0" fill="rgb(208,136,34)" rx="2" ry="2" />
<text  x="912.88" y="239.5" ></text>
</g>
<g >
<title>encoding/json.valueEncoder (1 samples, 0.12%)</title><rect x="14.4" y="309" width="1.4" height="15.0" fill="rgb(241,133,38)" rx="2" ry="2" />
<text  x="17.35" y="319.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (21 samples, 2.58%)</title><rect x="298.8" y="373" width="30.5" height="15.0" fill="rgb(206,57,3)" rx="2" ry="2" />
<text  x="301.83" y="383.5" >en..</text>
</g>
<g >
<title>BCDns_0.1/certificateAuthority/service.(*CAX509).VerifySignature (37 samples, 4.55%)</title><rect x="634.1" y="357" width="53.7" height="15.0" fill="rgb(214,123,2)" rx="2" ry="2" />
<text  x="637.11" y="367.5" >BCDns..</text>
</g>
<g >
<title>fmt.Println (9 samples, 1.11%)</title><rect x="715.4" y="373" width="13.1" height="15.0" fill="rgb(229,80,29)" rx="2" ry="2" />
<text  x="718.39" y="383.5" ></text>
</g>
<g >
<title>encoding/json.typeEncoder (1 samples, 0.12%)</title><rect x="221.9" y="229" width="1.5" height="15.0" fill="rgb(253,129,38)" rx="2" ry="2" />
<text  x="224.91" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (2 samples, 0.25%)</title><rect x="876.5" y="245" width="2.9" height="15.0" fill="rgb(244,180,0)" rx="2" ry="2" />
<text  x="879.49" y="255.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.25%)</title><rect x="329.3" y="197" width="2.9" height="15.0" fill="rgb(242,155,16)" rx="2" ry="2" />
<text  x="332.31" y="207.5" ></text>
</g>
<g >
<title>math/big.addMulVVW (1 samples, 0.12%)</title><rect x="680.6" y="245" width="1.4" height="15.0" fill="rgb(205,45,41)" rx="2" ry="2" />
<text  x="683.55" y="255.5" ></text>
</g>
<g >
<title>syscall.write (5 samples, 0.62%)</title><rect x="721.2" y="277" width="7.3" height="15.0" fill="rgb(251,93,40)" rx="2" ry="2" />
<text  x="724.19" y="287.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.25%)</title><rect x="785.1" y="341" width="2.9" height="15.0" fill="rgb(245,120,20)" rx="2" ry="2" />
<text  x="788.06" y="351.5" ></text>
</g>
<g >
<title>github.com/syndtr/goleveldb/leveldb.(*DB).Get (1 samples, 0.12%)</title><rect x="349.6" y="293" width="1.5" height="15.0" fill="rgb(252,210,4)" rx="2" ry="2" />
<text  x="352.63" y="303.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.12%)</title><rect x="245.1" y="341" width="1.5" height="15.0" fill="rgb(218,188,51)" rx="2" ry="2" />
<text  x="248.13" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (1 samples, 0.12%)</title><rect x="1055.0" y="165" width="1.5" height="15.0" fill="rgb(241,161,24)" rx="2" ry="2" />
<text  x="1058.02" y="175.5" ></text>
</g>
<g >
<title>math/big.nat.expNNMontgomery (121 samples, 14.88%)</title><rect x="367.0" y="229" width="175.7" height="15.0" fill="rgb(213,16,17)" rx="2" ry="2" />
<text  x="370.05" y="239.5" >math/big.nat.expNNMont..</text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.12%)</title><rect x="703.8" y="309" width="1.4" height="15.0" fill="rgb(240,116,19)" rx="2" ry="2" />
<text  x="706.78" y="319.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (4 samples, 0.49%)</title><rect x="879.4" y="277" width="5.8" height="15.0" fill="rgb(228,83,37)" rx="2" ry="2" />
<text  x="882.40" y="287.5" ></text>
</g>
<g >
<title>io.ReadFull (2 samples, 0.25%)</title><rect x="355.4" y="245" width="2.9" height="15.0" fill="rgb(215,69,15)" rx="2" ry="2" />
<text  x="358.44" y="255.5" ></text>
</g>
<g >
<title>math/big.nat.cmp (1 samples, 0.12%)</title><rect x="560.1" y="181" width="1.4" height="15.0" fill="rgb(231,11,14)" rx="2" ry="2" />
<text  x="563.09" y="191.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (1 samples, 0.12%)</title><rect x="699.4" y="245" width="1.5" height="15.0" fill="rgb(211,214,54)" rx="2" ry="2" />
<text  x="702.42" y="255.5" ></text>
</g>
<g >
<title>runtime.makeslice (8 samples, 0.98%)</title><rect x="873.6" y="373" width="11.6" height="15.0" fill="rgb(242,159,6)" rx="2" ry="2" />
<text  x="876.59" y="383.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (2 samples, 0.25%)</title><rect x="12.9" y="357" width="2.9" height="15.0" fill="rgb(246,83,37)" rx="2" ry="2" />
<text  x="15.90" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.12%)</title><rect x="783.6" y="309" width="1.5" height="15.0" fill="rgb(246,115,23)" rx="2" ry="2" />
<text  x="786.60" y="319.5" ></text>
</g>
<g >
<title>internal/reflectlite.Swapper (1 samples, 0.12%)</title><rect x="352.5" y="245" width="1.5" height="15.0" fill="rgb(224,96,53)" rx="2" ry="2" />
<text  x="355.53" y="255.5" ></text>
</g>
<g >
<title>runtime.runqsteal (12 samples, 1.48%)</title><rect x="1001.3" y="325" width="17.4" height="15.0" fill="rgb(243,140,23)" rx="2" ry="2" />
<text  x="1004.32" y="335.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.12%)</title><rect x="737.2" y="277" width="1.4" height="15.0" fill="rgb(227,134,10)" rx="2" ry="2" />
<text  x="740.16" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.12%)</title><rect x="761.8" y="277" width="1.5" height="15.0" fill="rgb(217,75,51)" rx="2" ry="2" />
<text  x="764.83" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (19 samples, 2.34%)</title><rect x="743.0" y="325" width="27.5" height="15.0" fill="rgb(213,182,29)" rx="2" ry="2" />
<text  x="745.96" y="335.5" >e..</text>
</g>
<g >
<title>runtime.(*randomEnum).next (3 samples, 0.37%)</title><rect x="975.2" y="325" width="4.3" height="15.0" fill="rgb(254,5,43)" rx="2" ry="2" />
<text  x="978.19" y="335.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (7 samples, 0.86%)</title><rect x="227.7" y="277" width="10.2" height="15.0" fill="rgb(225,31,22)" rx="2" ry="2" />
<text  x="230.71" y="287.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (1 samples, 0.12%)</title><rect x="625.4" y="357" width="1.5" height="15.0" fill="rgb(221,229,18)" rx="2" ry="2" />
<text  x="628.40" y="367.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.12%)</title><rect x="737.2" y="245" width="1.4" height="15.0" fill="rgb(225,84,3)" rx="2" ry="2" />
<text  x="740.16" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (3 samples, 0.37%)</title><rect x="891.0" y="357" width="4.4" height="15.0" fill="rgb(225,143,20)" rx="2" ry="2" />
<text  x="894.01" y="367.5" ></text>
</g>
<g >
<title>fmt.(*pp).printValue (3 samples, 0.37%)</title><rect x="711.0" y="309" width="4.4" height="15.0" fill="rgb(221,81,26)" rx="2" ry="2" />
<text  x="714.03" y="319.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.12%)</title><rect x="237.9" y="165" width="1.4" height="15.0" fill="rgb(226,168,52)" rx="2" ry="2" />
<text  x="240.87" y="175.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.12%)</title><rect x="686.4" y="117" width="1.4" height="15.0" fill="rgb(231,79,43)" rx="2" ry="2" />
<text  x="689.36" y="127.5" ></text>
</g>
<g >
<title>strconv.AppendInt (1 samples, 0.12%)</title><rect x="693.6" y="261" width="1.5" height="15.0" fill="rgb(254,13,51)" rx="2" ry="2" />
<text  x="696.62" y="271.5" ></text>
</g>
<g >
<title>runtime.runqgrab (12 samples, 1.48%)</title><rect x="1001.3" y="309" width="17.4" height="15.0" fill="rgb(238,197,18)" rx="2" ry="2" />
<text  x="1004.32" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Node).ProcessBlockMessage (3 samples, 0.37%)</title><rect x="249.5" y="373" width="4.3" height="15.0" fill="rgb(221,74,36)" rx="2" ry="2" />
<text  x="252.48" y="383.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (1 samples, 0.12%)</title><rect x="216.1" y="181" width="1.5" height="15.0" fill="rgb(219,43,36)" rx="2" ry="2" />
<text  x="219.10" y="191.5" ></text>
</g>
<g >
<title>runtime.mput (1 samples, 0.12%)</title><rect x="1024.5" y="309" width="1.5" height="15.0" fill="rgb(207,145,5)" rx="2" ry="2" />
<text  x="1027.54" y="319.5" ></text>
</g>
<g >
<title>syscall.read (27 samples, 3.32%)</title><rect x="825.7" y="309" width="39.2" height="15.0" fill="rgb(251,214,54)" rx="2" ry="2" />
<text  x="828.69" y="319.5" >sys..</text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (2 samples, 0.25%)</title><rect x="12.9" y="325" width="2.9" height="15.0" fill="rgb(212,203,10)" rx="2" ry="2" />
<text  x="15.90" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.25%)</title><rect x="21.6" y="245" width="2.9" height="15.0" fill="rgb(222,121,12)" rx="2" ry="2" />
<text  x="24.61" y="255.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.12%)</title><rect x="191.4" y="53" width="1.5" height="15.0" fill="rgb(247,176,45)" rx="2" ry="2" />
<text  x="194.43" y="63.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.12%)</title><rect x="737.2" y="229" width="1.4" height="15.0" fill="rgb(222,182,0)" rx="2" ry="2" />
<text  x="740.16" y="239.5" ></text>
</g>
<g >
<title>math/big.nat.sqr (1 samples, 0.12%)</title><rect x="219.0" y="213" width="1.5" height="15.0" fill="rgb(235,20,37)" rx="2" ry="2" />
<text  x="222.00" y="223.5" ></text>
</g>
<g >
<title>github.com/boltdb/bolt.(*DB).View (1 samples, 0.12%)</title><rect x="348.2" y="261" width="1.4" height="15.0" fill="rgb(215,93,17)" rx="2" ry="2" />
<text  x="351.18" y="271.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (2 samples, 0.25%)</title><rect x="767.6" y="293" width="2.9" height="15.0" fill="rgb(223,122,43)" rx="2" ry="2" />
<text  x="770.64" y="303.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.(*Blockchain).AddBlock.func1 (4 samples, 0.49%)</title><rect x="15.8" y="325" width="5.8" height="15.0" fill="rgb(235,211,27)" rx="2" ry="2" />
<text  x="18.81" y="335.5" ></text>
</g>
<g >
<title>runtime.nilinterhash (1 samples, 0.12%)</title><rect x="702.3" y="261" width="1.5" height="15.0" fill="rgb(217,227,13)" rx="2" ry="2" />
<text  x="705.32" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.12%)</title><rect x="895.4" y="245" width="1.4" height="15.0" fill="rgb(229,51,44)" rx="2" ry="2" />
<text  x="898.36" y="255.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.25%)</title><rect x="1175.5" y="293" width="2.9" height="15.0" fill="rgb(246,209,50)" rx="2" ry="2" />
<text  x="1178.49" y="303.5" ></text>
</g>
<g >
<title>runtime.newproc (4 samples, 0.49%)</title><rect x="628.3" y="357" width="5.8" height="15.0" fill="rgb(226,40,23)" rx="2" ry="2" />
<text  x="631.30" y="367.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (1 samples, 0.12%)</title><rect x="364.1" y="165" width="1.5" height="15.0" fill="rgb(208,38,44)" rx="2" ry="2" />
<text  x="367.15" y="175.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.12%)</title><rect x="918.6" y="277" width="1.4" height="15.0" fill="rgb(242,120,34)" rx="2" ry="2" />
<text  x="921.59" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.25%)</title><rect x="584.8" y="293" width="2.9" height="15.0" fill="rgb(210,67,17)" rx="2" ry="2" />
<text  x="587.76" y="303.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.37%)</title><rect x="342.4" y="245" width="4.3" height="15.0" fill="rgb(211,185,53)" rx="2" ry="2" />
<text  x="345.37" y="255.5" ></text>
</g>
<g >
<title>strconv.ParseInt (1 samples, 0.12%)</title><rect x="307.5" y="277" width="1.5" height="15.0" fill="rgb(220,141,34)" rx="2" ry="2" />
<text  x="310.54" y="287.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.12%)</title><rect x="1055.0" y="325" width="1.5" height="15.0" fill="rgb(237,123,3)" rx="2" ry="2" />
<text  x="1058.02" y="335.5" ></text>
</g>
<g >
<title>math/big.basicMul (3 samples, 0.37%)</title><rect x="682.0" y="261" width="4.4" height="15.0" fill="rgb(254,88,5)" rx="2" ry="2" />
<text  x="685.00" y="271.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (28 samples, 3.44%)</title><rect x="824.2" y="341" width="40.7" height="15.0" fill="rgb(211,212,19)" rx="2" ry="2" />
<text  x="827.24" y="351.5" >int..</text>
</g>
<g >
<title>internal/poll.(*FD).writeUnlock (1 samples, 0.12%)</title><rect x="790.9" y="293" width="1.4" height="15.0" fill="rgb(238,55,27)" rx="2" ry="2" />
<text  x="793.86" y="303.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (3 samples, 0.37%)</title><rect x="629.8" y="245" width="4.3" height="15.0" fill="rgb(226,13,43)" rx="2" ry="2" />
<text  x="632.75" y="255.5" ></text>
</g>
<g >
<title>syscall.Write (5 samples, 0.62%)</title><rect x="721.2" y="293" width="7.3" height="15.0" fill="rgb(223,58,1)" rx="2" ry="2" />
<text  x="724.19" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.25%)</title><rect x="870.7" y="309" width="2.9" height="15.0" fill="rgb(229,183,8)" rx="2" ry="2" />
<text  x="873.69" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.12%)</title><rect x="280.0" y="309" width="1.4" height="15.0" fill="rgb(206,152,13)" rx="2" ry="2" />
<text  x="282.96" y="319.5" ></text>
</g>
<g >
<title>net.(*conn).Write (7 samples, 0.86%)</title><rect x="227.7" y="309" width="10.2" height="15.0" fill="rgb(247,171,9)" rx="2" ry="2" />
<text  x="230.71" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (1 samples, 0.12%)</title><rect x="300.3" y="229" width="1.4" height="15.0" fill="rgb(251,110,17)" rx="2" ry="2" />
<text  x="303.28" y="239.5" ></text>
</g>
<g >
<title>runtime.mapassign (1 samples, 0.12%)</title><rect x="700.9" y="245" width="1.4" height="15.0" fill="rgb(213,8,45)" rx="2" ry="2" />
<text  x="703.87" y="255.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.25%)</title><rect x="246.6" y="293" width="2.9" height="15.0" fill="rgb(247,30,1)" rx="2" ry="2" />
<text  x="249.58" y="303.5" ></text>
</g>
<g >
<title>syscall.Syscall (2 samples, 0.25%)</title><rect x="355.4" y="149" width="2.9" height="15.0" fill="rgb(236,175,1)" rx="2" ry="2" />
<text  x="358.44" y="159.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.12%)</title><rect x="917.1" y="277" width="1.5" height="15.0" fill="rgb(211,75,20)" rx="2" ry="2" />
<text  x="920.13" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.12%)</title><rect x="210.3" y="117" width="1.4" height="15.0" fill="rgb(247,197,49)" rx="2" ry="2" />
<text  x="213.30" y="127.5" ></text>
</g>
<g >
<title>BCDns_0.1/dao.(*DAO).GetZoneName (3 samples, 0.37%)</title><rect x="348.2" y="341" width="4.3" height="15.0" fill="rgb(228,206,23)" rx="2" ry="2" />
<text  x="351.18" y="351.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (1 samples, 0.12%)</title><rect x="548.5" y="197" width="1.4" height="15.0" fill="rgb(239,86,35)" rx="2" ry="2" />
<text  x="551.47" y="207.5" ></text>
</g>
<g >
<title>math/big.mulAddVWW (1 samples, 0.12%)</title><rect x="362.7" y="197" width="1.4" height="15.0" fill="rgb(219,89,17)" rx="2" ry="2" />
<text  x="365.69" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="700.9" y="213" width="1.4" height="15.0" fill="rgb(247,210,36)" rx="2" ry="2" />
<text  x="703.87" y="223.5" ></text>
</g>
<g >
<title>math/big.nat.clear (7 samples, 0.86%)</title><rect x="172.6" y="181" width="10.1" height="15.0" fill="rgb(215,17,26)" rx="2" ry="2" />
<text  x="175.56" y="191.5" ></text>
</g>
<g >
<title>crypto/rsa.decrypt (129 samples, 15.87%)</title><rect x="24.5" y="261" width="187.2" height="15.0" fill="rgb(227,25,34)" rx="2" ry="2" />
<text  x="27.51" y="271.5" >crypto/rsa.decrypt</text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.12%)</title><rect x="870.7" y="277" width="1.4" height="15.0" fill="rgb(254,19,3)" rx="2" ry="2" />
<text  x="873.69" y="287.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.12%)</title><rect x="790.9" y="213" width="1.4" height="15.0" fill="rgb(223,155,48)" rx="2" ry="2" />
<text  x="793.86" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="718.3" y="261" width="1.4" height="15.0" fill="rgb(224,85,52)" rx="2" ry="2" />
<text  x="721.29" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.12%)</title><rect x="741.5" y="325" width="1.5" height="15.0" fill="rgb(253,98,39)" rx="2" ry="2" />
<text  x="744.51" y="335.5" ></text>
</g>
<g >
<title>runtime.runqsteal (1 samples, 0.12%)</title><rect x="956.3" y="325" width="1.5" height="15.0" fill="rgb(245,117,43)" rx="2" ry="2" />
<text  x="959.32" y="335.5" ></text>
</g>
<g >
<title>runtime.usleep (64 samples, 7.87%)</title><rect x="1079.7" y="341" width="92.9" height="15.0" fill="rgb(219,63,47)" rx="2" ry="2" />
<text  x="1082.69" y="351.5" >runtime.usl..</text>
</g>
<g >
<title>reflect.mapassign (1 samples, 0.12%)</title><rect x="700.9" y="261" width="1.4" height="15.0" fill="rgb(247,174,2)" rx="2" ry="2" />
<text  x="703.87" y="271.5" ></text>
</g>
<g >
<title>reflect.New (1 samples, 0.12%)</title><rect x="17.3" y="133" width="1.4" height="15.0" fill="rgb(223,179,15)" rx="2" ry="2" />
<text  x="20.26" y="143.5" ></text>
</g>
<g >
<title>os.(*File).Write (1 samples, 0.12%)</title><rect x="735.7" y="341" width="1.5" height="15.0" fill="rgb(211,91,23)" rx="2" ry="2" />
<text  x="738.71" y="351.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (36 samples, 4.43%)</title><rect x="634.1" y="309" width="52.3" height="15.0" fill="rgb(230,117,8)" rx="2" ry="2" />
<text  x="637.11" y="319.5" >math/..</text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.12%)</title><rect x="191.4" y="85" width="1.5" height="15.0" fill="rgb(230,101,19)" rx="2" ry="2" />
<text  x="194.43" y="95.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (1 samples, 0.12%)</title><rect x="290.1" y="277" width="1.5" height="15.0" fill="rgb(213,105,51)" rx="2" ry="2" />
<text  x="293.12" y="287.5" ></text>
</g>
<g >
<title>reflect.Value.Addr (1 samples, 0.12%)</title><rect x="757.5" y="245" width="1.4" height="15.0" fill="rgb(221,187,36)" rx="2" ry="2" />
<text  x="760.48" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (2 samples, 0.25%)</title><rect x="284.3" y="245" width="2.9" height="15.0" fill="rgb(227,27,30)" rx="2" ry="2" />
<text  x="287.32" y="255.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="686.4" y="229" width="1.4" height="15.0" fill="rgb(213,67,3)" rx="2" ry="2" />
<text  x="689.36" y="239.5" ></text>
</g>
<g >
<title>math/big.nat.montgomery (99 samples, 12.18%)</title><rect x="43.4" y="197" width="143.7" height="15.0" fill="rgb(205,212,38)" rx="2" ry="2" />
<text  x="46.38" y="207.5" >math/big.nat.montg..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="252.4" y="213" width="1.4" height="15.0" fill="rgb(231,140,36)" rx="2" ry="2" />
<text  x="255.39" y="223.5" ></text>
</g>
<g >
<title>reflect.(*rtype).NumMethod (1 samples, 0.12%)</title><rect x="310.4" y="229" width="1.5" height="15.0" fill="rgb(234,111,30)" rx="2" ry="2" />
<text  x="313.44" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.12%)</title><rect x="686.4" y="165" width="1.4" height="15.0" fill="rgb(221,144,35)" rx="2" ry="2" />
<text  x="689.36" y="175.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (12 samples, 1.48%)</title><rect x="298.8" y="325" width="17.4" height="15.0" fill="rgb(240,69,7)" rx="2" ry="2" />
<text  x="301.83" y="335.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.12%)</title><rect x="967.9" y="325" width="1.5" height="15.0" fill="rgb(238,18,15)" rx="2" ry="2" />
<text  x="970.93" y="335.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.37%)</title><rect x="342.4" y="261" width="4.3" height="15.0" fill="rgb(206,113,26)" rx="2" ry="2" />
<text  x="345.37" y="271.5" ></text>
</g>
<g >
<title>BCDns_0.1/blockChain.UnMarshalBlockValidated (1 samples, 0.12%)</title><rect x="10.0" y="293" width="1.5" height="15.0" fill="rgb(245,82,37)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.12%)</title><rect x="1178.4" y="261" width="1.4" height="15.0" fill="rgb(207,44,36)" rx="2" ry="2" />
<text  x="1181.39" y="271.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (1 samples, 0.12%)</title><rect x="757.5" y="213" width="1.4" height="15.0" fill="rgb(244,182,46)" rx="2" ry="2" />
<text  x="760.48" y="223.5" ></text>
</g>
<g >
<title>crypto/sha256.(*digest).Write (1 samples, 0.12%)</title><rect x="687.8" y="325" width="1.5" height="15.0" fill="rgb(227,51,25)" rx="2" ry="2" />
<text  x="690.81" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="737.2" y="325" width="1.4" height="15.0" fill="rgb(207,166,18)" rx="2" ry="2" />
<text  x="740.16" y="335.5" ></text>
</g>
<g >
<title>runtime.futex (7 samples, 0.86%)</title><rect x="1063.7" y="293" width="10.2" height="15.0" fill="rgb(234,47,16)" rx="2" ry="2" />
<text  x="1066.73" y="303.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (2 samples, 0.25%)</title><rect x="21.6" y="293" width="2.9" height="15.0" fill="rgb(240,151,40)" rx="2" ry="2" />
<text  x="24.61" y="303.5" ></text>
</g>
<g >
<title>math/big.nat.mul (1 samples, 0.12%)</title><rect x="680.6" y="277" width="1.4" height="15.0" fill="rgb(227,153,40)" rx="2" ry="2" />
<text  x="683.55" y="287.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.12%)</title><rect x="718.3" y="245" width="1.4" height="15.0" fill="rgb(207,4,31)" rx="2" ry="2" />
<text  x="721.29" y="255.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (4 samples, 0.49%)</title><rect x="628.3" y="325" width="5.8" height="15.0" fill="rgb(213,192,49)" rx="2" ry="2" />
<text  x="631.30" y="335.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.25%)</title><rect x="1175.5" y="261" width="2.9" height="15.0" fill="rgb(235,95,10)" rx="2" ry="2" />
<text  x="1178.49" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.37%)</title><rect x="895.4" y="341" width="4.3" height="15.0" fill="rgb(243,14,39)" rx="2" ry="2" />
<text  x="898.36" y="351.5" ></text>
</g>
<g >
<title>math/big.shlVU (1 samples, 0.12%)</title><rect x="217.6" y="181" width="1.4" height="15.0" fill="rgb(242,158,50)" rx="2" ry="2" />
<text  x="220.55" y="191.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintf (3 samples, 0.37%)</title><rect x="711.0" y="341" width="4.4" height="15.0" fill="rgb(229,171,19)" rx="2" ry="2" />
<text  x="714.03" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).scanWhile (1 samples, 0.12%)</title><rect x="309.0" y="277" width="1.4" height="15.0" fill="rgb(214,22,40)" rx="2" ry="2" />
<text  x="311.99" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).removeSpan (1 samples, 0.12%)</title><rect x="898.3" y="117" width="1.4" height="15.0" fill="rgb(243,78,8)" rx="2" ry="2" />
<text  x="901.27" y="127.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.12%)</title><rect x="290.1" y="261" width="1.5" height="15.0" fill="rgb(245,80,46)" rx="2" ry="2" />
<text  x="293.12" y="271.5" ></text>
</g>
<g >
<title>runtime.futexsleep (2 samples, 0.25%)</title><rect x="957.8" y="293" width="2.9" height="15.0" fill="rgb(224,206,21)" rx="2" ry="2" />
<text  x="960.77" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (1 samples, 0.12%)</title><rect x="895.4" y="261" width="1.4" height="15.0" fill="rgb(217,78,38)" rx="2" ry="2" />
<text  x="898.36" y="271.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (3 samples, 0.37%)</title><rect x="1182.7" y="357" width="4.4" height="15.0" fill="rgb(206,115,28)" rx="2" ry="2" />
<text  x="1185.74" y="367.5" ></text>
</g>
<g >
<title>runtime.nilinterhash (1 samples, 0.12%)</title><rect x="14.4" y="245" width="1.4" height="15.0" fill="rgb(240,191,1)" rx="2" ry="2" />
<text  x="17.35" y="255.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (19 samples, 2.34%)</title><rect x="592.0" y="309" width="27.6" height="15.0" fill="rgb(207,82,0)" rx="2" ry="2" />
<text  x="595.02" y="319.5" >n..</text>
</g>
<g >
<title>sync.(*poolChain).popTail (1 samples, 0.12%)</title><rect x="657.3" y="197" width="1.5" height="15.0" fill="rgb(229,31,23)" rx="2" ry="2" />
<text  x="660.33" y="207.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.12%)</title><rect x="237.9" y="229" width="1.4" height="15.0" fill="rgb(226,114,32)" rx="2" ry="2" />
<text  x="240.87" y="239.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.37%)</title><rect x="1049.2" y="309" width="4.4" height="15.0" fill="rgb(249,11,42)" rx="2" ry="2" />
<text  x="1052.21" y="319.5" ></text>
</g>
<g >
<title>BCDns_0.1/messages.(*ProposalReplyMessage).Sign (139 samples, 17.10%)</title><rect x="24.5" y="325" width="201.8" height="15.0" fill="rgb(242,82,2)" rx="2" ry="2" />
<text  x="27.51" y="335.5" >BCDns_0.1/messages.(*Propo..</text>
</g>
<g >
<title>math/big.nat.div (2 samples, 0.25%)</title><rect x="295.9" y="277" width="2.9" height="15.0" fill="rgb(236,33,6)" rx="2" ry="2" />
<text  x="298.93" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="541.2" y="165" width="1.5" height="15.0" fill="rgb(224,178,19)" rx="2" ry="2" />
<text  x="544.22" y="175.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (3 samples, 0.37%)</title><rect x="1178.4" y="341" width="4.3" height="15.0" fill="rgb(247,120,4)" rx="2" ry="2" />
<text  x="1181.39" y="351.5" ></text>
</g>
<g >
<title>encoding/base64.(*Encoding).Decode (3 samples, 0.37%)</title><rect x="747.3" y="261" width="4.4" height="15.0" fill="rgb(252,53,54)" rx="2" ry="2" />
<text  x="750.32" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.12%)</title><rect x="783.6" y="277" width="1.5" height="15.0" fill="rgb(234,67,1)" rx="2" ry="2" />
<text  x="786.60" y="287.5" ></text>
</g>
<g >
<title>os.(*File).write (6 samples, 0.74%)</title><rect x="719.7" y="325" width="8.8" height="15.0" fill="rgb(236,90,15)" rx="2" ry="2" />
<text  x="722.74" y="335.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).buildIndex (1 samples, 0.12%)</title><rect x="904.1" y="261" width="1.4" height="15.0" fill="rgb(246,105,1)" rx="2" ry="2" />
<text  x="907.07" y="271.5" ></text>
</g>
<g >
<title>runtime.entersyscall_sysmon (2 samples, 0.25%)</title><rect x="339.5" y="229" width="2.9" height="15.0" fill="rgb(250,20,49)" rx="2" ry="2" />
<text  x="342.47" y="239.5" ></text>
</g>
<g >
<title>math/big.greaterThan (2 samples, 0.25%)</title><rect x="658.8" y="245" width="2.9" height="15.0" fill="rgb(221,93,34)" rx="2" ry="2" />
<text  x="661.78" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.12%)</title><rect x="191.4" y="69" width="1.5" height="15.0" fill="rgb(228,176,45)" rx="2" ry="2" />
<text  x="194.43" y="79.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (3 samples, 0.37%)</title><rect x="1049.2" y="277" width="4.4" height="15.0" fill="rgb(253,64,6)" rx="2" ry="2" />
<text  x="1052.21" y="287.5" ></text>
</g>
<g >
<title>runtime.(*treapNode).updateInvariants (1 samples, 0.12%)</title><rect x="891.0" y="261" width="1.5" height="15.0" fill="rgb(248,77,21)" rx="2" ry="2" />
<text  x="894.01" y="271.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (3 samples, 0.37%)</title><rect x="1178.4" y="357" width="4.3" height="15.0" fill="rgb(231,166,16)" rx="2" ry="2" />
<text  x="1181.39" y="367.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.12%)</title><rect x="23.1" y="165" width="1.4" height="15.0" fill="rgb(229,9,18)" rx="2" ry="2" />
<text  x="26.06" y="175.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.12%)</title><rect x="223.4" y="277" width="1.4" height="15.0" fill="rgb(249,30,50)" rx="2" ry="2" />
<text  x="226.36" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (12 samples, 1.48%)</title><rect x="298.8" y="341" width="17.4" height="15.0" fill="rgb(251,199,12)" rx="2" ry="2" />
<text  x="301.83" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (3 samples, 0.37%)</title><rect x="15.8" y="197" width="4.4" height="15.0" fill="rgb(215,224,35)" rx="2" ry="2" />
<text  x="18.81" y="207.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (2 samples, 0.25%)</title><rect x="21.6" y="277" width="2.9" height="15.0" fill="rgb(238,168,23)" rx="2" ry="2" />
<text  x="24.61" y="287.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="689.3" y="309" width="1.4" height="15.0" fill="rgb(242,156,9)" rx="2" ry="2" />
<text  x="692.26" y="319.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.12%)</title><rect x="224.8" y="277" width="1.5" height="15.0" fill="rgb(241,138,43)" rx="2" ry="2" />
<text  x="227.81" y="287.5" ></text>
</g>
<g >
<title>runtime.wakep (4 samples, 0.49%)</title><rect x="628.3" y="293" width="5.8" height="15.0" fill="rgb(231,206,13)" rx="2" ry="2" />
<text  x="631.30" y="303.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.12%)</title><rect x="1178.4" y="277" width="1.4" height="15.0" fill="rgb(232,127,47)" rx="2" ry="2" />
<text  x="1181.39" y="287.5" ></text>
</g>
<g >
<title>math/big.(*Int).Exp (112 samples, 13.78%)</title><rect x="28.9" y="245" width="162.5" height="15.0" fill="rgb(245,38,47)" rx="2" ry="2" />
<text  x="31.87" y="255.5" >math/big.(*Int).Exp</text>
</g>
<g >
<title>runtime.sweepone (3 samples, 0.37%)</title><rect x="891.0" y="373" width="4.4" height="15.0" fill="rgb(241,23,14)" rx="2" ry="2" />
<text  x="894.01" y="383.5" ></text>
</g>
<g >
<title>runtime.procresize (1 samples, 0.12%)</title><rect x="895.4" y="293" width="1.4" height="15.0" fill="rgb(245,26,1)" rx="2" ry="2" />
<text  x="898.36" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.12%)</title><rect x="625.4" y="325" width="1.5" height="15.0" fill="rgb(221,105,45)" rx="2" ry="2" />
<text  x="628.40" y="335.5" ></text>
</g>
<g >
<title>runtime.futex (16 samples, 1.97%)</title><rect x="1026.0" y="277" width="23.2" height="15.0" fill="rgb(231,144,3)" rx="2" ry="2" />
<text  x="1028.99" y="287.5" >r..</text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.12%)</title><rect x="12.9" y="165" width="1.5" height="15.0" fill="rgb(240,194,14)" rx="2" ry="2" />
<text  x="15.90" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).coalesce (2 samples, 0.25%)</title><rect x="896.8" y="149" width="2.9" height="15.0" fill="rgb(222,61,51)" rx="2" ry="2" />
<text  x="899.81" y="159.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="587.7" y="245" width="1.4" height="15.0" fill="rgb(222,56,40)" rx="2" ry="2" />
<text  x="590.66" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (2 samples, 0.25%)</title><rect x="21.6" y="197" width="2.9" height="15.0" fill="rgb(250,156,17)" rx="2" ry="2" />
<text  x="24.61" y="207.5" ></text>
</g>
<g >
<title>reflect.typedmemmove (1 samples, 0.12%)</title><rect x="713.9" y="213" width="1.5" height="15.0" fill="rgb(223,173,28)" rx="2" ry="2" />
<text  x="716.94" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (2 samples, 0.25%)</title><rect x="584.8" y="277" width="2.9" height="15.0" fill="rgb(239,170,27)" rx="2" ry="2" />
<text  x="587.76" y="287.5" ></text>
</g>
<g >
<title>runtime.entersyscall (3 samples, 0.37%)</title><rect x="860.5" y="277" width="4.4" height="15.0" fill="rgb(226,168,21)" rx="2" ry="2" />
<text  x="863.53" y="287.5" ></text>
</g>
<g >
<title>math/big.nat.expNN (2 samples, 0.25%)</title><rect x="295.9" y="293" width="2.9" height="15.0" fill="rgb(214,215,13)" rx="2" ry="2" />
<text  x="298.93" y="303.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.12%)</title><rect x="1023.1" y="165" width="1.4" height="15.0" fill="rgb(232,141,53)" rx="2" ry="2" />
<text  x="1026.09" y="175.5" ></text>
</g>
<g >
<title>math/big.(*Int).lehmerGCD (11 samples, 1.35%)</title><rect x="549.9" y="229" width="16.0" height="15.0" fill="rgb(237,58,26)" rx="2" ry="2" />
<text  x="552.93" y="239.5" ></text>
</g>
<g >
<title>runtime.largeAlloc (6 samples, 0.74%)</title><rect x="876.5" y="309" width="8.7" height="15.0" fill="rgb(244,116,24)" rx="2" ry="2" />
<text  x="879.49" y="319.5" ></text>
</g>
<g >
<title>all (813 samples, 100%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(245,191,33)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>BCDns_0.1/consensusMy/service.(*Proposer).timer (2 samples, 0.25%)</title><rect x="735.7" y="389" width="2.9" height="15.0" fill="rgb(242,166,9)" rx="2" ry="2" />
<text  x="738.71" y="399.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (1 samples, 0.12%)</title><rect x="587.7" y="309" width="1.4" height="15.0" fill="rgb(236,73,22)" rx="2" ry="2" />
<text  x="590.66" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.25%)</title><rect x="891.0" y="325" width="2.9" height="15.0" fill="rgb(241,25,8)" rx="2" ry="2" />
<text  x="894.01" y="335.5" ></text>
</g>
<g >
<title>BCDns_0.1/network/service.(*DNet).BroadCast (24 samples, 2.95%)</title><rect x="590.6" y="357" width="34.8" height="15.0" fill="rgb(244,218,15)" rx="2" ry="2" />
<text  x="593.57" y="367.5" >BC..</text>
</g>
<g >
<title>runtime.putempty (1 samples, 0.12%)</title><rect x="899.7" y="309" width="1.5" height="15.0" fill="rgb(210,42,7)" rx="2" ry="2" />
<text  x="902.72" y="319.5" ></text>
</g>
</g>
</svg>

